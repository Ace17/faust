//-----------------------------------------------------
//
// Code generated with Faust 0.9.70 (http://faust.grame.fr)
//-----------------------------------------------------
#ifndef FAUSTFLOAT
#define FAUSTFLOAT float
#endif  

typedef long double quad;
/* link with  */
#include <math.h>
#ifndef FAUSTPOWER
#define FAUSTPOWER
#include <cmath>
template <int N> inline float faustpower(float x)          { return powf(x,N); } 
template <int N> inline double faustpower(double x)        { return pow(x,N); }
template <int N> inline int faustpower(int x)              { return faustpower<N/2>(x) * faustpower<N-N/2>(x); } 
template <>   inline int faustpower<0>(int x)            { return 1; }
template <>   inline int faustpower<1>(int x)            { return x; }
#endif

#ifndef FAUSTCLASS 
#define FAUSTCLASS mydsp
#endif

class mydsp : public dsp {
  private:
	FAUSTFLOAT 	fcheckbox0;
	FAUSTFLOAT 	fslider0;
	int 	iConst0;
	float 	fConst1;
	FAUSTFLOAT 	fslider1;
	FAUSTFLOAT 	fslider2;
	FAUSTFLOAT 	fslider3;
	float 	fRec23[2];
	float 	fRec22[3];
	float 	fVec0[2];
	float 	fRec21[2];
	float 	fRec20[3];
	float 	fVec1[2];
	float 	fRec19[2];
	float 	fRec18[3];
	float 	fVec2[2];
	float 	fRec17[2];
	float 	fRec16[3];
	FAUSTFLOAT 	fslider4;
	FAUSTFLOAT 	fslider5;
	FAUSTFLOAT 	fslider6;
	float 	fConst2;
	float 	fConst3;
	float 	fRec25[2];
	float 	fRec24[3];
	FAUSTFLOAT 	fslider7;
	float 	fRec28[2];
	float 	fRec27[3];
	float 	fRec26[3];
	FAUSTFLOAT 	fslider8;
	float 	fRec32[2];
	float 	fRec31[3];
	float 	fRec30[3];
	float 	fRec29[3];
	FAUSTFLOAT 	fslider9;
	float 	fRec37[2];
	float 	fRec36[3];
	float 	fRec35[3];
	float 	fRec34[3];
	float 	fRec33[3];
	FAUSTFLOAT 	fslider10;
	float 	fRec45[2];
	float 	fRec44[3];
	float 	fVec3[2];
	float 	fRec43[2];
	float 	fRec42[3];
	float 	fVec4[2];
	float 	fRec41[2];
	float 	fRec40[3];
	float 	fVec5[2];
	float 	fRec39[2];
	float 	fRec38[3];
	float 	fRec47[2];
	float 	fRec46[3];
	float 	fRec50[2];
	float 	fRec49[3];
	float 	fRec48[3];
	float 	fRec54[2];
	float 	fRec53[3];
	float 	fRec52[3];
	float 	fRec51[3];
	float 	fRec59[2];
	float 	fRec58[3];
	float 	fRec57[3];
	float 	fRec56[3];
	float 	fRec55[3];
	float 	fRec67[2];
	float 	fRec66[3];
	float 	fVec6[2];
	float 	fRec65[2];
	float 	fRec64[3];
	float 	fVec7[2];
	float 	fRec63[2];
	float 	fRec62[3];
	float 	fVec8[2];
	float 	fRec61[2];
	float 	fRec60[3];
	float 	fRec69[2];
	float 	fRec68[3];
	float 	fRec72[2];
	float 	fRec71[3];
	float 	fRec70[3];
	float 	fRec76[2];
	float 	fRec75[3];
	float 	fRec74[3];
	float 	fRec73[3];
	float 	fRec81[2];
	float 	fRec80[3];
	float 	fRec79[3];
	float 	fRec78[3];
	float 	fRec77[3];
	float 	fRec89[2];
	float 	fRec88[3];
	float 	fVec9[2];
	float 	fRec87[2];
	float 	fRec86[3];
	float 	fVec10[2];
	float 	fRec85[2];
	float 	fRec84[3];
	float 	fVec11[2];
	float 	fRec83[2];
	float 	fRec82[3];
	float 	fRec91[2];
	float 	fRec90[3];
	float 	fRec94[2];
	float 	fRec93[3];
	float 	fRec92[3];
	float 	fRec98[2];
	float 	fRec97[3];
	float 	fRec96[3];
	float 	fRec95[3];
	float 	fRec103[2];
	float 	fRec102[3];
	float 	fRec101[3];
	float 	fRec100[3];
	float 	fRec99[3];
	float 	fRec111[2];
	float 	fRec110[3];
	float 	fVec12[2];
	float 	fRec109[2];
	float 	fRec108[3];
	float 	fVec13[2];
	float 	fRec107[2];
	float 	fRec106[3];
	float 	fVec14[2];
	float 	fRec105[2];
	float 	fRec104[3];
	float 	fRec113[2];
	float 	fRec112[3];
	float 	fRec116[2];
	float 	fRec115[3];
	float 	fRec114[3];
	float 	fRec120[2];
	float 	fRec119[3];
	float 	fRec118[3];
	float 	fRec117[3];
	float 	fRec125[2];
	float 	fRec124[3];
	float 	fRec123[3];
	float 	fRec122[3];
	float 	fRec121[3];
	float 	fRec133[2];
	float 	fRec132[3];
	float 	fVec15[2];
	float 	fRec131[2];
	float 	fRec130[3];
	float 	fVec16[2];
	float 	fRec129[2];
	float 	fRec128[3];
	float 	fVec17[2];
	float 	fRec127[2];
	float 	fRec126[3];
	float 	fRec135[2];
	float 	fRec134[3];
	float 	fRec138[2];
	float 	fRec137[3];
	float 	fRec136[3];
	float 	fRec142[2];
	float 	fRec141[3];
	float 	fRec140[3];
	float 	fRec139[3];
	float 	fRec147[2];
	float 	fRec146[3];
	float 	fRec145[3];
	float 	fRec144[3];
	float 	fRec143[3];
	float 	fRec155[2];
	float 	fRec154[3];
	float 	fVec18[2];
	float 	fRec153[2];
	float 	fRec152[3];
	float 	fVec19[2];
	float 	fRec151[2];
	float 	fRec150[3];
	float 	fVec20[2];
	float 	fRec149[2];
	float 	fRec148[3];
	float 	fRec157[2];
	float 	fRec156[3];
	float 	fRec160[2];
	float 	fRec159[3];
	float 	fRec158[3];
	float 	fRec164[2];
	float 	fRec163[3];
	float 	fRec162[3];
	float 	fRec161[3];
	float 	fRec169[2];
	float 	fRec168[3];
	float 	fRec167[3];
	float 	fRec166[3];
	float 	fRec165[3];
	float 	fRec177[2];
	float 	fRec176[3];
	float 	fVec21[2];
	float 	fRec175[2];
	float 	fRec174[3];
	float 	fVec22[2];
	float 	fRec173[2];
	float 	fRec172[3];
	float 	fVec23[2];
	float 	fRec171[2];
	float 	fRec170[3];
	float 	fRec179[2];
	float 	fRec178[3];
	float 	fRec182[2];
	float 	fRec181[3];
	float 	fRec180[3];
	float 	fRec186[2];
	float 	fRec185[3];
	float 	fRec184[3];
	float 	fRec183[3];
	float 	fRec191[2];
	float 	fRec190[3];
	float 	fRec189[3];
	float 	fRec188[3];
	float 	fRec187[3];
	float 	fRec199[2];
	float 	fRec198[3];
	float 	fVec24[2];
	float 	fRec197[2];
	float 	fRec196[3];
	float 	fVec25[2];
	float 	fRec195[2];
	float 	fRec194[3];
	float 	fVec26[2];
	float 	fRec193[2];
	float 	fRec192[3];
	float 	fRec201[2];
	float 	fRec200[3];
	float 	fRec204[2];
	float 	fRec203[3];
	float 	fRec202[3];
	float 	fRec208[2];
	float 	fRec207[3];
	float 	fRec206[3];
	float 	fRec205[3];
	float 	fRec213[2];
	float 	fRec212[3];
	float 	fRec211[3];
	float 	fRec210[3];
	float 	fRec209[3];
	float 	fRec221[2];
	float 	fRec220[3];
	float 	fVec27[2];
	float 	fRec219[2];
	float 	fRec218[3];
	float 	fVec28[2];
	float 	fRec217[2];
	float 	fRec216[3];
	float 	fVec29[2];
	float 	fRec215[2];
	float 	fRec214[3];
	float 	fRec223[2];
	float 	fRec222[3];
	float 	fRec226[2];
	float 	fRec225[3];
	float 	fRec224[3];
	float 	fRec230[2];
	float 	fRec229[3];
	float 	fRec228[3];
	float 	fRec227[3];
	float 	fRec235[2];
	float 	fRec234[3];
	float 	fRec233[3];
	float 	fRec232[3];
	float 	fRec231[3];
	float 	fRec243[2];
	float 	fRec242[3];
	float 	fVec30[2];
	float 	fRec241[2];
	float 	fRec240[3];
	float 	fVec31[2];
	float 	fRec239[2];
	float 	fRec238[3];
	float 	fVec32[2];
	float 	fRec237[2];
	float 	fRec236[3];
	float 	fRec245[2];
	float 	fRec244[3];
	float 	fRec248[2];
	float 	fRec247[3];
	float 	fRec246[3];
	float 	fRec252[2];
	float 	fRec251[3];
	float 	fRec250[3];
	float 	fRec249[3];
	float 	fRec257[2];
	float 	fRec256[3];
	float 	fRec255[3];
	float 	fRec254[3];
	float 	fRec253[3];
	float 	fRec265[2];
	float 	fRec264[3];
	float 	fVec33[2];
	float 	fRec263[2];
	float 	fRec262[3];
	float 	fVec34[2];
	float 	fRec261[2];
	float 	fRec260[3];
	float 	fVec35[2];
	float 	fRec259[2];
	float 	fRec258[3];
	float 	fRec267[2];
	float 	fRec266[3];
	float 	fRec270[2];
	float 	fRec269[3];
	float 	fRec268[3];
	float 	fRec274[2];
	float 	fRec273[3];
	float 	fRec272[3];
	float 	fRec271[3];
	float 	fRec279[2];
	float 	fRec278[3];
	float 	fRec277[3];
	float 	fRec276[3];
	float 	fRec275[3];
	float 	fRec287[2];
	float 	fRec286[3];
	float 	fVec36[2];
	float 	fRec285[2];
	float 	fRec284[3];
	float 	fVec37[2];
	float 	fRec283[2];
	float 	fRec282[3];
	float 	fVec38[2];
	float 	fRec281[2];
	float 	fRec280[3];
	float 	fRec289[2];
	float 	fRec288[3];
	float 	fRec292[2];
	float 	fRec291[3];
	float 	fRec290[3];
	float 	fRec296[2];
	float 	fRec295[3];
	float 	fRec294[3];
	float 	fRec293[3];
	float 	fRec301[2];
	float 	fRec300[3];
	float 	fRec299[3];
	float 	fRec298[3];
	float 	fRec297[3];
	float 	fRec309[2];
	float 	fRec308[3];
	float 	fVec39[2];
	float 	fRec307[2];
	float 	fRec306[3];
	float 	fVec40[2];
	float 	fRec305[2];
	float 	fRec304[3];
	float 	fVec41[2];
	float 	fRec303[2];
	float 	fRec302[3];
	float 	fRec311[2];
	float 	fRec310[3];
	float 	fRec314[2];
	float 	fRec313[3];
	float 	fRec312[3];
	float 	fRec318[2];
	float 	fRec317[3];
	float 	fRec316[3];
	float 	fRec315[3];
	float 	fRec323[2];
	float 	fRec322[3];
	float 	fRec321[3];
	float 	fRec320[3];
	float 	fRec319[3];
	float 	fRec331[2];
	float 	fRec330[3];
	float 	fVec42[2];
	float 	fRec329[2];
	float 	fRec328[3];
	float 	fVec43[2];
	float 	fRec327[2];
	float 	fRec326[3];
	float 	fVec44[2];
	float 	fRec325[2];
	float 	fRec324[3];
	float 	fRec333[2];
	float 	fRec332[3];
	float 	fRec336[2];
	float 	fRec335[3];
	float 	fRec334[3];
	float 	fRec340[2];
	float 	fRec339[3];
	float 	fRec338[3];
	float 	fRec337[3];
	float 	fRec345[2];
	float 	fRec344[3];
	float 	fRec343[3];
	float 	fRec342[3];
	float 	fRec341[3];
	float 	fRec353[2];
	float 	fRec352[3];
	float 	fVec45[2];
	float 	fRec351[2];
	float 	fRec350[3];
	float 	fVec46[2];
	float 	fRec349[2];
	float 	fRec348[3];
	float 	fVec47[2];
	float 	fRec347[2];
	float 	fRec346[3];
	float 	fRec355[2];
	float 	fRec354[3];
	float 	fRec358[2];
	float 	fRec357[3];
	float 	fRec356[3];
	float 	fRec362[2];
	float 	fRec361[3];
	float 	fRec360[3];
	float 	fRec359[3];
	float 	fRec367[2];
	float 	fRec366[3];
	float 	fRec365[3];
	float 	fRec364[3];
	float 	fRec363[3];
	FAUSTFLOAT 	fbutton0;
	FAUSTFLOAT 	fbutton1;
	float 	fVec48[2];
	FAUSTFLOAT 	fbutton2;
	float 	fVec49[2];
	int 	iRec369[2];
	float 	fRec368[4];
	FAUSTFLOAT 	fcheckbox1;
	int 	IOTA;
	float 	fVec50[8192];
	float 	fRec0[3];
	FAUSTFLOAT 	fbutton3;
	float 	fVec51[2];
	float 	fVec52[8192];
	float 	fRec1[3];
	float 	fVec53[8192];
	float 	fRec2[3];
	float 	fVec54[8192];
	float 	fRec3[3];
	float 	fVec55[8192];
	float 	fRec4[3];
	float 	fVec56[8192];
	float 	fRec5[3];
	float 	fVec57[8192];
	float 	fRec6[3];
	float 	fVec58[8192];
	float 	fRec7[3];
	float 	fVec59[8192];
	float 	fRec8[3];
	float 	fVec60[8192];
	float 	fRec9[3];
	float 	fVec61[8192];
	float 	fRec10[3];
	float 	fVec62[8192];
	float 	fRec11[3];
	float 	fVec63[8192];
	float 	fRec12[3];
	float 	fVec64[8192];
	float 	fRec13[3];
	float 	fVec65[8192];
	float 	fRec14[3];
	float 	fVec66[8192];
	float 	fRec15[3];
	FAUSTFLOAT 	fslider11;
  public:
	static void metadata(Meta* m) 	{ 
		m->declare("effect.lib/name", "Faust Audio Effect Library");
		m->declare("effect.lib/author", "Julius O. Smith (jos at ccrma.stanford.edu)");
		m->declare("effect.lib/copyright", "Julius O. Smith III");
		m->declare("effect.lib/version", "1.33");
		m->declare("effect.lib/license", "STK-4.3");
		m->declare("effect.lib/exciter_name", "Harmonic Exciter");
		m->declare("effect.lib/exciter_author", "Priyanka Shekar (pshekar@ccrma.stanford.edu)");
		m->declare("effect.lib/exciter_copyright", "Copyright (c) 2013 Priyanka Shekar");
		m->declare("effect.lib/exciter_version", "1.0");
		m->declare("effect.lib/exciter_license", "MIT License (MIT)");
		m->declare("filter.lib/name", "Faust Filter Library");
		m->declare("filter.lib/author", "Julius O. Smith (jos at ccrma.stanford.edu)");
		m->declare("filter.lib/copyright", "Julius O. Smith III");
		m->declare("filter.lib/version", "1.29");
		m->declare("filter.lib/license", "STK-4.3");
		m->declare("filter.lib/reference", "https://ccrma.stanford.edu/~jos/filters/");
		m->declare("music.lib/name", "Music Library");
		m->declare("music.lib/author", "GRAME");
		m->declare("music.lib/copyright", "GRAME");
		m->declare("music.lib/version", "1.0");
		m->declare("music.lib/license", "LGPL with exception");
		m->declare("math.lib/name", "Math Library");
		m->declare("math.lib/author", "GRAME");
		m->declare("math.lib/copyright", "GRAME");
		m->declare("math.lib/version", "1.0");
		m->declare("math.lib/license", "LGPL with exception");
		m->declare("oscillator.lib/name", "Faust Oscillator Library");
		m->declare("oscillator.lib/author", "Julius O. Smith (jos at ccrma.stanford.edu)");
		m->declare("oscillator.lib/copyright", "Julius O. Smith III");
		m->declare("oscillator.lib/version", "1.11");
		m->declare("oscillator.lib/license", "STK-4.3");
	}

	virtual int getNumInputs() 	{ return 2; }
	virtual int getNumOutputs() 	{ return 2; }
	static void classInit(int samplingFreq) {
	}
	virtual void instanceInit(int samplingFreq) {
		fSamplingFreq = samplingFreq;
		fcheckbox0 = 0.0;
		fslider0 = 5e+02f;
		iConst0 = min(192000, max(1, fSamplingFreq));
		fConst1 = (3.141592653589793f / float(iConst0));
		fslider1 = 1e+03f;
		fslider2 = 2e+03f;
		fslider3 = 4e+03f;
		for (int i=0; i<2; i++) fRec23[i] = 0;
		for (int i=0; i<3; i++) fRec22[i] = 0;
		for (int i=0; i<2; i++) fVec0[i] = 0;
		for (int i=0; i<2; i++) fRec21[i] = 0;
		for (int i=0; i<3; i++) fRec20[i] = 0;
		for (int i=0; i<2; i++) fVec1[i] = 0;
		for (int i=0; i<2; i++) fRec19[i] = 0;
		for (int i=0; i<3; i++) fRec18[i] = 0;
		for (int i=0; i<2; i++) fVec2[i] = 0;
		for (int i=0; i<2; i++) fRec17[i] = 0;
		for (int i=0; i<3; i++) fRec16[i] = 0;
		fslider4 = 8.4f;
		fslider5 = 46.0f;
		fslider6 = 63.0f;
		fConst2 = (0.0029154518950437317f * iConst0);
		fConst3 = (1.0f / float(iConst0));
		for (int i=0; i<2; i++) fRec25[i] = 0;
		for (int i=0; i<3; i++) fRec24[i] = 0;
		fslider7 = 6.5f;
		for (int i=0; i<2; i++) fRec28[i] = 0;
		for (int i=0; i<3; i++) fRec27[i] = 0;
		for (int i=0; i<3; i++) fRec26[i] = 0;
		fslider8 = 5.0f;
		for (int i=0; i<2; i++) fRec32[i] = 0;
		for (int i=0; i<3; i++) fRec31[i] = 0;
		for (int i=0; i<3; i++) fRec30[i] = 0;
		for (int i=0; i<3; i++) fRec29[i] = 0;
		fslider9 = 3.8f;
		for (int i=0; i<2; i++) fRec37[i] = 0;
		for (int i=0; i<3; i++) fRec36[i] = 0;
		for (int i=0; i<3; i++) fRec35[i] = 0;
		for (int i=0; i<3; i++) fRec34[i] = 0;
		for (int i=0; i<3; i++) fRec33[i] = 0;
		fslider10 = 2.7f;
		for (int i=0; i<2; i++) fRec45[i] = 0;
		for (int i=0; i<3; i++) fRec44[i] = 0;
		for (int i=0; i<2; i++) fVec3[i] = 0;
		for (int i=0; i<2; i++) fRec43[i] = 0;
		for (int i=0; i<3; i++) fRec42[i] = 0;
		for (int i=0; i<2; i++) fVec4[i] = 0;
		for (int i=0; i<2; i++) fRec41[i] = 0;
		for (int i=0; i<3; i++) fRec40[i] = 0;
		for (int i=0; i<2; i++) fVec5[i] = 0;
		for (int i=0; i<2; i++) fRec39[i] = 0;
		for (int i=0; i<3; i++) fRec38[i] = 0;
		for (int i=0; i<2; i++) fRec47[i] = 0;
		for (int i=0; i<3; i++) fRec46[i] = 0;
		for (int i=0; i<2; i++) fRec50[i] = 0;
		for (int i=0; i<3; i++) fRec49[i] = 0;
		for (int i=0; i<3; i++) fRec48[i] = 0;
		for (int i=0; i<2; i++) fRec54[i] = 0;
		for (int i=0; i<3; i++) fRec53[i] = 0;
		for (int i=0; i<3; i++) fRec52[i] = 0;
		for (int i=0; i<3; i++) fRec51[i] = 0;
		for (int i=0; i<2; i++) fRec59[i] = 0;
		for (int i=0; i<3; i++) fRec58[i] = 0;
		for (int i=0; i<3; i++) fRec57[i] = 0;
		for (int i=0; i<3; i++) fRec56[i] = 0;
		for (int i=0; i<3; i++) fRec55[i] = 0;
		for (int i=0; i<2; i++) fRec67[i] = 0;
		for (int i=0; i<3; i++) fRec66[i] = 0;
		for (int i=0; i<2; i++) fVec6[i] = 0;
		for (int i=0; i<2; i++) fRec65[i] = 0;
		for (int i=0; i<3; i++) fRec64[i] = 0;
		for (int i=0; i<2; i++) fVec7[i] = 0;
		for (int i=0; i<2; i++) fRec63[i] = 0;
		for (int i=0; i<3; i++) fRec62[i] = 0;
		for (int i=0; i<2; i++) fVec8[i] = 0;
		for (int i=0; i<2; i++) fRec61[i] = 0;
		for (int i=0; i<3; i++) fRec60[i] = 0;
		for (int i=0; i<2; i++) fRec69[i] = 0;
		for (int i=0; i<3; i++) fRec68[i] = 0;
		for (int i=0; i<2; i++) fRec72[i] = 0;
		for (int i=0; i<3; i++) fRec71[i] = 0;
		for (int i=0; i<3; i++) fRec70[i] = 0;
		for (int i=0; i<2; i++) fRec76[i] = 0;
		for (int i=0; i<3; i++) fRec75[i] = 0;
		for (int i=0; i<3; i++) fRec74[i] = 0;
		for (int i=0; i<3; i++) fRec73[i] = 0;
		for (int i=0; i<2; i++) fRec81[i] = 0;
		for (int i=0; i<3; i++) fRec80[i] = 0;
		for (int i=0; i<3; i++) fRec79[i] = 0;
		for (int i=0; i<3; i++) fRec78[i] = 0;
		for (int i=0; i<3; i++) fRec77[i] = 0;
		for (int i=0; i<2; i++) fRec89[i] = 0;
		for (int i=0; i<3; i++) fRec88[i] = 0;
		for (int i=0; i<2; i++) fVec9[i] = 0;
		for (int i=0; i<2; i++) fRec87[i] = 0;
		for (int i=0; i<3; i++) fRec86[i] = 0;
		for (int i=0; i<2; i++) fVec10[i] = 0;
		for (int i=0; i<2; i++) fRec85[i] = 0;
		for (int i=0; i<3; i++) fRec84[i] = 0;
		for (int i=0; i<2; i++) fVec11[i] = 0;
		for (int i=0; i<2; i++) fRec83[i] = 0;
		for (int i=0; i<3; i++) fRec82[i] = 0;
		for (int i=0; i<2; i++) fRec91[i] = 0;
		for (int i=0; i<3; i++) fRec90[i] = 0;
		for (int i=0; i<2; i++) fRec94[i] = 0;
		for (int i=0; i<3; i++) fRec93[i] = 0;
		for (int i=0; i<3; i++) fRec92[i] = 0;
		for (int i=0; i<2; i++) fRec98[i] = 0;
		for (int i=0; i<3; i++) fRec97[i] = 0;
		for (int i=0; i<3; i++) fRec96[i] = 0;
		for (int i=0; i<3; i++) fRec95[i] = 0;
		for (int i=0; i<2; i++) fRec103[i] = 0;
		for (int i=0; i<3; i++) fRec102[i] = 0;
		for (int i=0; i<3; i++) fRec101[i] = 0;
		for (int i=0; i<3; i++) fRec100[i] = 0;
		for (int i=0; i<3; i++) fRec99[i] = 0;
		for (int i=0; i<2; i++) fRec111[i] = 0;
		for (int i=0; i<3; i++) fRec110[i] = 0;
		for (int i=0; i<2; i++) fVec12[i] = 0;
		for (int i=0; i<2; i++) fRec109[i] = 0;
		for (int i=0; i<3; i++) fRec108[i] = 0;
		for (int i=0; i<2; i++) fVec13[i] = 0;
		for (int i=0; i<2; i++) fRec107[i] = 0;
		for (int i=0; i<3; i++) fRec106[i] = 0;
		for (int i=0; i<2; i++) fVec14[i] = 0;
		for (int i=0; i<2; i++) fRec105[i] = 0;
		for (int i=0; i<3; i++) fRec104[i] = 0;
		for (int i=0; i<2; i++) fRec113[i] = 0;
		for (int i=0; i<3; i++) fRec112[i] = 0;
		for (int i=0; i<2; i++) fRec116[i] = 0;
		for (int i=0; i<3; i++) fRec115[i] = 0;
		for (int i=0; i<3; i++) fRec114[i] = 0;
		for (int i=0; i<2; i++) fRec120[i] = 0;
		for (int i=0; i<3; i++) fRec119[i] = 0;
		for (int i=0; i<3; i++) fRec118[i] = 0;
		for (int i=0; i<3; i++) fRec117[i] = 0;
		for (int i=0; i<2; i++) fRec125[i] = 0;
		for (int i=0; i<3; i++) fRec124[i] = 0;
		for (int i=0; i<3; i++) fRec123[i] = 0;
		for (int i=0; i<3; i++) fRec122[i] = 0;
		for (int i=0; i<3; i++) fRec121[i] = 0;
		for (int i=0; i<2; i++) fRec133[i] = 0;
		for (int i=0; i<3; i++) fRec132[i] = 0;
		for (int i=0; i<2; i++) fVec15[i] = 0;
		for (int i=0; i<2; i++) fRec131[i] = 0;
		for (int i=0; i<3; i++) fRec130[i] = 0;
		for (int i=0; i<2; i++) fVec16[i] = 0;
		for (int i=0; i<2; i++) fRec129[i] = 0;
		for (int i=0; i<3; i++) fRec128[i] = 0;
		for (int i=0; i<2; i++) fVec17[i] = 0;
		for (int i=0; i<2; i++) fRec127[i] = 0;
		for (int i=0; i<3; i++) fRec126[i] = 0;
		for (int i=0; i<2; i++) fRec135[i] = 0;
		for (int i=0; i<3; i++) fRec134[i] = 0;
		for (int i=0; i<2; i++) fRec138[i] = 0;
		for (int i=0; i<3; i++) fRec137[i] = 0;
		for (int i=0; i<3; i++) fRec136[i] = 0;
		for (int i=0; i<2; i++) fRec142[i] = 0;
		for (int i=0; i<3; i++) fRec141[i] = 0;
		for (int i=0; i<3; i++) fRec140[i] = 0;
		for (int i=0; i<3; i++) fRec139[i] = 0;
		for (int i=0; i<2; i++) fRec147[i] = 0;
		for (int i=0; i<3; i++) fRec146[i] = 0;
		for (int i=0; i<3; i++) fRec145[i] = 0;
		for (int i=0; i<3; i++) fRec144[i] = 0;
		for (int i=0; i<3; i++) fRec143[i] = 0;
		for (int i=0; i<2; i++) fRec155[i] = 0;
		for (int i=0; i<3; i++) fRec154[i] = 0;
		for (int i=0; i<2; i++) fVec18[i] = 0;
		for (int i=0; i<2; i++) fRec153[i] = 0;
		for (int i=0; i<3; i++) fRec152[i] = 0;
		for (int i=0; i<2; i++) fVec19[i] = 0;
		for (int i=0; i<2; i++) fRec151[i] = 0;
		for (int i=0; i<3; i++) fRec150[i] = 0;
		for (int i=0; i<2; i++) fVec20[i] = 0;
		for (int i=0; i<2; i++) fRec149[i] = 0;
		for (int i=0; i<3; i++) fRec148[i] = 0;
		for (int i=0; i<2; i++) fRec157[i] = 0;
		for (int i=0; i<3; i++) fRec156[i] = 0;
		for (int i=0; i<2; i++) fRec160[i] = 0;
		for (int i=0; i<3; i++) fRec159[i] = 0;
		for (int i=0; i<3; i++) fRec158[i] = 0;
		for (int i=0; i<2; i++) fRec164[i] = 0;
		for (int i=0; i<3; i++) fRec163[i] = 0;
		for (int i=0; i<3; i++) fRec162[i] = 0;
		for (int i=0; i<3; i++) fRec161[i] = 0;
		for (int i=0; i<2; i++) fRec169[i] = 0;
		for (int i=0; i<3; i++) fRec168[i] = 0;
		for (int i=0; i<3; i++) fRec167[i] = 0;
		for (int i=0; i<3; i++) fRec166[i] = 0;
		for (int i=0; i<3; i++) fRec165[i] = 0;
		for (int i=0; i<2; i++) fRec177[i] = 0;
		for (int i=0; i<3; i++) fRec176[i] = 0;
		for (int i=0; i<2; i++) fVec21[i] = 0;
		for (int i=0; i<2; i++) fRec175[i] = 0;
		for (int i=0; i<3; i++) fRec174[i] = 0;
		for (int i=0; i<2; i++) fVec22[i] = 0;
		for (int i=0; i<2; i++) fRec173[i] = 0;
		for (int i=0; i<3; i++) fRec172[i] = 0;
		for (int i=0; i<2; i++) fVec23[i] = 0;
		for (int i=0; i<2; i++) fRec171[i] = 0;
		for (int i=0; i<3; i++) fRec170[i] = 0;
		for (int i=0; i<2; i++) fRec179[i] = 0;
		for (int i=0; i<3; i++) fRec178[i] = 0;
		for (int i=0; i<2; i++) fRec182[i] = 0;
		for (int i=0; i<3; i++) fRec181[i] = 0;
		for (int i=0; i<3; i++) fRec180[i] = 0;
		for (int i=0; i<2; i++) fRec186[i] = 0;
		for (int i=0; i<3; i++) fRec185[i] = 0;
		for (int i=0; i<3; i++) fRec184[i] = 0;
		for (int i=0; i<3; i++) fRec183[i] = 0;
		for (int i=0; i<2; i++) fRec191[i] = 0;
		for (int i=0; i<3; i++) fRec190[i] = 0;
		for (int i=0; i<3; i++) fRec189[i] = 0;
		for (int i=0; i<3; i++) fRec188[i] = 0;
		for (int i=0; i<3; i++) fRec187[i] = 0;
		for (int i=0; i<2; i++) fRec199[i] = 0;
		for (int i=0; i<3; i++) fRec198[i] = 0;
		for (int i=0; i<2; i++) fVec24[i] = 0;
		for (int i=0; i<2; i++) fRec197[i] = 0;
		for (int i=0; i<3; i++) fRec196[i] = 0;
		for (int i=0; i<2; i++) fVec25[i] = 0;
		for (int i=0; i<2; i++) fRec195[i] = 0;
		for (int i=0; i<3; i++) fRec194[i] = 0;
		for (int i=0; i<2; i++) fVec26[i] = 0;
		for (int i=0; i<2; i++) fRec193[i] = 0;
		for (int i=0; i<3; i++) fRec192[i] = 0;
		for (int i=0; i<2; i++) fRec201[i] = 0;
		for (int i=0; i<3; i++) fRec200[i] = 0;
		for (int i=0; i<2; i++) fRec204[i] = 0;
		for (int i=0; i<3; i++) fRec203[i] = 0;
		for (int i=0; i<3; i++) fRec202[i] = 0;
		for (int i=0; i<2; i++) fRec208[i] = 0;
		for (int i=0; i<3; i++) fRec207[i] = 0;
		for (int i=0; i<3; i++) fRec206[i] = 0;
		for (int i=0; i<3; i++) fRec205[i] = 0;
		for (int i=0; i<2; i++) fRec213[i] = 0;
		for (int i=0; i<3; i++) fRec212[i] = 0;
		for (int i=0; i<3; i++) fRec211[i] = 0;
		for (int i=0; i<3; i++) fRec210[i] = 0;
		for (int i=0; i<3; i++) fRec209[i] = 0;
		for (int i=0; i<2; i++) fRec221[i] = 0;
		for (int i=0; i<3; i++) fRec220[i] = 0;
		for (int i=0; i<2; i++) fVec27[i] = 0;
		for (int i=0; i<2; i++) fRec219[i] = 0;
		for (int i=0; i<3; i++) fRec218[i] = 0;
		for (int i=0; i<2; i++) fVec28[i] = 0;
		for (int i=0; i<2; i++) fRec217[i] = 0;
		for (int i=0; i<3; i++) fRec216[i] = 0;
		for (int i=0; i<2; i++) fVec29[i] = 0;
		for (int i=0; i<2; i++) fRec215[i] = 0;
		for (int i=0; i<3; i++) fRec214[i] = 0;
		for (int i=0; i<2; i++) fRec223[i] = 0;
		for (int i=0; i<3; i++) fRec222[i] = 0;
		for (int i=0; i<2; i++) fRec226[i] = 0;
		for (int i=0; i<3; i++) fRec225[i] = 0;
		for (int i=0; i<3; i++) fRec224[i] = 0;
		for (int i=0; i<2; i++) fRec230[i] = 0;
		for (int i=0; i<3; i++) fRec229[i] = 0;
		for (int i=0; i<3; i++) fRec228[i] = 0;
		for (int i=0; i<3; i++) fRec227[i] = 0;
		for (int i=0; i<2; i++) fRec235[i] = 0;
		for (int i=0; i<3; i++) fRec234[i] = 0;
		for (int i=0; i<3; i++) fRec233[i] = 0;
		for (int i=0; i<3; i++) fRec232[i] = 0;
		for (int i=0; i<3; i++) fRec231[i] = 0;
		for (int i=0; i<2; i++) fRec243[i] = 0;
		for (int i=0; i<3; i++) fRec242[i] = 0;
		for (int i=0; i<2; i++) fVec30[i] = 0;
		for (int i=0; i<2; i++) fRec241[i] = 0;
		for (int i=0; i<3; i++) fRec240[i] = 0;
		for (int i=0; i<2; i++) fVec31[i] = 0;
		for (int i=0; i<2; i++) fRec239[i] = 0;
		for (int i=0; i<3; i++) fRec238[i] = 0;
		for (int i=0; i<2; i++) fVec32[i] = 0;
		for (int i=0; i<2; i++) fRec237[i] = 0;
		for (int i=0; i<3; i++) fRec236[i] = 0;
		for (int i=0; i<2; i++) fRec245[i] = 0;
		for (int i=0; i<3; i++) fRec244[i] = 0;
		for (int i=0; i<2; i++) fRec248[i] = 0;
		for (int i=0; i<3; i++) fRec247[i] = 0;
		for (int i=0; i<3; i++) fRec246[i] = 0;
		for (int i=0; i<2; i++) fRec252[i] = 0;
		for (int i=0; i<3; i++) fRec251[i] = 0;
		for (int i=0; i<3; i++) fRec250[i] = 0;
		for (int i=0; i<3; i++) fRec249[i] = 0;
		for (int i=0; i<2; i++) fRec257[i] = 0;
		for (int i=0; i<3; i++) fRec256[i] = 0;
		for (int i=0; i<3; i++) fRec255[i] = 0;
		for (int i=0; i<3; i++) fRec254[i] = 0;
		for (int i=0; i<3; i++) fRec253[i] = 0;
		for (int i=0; i<2; i++) fRec265[i] = 0;
		for (int i=0; i<3; i++) fRec264[i] = 0;
		for (int i=0; i<2; i++) fVec33[i] = 0;
		for (int i=0; i<2; i++) fRec263[i] = 0;
		for (int i=0; i<3; i++) fRec262[i] = 0;
		for (int i=0; i<2; i++) fVec34[i] = 0;
		for (int i=0; i<2; i++) fRec261[i] = 0;
		for (int i=0; i<3; i++) fRec260[i] = 0;
		for (int i=0; i<2; i++) fVec35[i] = 0;
		for (int i=0; i<2; i++) fRec259[i] = 0;
		for (int i=0; i<3; i++) fRec258[i] = 0;
		for (int i=0; i<2; i++) fRec267[i] = 0;
		for (int i=0; i<3; i++) fRec266[i] = 0;
		for (int i=0; i<2; i++) fRec270[i] = 0;
		for (int i=0; i<3; i++) fRec269[i] = 0;
		for (int i=0; i<3; i++) fRec268[i] = 0;
		for (int i=0; i<2; i++) fRec274[i] = 0;
		for (int i=0; i<3; i++) fRec273[i] = 0;
		for (int i=0; i<3; i++) fRec272[i] = 0;
		for (int i=0; i<3; i++) fRec271[i] = 0;
		for (int i=0; i<2; i++) fRec279[i] = 0;
		for (int i=0; i<3; i++) fRec278[i] = 0;
		for (int i=0; i<3; i++) fRec277[i] = 0;
		for (int i=0; i<3; i++) fRec276[i] = 0;
		for (int i=0; i<3; i++) fRec275[i] = 0;
		for (int i=0; i<2; i++) fRec287[i] = 0;
		for (int i=0; i<3; i++) fRec286[i] = 0;
		for (int i=0; i<2; i++) fVec36[i] = 0;
		for (int i=0; i<2; i++) fRec285[i] = 0;
		for (int i=0; i<3; i++) fRec284[i] = 0;
		for (int i=0; i<2; i++) fVec37[i] = 0;
		for (int i=0; i<2; i++) fRec283[i] = 0;
		for (int i=0; i<3; i++) fRec282[i] = 0;
		for (int i=0; i<2; i++) fVec38[i] = 0;
		for (int i=0; i<2; i++) fRec281[i] = 0;
		for (int i=0; i<3; i++) fRec280[i] = 0;
		for (int i=0; i<2; i++) fRec289[i] = 0;
		for (int i=0; i<3; i++) fRec288[i] = 0;
		for (int i=0; i<2; i++) fRec292[i] = 0;
		for (int i=0; i<3; i++) fRec291[i] = 0;
		for (int i=0; i<3; i++) fRec290[i] = 0;
		for (int i=0; i<2; i++) fRec296[i] = 0;
		for (int i=0; i<3; i++) fRec295[i] = 0;
		for (int i=0; i<3; i++) fRec294[i] = 0;
		for (int i=0; i<3; i++) fRec293[i] = 0;
		for (int i=0; i<2; i++) fRec301[i] = 0;
		for (int i=0; i<3; i++) fRec300[i] = 0;
		for (int i=0; i<3; i++) fRec299[i] = 0;
		for (int i=0; i<3; i++) fRec298[i] = 0;
		for (int i=0; i<3; i++) fRec297[i] = 0;
		for (int i=0; i<2; i++) fRec309[i] = 0;
		for (int i=0; i<3; i++) fRec308[i] = 0;
		for (int i=0; i<2; i++) fVec39[i] = 0;
		for (int i=0; i<2; i++) fRec307[i] = 0;
		for (int i=0; i<3; i++) fRec306[i] = 0;
		for (int i=0; i<2; i++) fVec40[i] = 0;
		for (int i=0; i<2; i++) fRec305[i] = 0;
		for (int i=0; i<3; i++) fRec304[i] = 0;
		for (int i=0; i<2; i++) fVec41[i] = 0;
		for (int i=0; i<2; i++) fRec303[i] = 0;
		for (int i=0; i<3; i++) fRec302[i] = 0;
		for (int i=0; i<2; i++) fRec311[i] = 0;
		for (int i=0; i<3; i++) fRec310[i] = 0;
		for (int i=0; i<2; i++) fRec314[i] = 0;
		for (int i=0; i<3; i++) fRec313[i] = 0;
		for (int i=0; i<3; i++) fRec312[i] = 0;
		for (int i=0; i<2; i++) fRec318[i] = 0;
		for (int i=0; i<3; i++) fRec317[i] = 0;
		for (int i=0; i<3; i++) fRec316[i] = 0;
		for (int i=0; i<3; i++) fRec315[i] = 0;
		for (int i=0; i<2; i++) fRec323[i] = 0;
		for (int i=0; i<3; i++) fRec322[i] = 0;
		for (int i=0; i<3; i++) fRec321[i] = 0;
		for (int i=0; i<3; i++) fRec320[i] = 0;
		for (int i=0; i<3; i++) fRec319[i] = 0;
		for (int i=0; i<2; i++) fRec331[i] = 0;
		for (int i=0; i<3; i++) fRec330[i] = 0;
		for (int i=0; i<2; i++) fVec42[i] = 0;
		for (int i=0; i<2; i++) fRec329[i] = 0;
		for (int i=0; i<3; i++) fRec328[i] = 0;
		for (int i=0; i<2; i++) fVec43[i] = 0;
		for (int i=0; i<2; i++) fRec327[i] = 0;
		for (int i=0; i<3; i++) fRec326[i] = 0;
		for (int i=0; i<2; i++) fVec44[i] = 0;
		for (int i=0; i<2; i++) fRec325[i] = 0;
		for (int i=0; i<3; i++) fRec324[i] = 0;
		for (int i=0; i<2; i++) fRec333[i] = 0;
		for (int i=0; i<3; i++) fRec332[i] = 0;
		for (int i=0; i<2; i++) fRec336[i] = 0;
		for (int i=0; i<3; i++) fRec335[i] = 0;
		for (int i=0; i<3; i++) fRec334[i] = 0;
		for (int i=0; i<2; i++) fRec340[i] = 0;
		for (int i=0; i<3; i++) fRec339[i] = 0;
		for (int i=0; i<3; i++) fRec338[i] = 0;
		for (int i=0; i<3; i++) fRec337[i] = 0;
		for (int i=0; i<2; i++) fRec345[i] = 0;
		for (int i=0; i<3; i++) fRec344[i] = 0;
		for (int i=0; i<3; i++) fRec343[i] = 0;
		for (int i=0; i<3; i++) fRec342[i] = 0;
		for (int i=0; i<3; i++) fRec341[i] = 0;
		for (int i=0; i<2; i++) fRec353[i] = 0;
		for (int i=0; i<3; i++) fRec352[i] = 0;
		for (int i=0; i<2; i++) fVec45[i] = 0;
		for (int i=0; i<2; i++) fRec351[i] = 0;
		for (int i=0; i<3; i++) fRec350[i] = 0;
		for (int i=0; i<2; i++) fVec46[i] = 0;
		for (int i=0; i<2; i++) fRec349[i] = 0;
		for (int i=0; i<3; i++) fRec348[i] = 0;
		for (int i=0; i<2; i++) fVec47[i] = 0;
		for (int i=0; i<2; i++) fRec347[i] = 0;
		for (int i=0; i<3; i++) fRec346[i] = 0;
		for (int i=0; i<2; i++) fRec355[i] = 0;
		for (int i=0; i<3; i++) fRec354[i] = 0;
		for (int i=0; i<2; i++) fRec358[i] = 0;
		for (int i=0; i<3; i++) fRec357[i] = 0;
		for (int i=0; i<3; i++) fRec356[i] = 0;
		for (int i=0; i<2; i++) fRec362[i] = 0;
		for (int i=0; i<3; i++) fRec361[i] = 0;
		for (int i=0; i<3; i++) fRec360[i] = 0;
		for (int i=0; i<3; i++) fRec359[i] = 0;
		for (int i=0; i<2; i++) fRec367[i] = 0;
		for (int i=0; i<3; i++) fRec366[i] = 0;
		for (int i=0; i<3; i++) fRec365[i] = 0;
		for (int i=0; i<3; i++) fRec364[i] = 0;
		for (int i=0; i<3; i++) fRec363[i] = 0;
		fbutton0 = 0.0;
		fbutton1 = 0.0;
		for (int i=0; i<2; i++) fVec48[i] = 0;
		fbutton2 = 0.0;
		for (int i=0; i<2; i++) fVec49[i] = 0;
		for (int i=0; i<2; i++) iRec369[i] = 0;
		for (int i=0; i<4; i++) fRec368[i] = 0;
		fcheckbox1 = 0.0;
		IOTA = 0;
		for (int i=0; i<8192; i++) fVec50[i] = 0;
		for (int i=0; i<3; i++) fRec0[i] = 0;
		fbutton3 = 0.0;
		for (int i=0; i<2; i++) fVec51[i] = 0;
		for (int i=0; i<8192; i++) fVec52[i] = 0;
		for (int i=0; i<3; i++) fRec1[i] = 0;
		for (int i=0; i<8192; i++) fVec53[i] = 0;
		for (int i=0; i<3; i++) fRec2[i] = 0;
		for (int i=0; i<8192; i++) fVec54[i] = 0;
		for (int i=0; i<3; i++) fRec3[i] = 0;
		for (int i=0; i<8192; i++) fVec55[i] = 0;
		for (int i=0; i<3; i++) fRec4[i] = 0;
		for (int i=0; i<8192; i++) fVec56[i] = 0;
		for (int i=0; i<3; i++) fRec5[i] = 0;
		for (int i=0; i<8192; i++) fVec57[i] = 0;
		for (int i=0; i<3; i++) fRec6[i] = 0;
		for (int i=0; i<8192; i++) fVec58[i] = 0;
		for (int i=0; i<3; i++) fRec7[i] = 0;
		for (int i=0; i<8192; i++) fVec59[i] = 0;
		for (int i=0; i<3; i++) fRec8[i] = 0;
		for (int i=0; i<8192; i++) fVec60[i] = 0;
		for (int i=0; i<3; i++) fRec9[i] = 0;
		for (int i=0; i<8192; i++) fVec61[i] = 0;
		for (int i=0; i<3; i++) fRec10[i] = 0;
		for (int i=0; i<8192; i++) fVec62[i] = 0;
		for (int i=0; i<3; i++) fRec11[i] = 0;
		for (int i=0; i<8192; i++) fVec63[i] = 0;
		for (int i=0; i<3; i++) fRec12[i] = 0;
		for (int i=0; i<8192; i++) fVec64[i] = 0;
		for (int i=0; i<3; i++) fRec13[i] = 0;
		for (int i=0; i<8192; i++) fVec65[i] = 0;
		for (int i=0; i<3; i++) fRec14[i] = 0;
		for (int i=0; i<8192; i++) fVec66[i] = 0;
		for (int i=0; i<3; i++) fRec15[i] = 0;
		fslider11 = -4e+01f;
	}
	virtual void init(int samplingFreq) {
		classInit(samplingFreq);
		instanceInit(samplingFreq);
	}
	virtual void buildUserInterface(UI* interface) {
		interface->openVerticalBox("0x00");
		interface->declare(0, "tooltip", "See Faust's effect.lib for documentation and references");
		interface->openVerticalBox("FEEDBACK DELAY NETWORK (FDN) REVERBERATOR, ORDER 16");
		interface->declare(0, "1", "");
		interface->openVerticalBox("Band Crossover Frequencies");
		interface->declare(&fslider0, "0", "");
		interface->declare(&fslider0, "scale", "log");
		interface->declare(&fslider0, "tooltip", "Each delay-line signal is split into frequency-bands for separate decay-time control in each band");
		interface->declare(&fslider0, "unit", "Hz");
		interface->addHorizontalSlider("Band 0 upper edge in Hz", &fslider0, 5e+02f, 1e+02f, 1e+04f, 1.0f);
		interface->declare(&fslider1, "1", "");
		interface->declare(&fslider1, "scale", "log");
		interface->declare(&fslider1, "tooltip", "Each delay-line signal is split into frequency-bands for separate decay-time control in each band");
		interface->declare(&fslider1, "unit", "Hz");
		interface->addHorizontalSlider("Band 1 upper edge in Hz", &fslider1, 1e+03f, 1e+02f, 1e+04f, 1.0f);
		interface->declare(&fslider2, "2", "");
		interface->declare(&fslider2, "scale", "log");
		interface->declare(&fslider2, "tooltip", "Each delay-line signal is split into frequency-bands for separate decay-time control in each band");
		interface->declare(&fslider2, "unit", "Hz");
		interface->addHorizontalSlider("Band 2 upper edge in Hz", &fslider2, 2e+03f, 1e+02f, 1e+04f, 1.0f);
		interface->declare(&fslider3, "3", "");
		interface->declare(&fslider3, "scale", "log");
		interface->declare(&fslider3, "tooltip", "Each delay-line signal is split into frequency-bands for separate decay-time control in each band");
		interface->declare(&fslider3, "unit", "Hz");
		interface->addHorizontalSlider("Band 3 upper edge in Hz", &fslider3, 4e+03f, 1e+02f, 1e+04f, 1.0f);
		interface->closeBox();
		interface->declare(0, "2", "");
		interface->openHorizontalBox("Band Decay Times (T60)");
		interface->declare(&fslider4, "0", "");
		interface->declare(&fslider4, "scale", "log");
		interface->declare(&fslider4, "tooltip", "T60 is the 60dB decay-time in seconds. For concert halls, an overall reverberation time (T60) near 1.9 seconds is typical [Beranek 2004]. Here we may set T60 independently in each frequency band.  In real rooms, higher frequency bands generally decay faster due to absorption and scattering.");
		interface->declare(&fslider4, "unit", "s");
		interface->addVerticalSlider("0", &fslider4, 8.4f, 0.1f, 1e+02f, 0.1f);
		interface->declare(&fslider7, "1", "");
		interface->declare(&fslider7, "scale", "log");
		interface->declare(&fslider7, "tooltip", "T60 is the 60dB decay-time in seconds. For concert halls, an overall reverberation time (T60) near 1.9 seconds is typical [Beranek 2004]. Here we may set T60 independently in each frequency band.  In real rooms, higher frequency bands generally decay faster due to absorption and scattering.");
		interface->declare(&fslider7, "unit", "s");
		interface->addVerticalSlider("1", &fslider7, 6.5f, 0.1f, 1e+02f, 0.1f);
		interface->declare(&fslider8, "2", "");
		interface->declare(&fslider8, "scale", "log");
		interface->declare(&fslider8, "tooltip", "T60 is the 60dB decay-time in seconds. For concert halls, an overall reverberation time (T60) near 1.9 seconds is typical [Beranek 2004]. Here we may set T60 independently in each frequency band.  In real rooms, higher frequency bands generally decay faster due to absorption and scattering.");
		interface->declare(&fslider8, "unit", "s");
		interface->addVerticalSlider("2", &fslider8, 5.0f, 0.1f, 1e+02f, 0.1f);
		interface->declare(&fslider9, "3", "");
		interface->declare(&fslider9, "scale", "log");
		interface->declare(&fslider9, "tooltip", "T60 is the 60dB decay-time in seconds. For concert halls, an overall reverberation time (T60) near 1.9 seconds is typical [Beranek 2004]. Here we may set T60 independently in each frequency band.  In real rooms, higher frequency bands generally decay faster due to absorption and scattering.");
		interface->declare(&fslider9, "unit", "s");
		interface->addVerticalSlider("3", &fslider9, 3.8f, 0.1f, 1e+02f, 0.1f);
		interface->declare(&fslider10, "4", "");
		interface->declare(&fslider10, "scale", "log");
		interface->declare(&fslider10, "tooltip", "T60 is the 60dB decay-time in seconds. For concert halls, an overall reverberation time (T60) near 1.9 seconds is typical [Beranek 2004]. Here we may set T60 independently in each frequency band.  In real rooms, higher frequency bands generally decay faster due to absorption and scattering.");
		interface->declare(&fslider10, "unit", "s");
		interface->addVerticalSlider("4", &fslider10, 2.7f, 0.1f, 1e+02f, 0.1f);
		interface->closeBox();
		interface->declare(0, "3", "");
		interface->openVerticalBox("Room Dimensions");
		interface->declare(&fslider5, "1", "");
		interface->declare(&fslider5, "scale", "log");
		interface->declare(&fslider5, "tooltip", "This length (in meters) determines the shortest delay-line used in the FDN reverberator.            Think of it as the shortest wall-to-wall separation in the room.");
		interface->declare(&fslider5, "unit", "m");
		interface->addHorizontalSlider("min acoustic ray length", &fslider5, 46.0f, 0.1f, 63.0f, 0.1f);
		interface->declare(&fslider6, "2", "");
		interface->declare(&fslider6, "scale", "log");
		interface->declare(&fslider6, "tooltip", "This length (in meters) determines the longest delay-line used in the FDN reverberator.            Think of it as the largest wall-to-wall separation in the room.");
		interface->declare(&fslider6, "unit", "m");
		interface->addHorizontalSlider("max acoustic ray length", &fslider6, 63.0f, 0.1f, 63.0f, 0.1f);
		interface->closeBox();
		interface->declare(0, "4", "");
		interface->openHorizontalBox("Input Controls");
		interface->declare(0, "1", "");
		interface->openVerticalBox("Input Config");
		interface->declare(&fcheckbox0, "1", "");
		interface->declare(&fcheckbox0, "tooltip", "When this is checked, the stereo external audio inputs are disabled (good for hearing the impulse response or pink-noise response alone)");
		interface->addCheckButton("Mute Ext Inputs", &fcheckbox0);
		interface->declare(&fcheckbox1, "2", "");
		interface->declare(&fcheckbox1, "tooltip", "Pink Noise (or 1/f noise) is Constant-Q Noise (useful for adjusting the EQ sections)");
		interface->addCheckButton("Pink Noise", &fcheckbox1);
		interface->closeBox();
		interface->declare(0, "2", "");
		interface->openHorizontalBox("Impulse Selection");
		interface->declare(&fbutton1, "1", "");
		interface->declare(&fbutton1, "tooltip", "Send impulse into LEFT channel");
		interface->addButton("Left", &fbutton1);
		interface->declare(&fbutton2, "2", "");
		interface->declare(&fbutton2, "tooltip", "Send impulse into LEFT and RIGHT channels");
		interface->addButton("Center", &fbutton2);
		interface->declare(&fbutton3, "3", "");
		interface->declare(&fbutton3, "tooltip", "Send impulse into RIGHT channel");
		interface->addButton("Right", &fbutton3);
		interface->closeBox();
		interface->declare(0, "3", "");
		interface->openVerticalBox("Reverb State");
		interface->declare(&fbutton0, "1", "");
		interface->declare(&fbutton0, "tooltip", "Hold down 'Quench' to clear the reverberator");
		interface->addButton("Quench", &fbutton0);
		interface->closeBox();
		interface->closeBox();
		interface->closeBox();
		interface->declare(&fslider11, "3", "");
		interface->declare(&fslider11, "tooltip", "Output scale factor");
		interface->declare(&fslider11, "unit", "dB");
		interface->addHorizontalSlider("Output Level (dB)", &fslider11, -4e+01f, -7e+01f, 2e+01f, 0.1f);
		interface->closeBox();
	}
	virtual void compute (int count, FAUSTFLOAT** input, FAUSTFLOAT** output) {
		float 	fSlow0 = (1 - float(fcheckbox0));
		float 	fSlow1 = tanf((fConst1 * float(fslider0)));
		float 	fSlow2 = (1.0f / faustpower<2>(fSlow1));
		float 	fSlow3 = (2 * (1 - fSlow2));
		float 	fSlow4 = (1.0f / fSlow1);
		float 	fSlow5 = (1 + ((fSlow4 - 1.0000000000000004f) / fSlow1));
		float 	fSlow6 = (1.0f / (1 + ((fSlow4 + 1.0000000000000004f) / fSlow1)));
		float 	fSlow7 = tanf((fConst1 * float(fslider1)));
		float 	fSlow8 = (1.0f / faustpower<2>(fSlow7));
		float 	fSlow9 = (2 * (1 - fSlow8));
		float 	fSlow10 = (1.0f / fSlow7);
		float 	fSlow11 = (1 + ((fSlow10 - 1.0000000000000004f) / fSlow7));
		float 	fSlow12 = (1 + ((fSlow10 + 1.0000000000000004f) / fSlow7));
		float 	fSlow13 = (1.0f / fSlow12);
		float 	fSlow14 = tanf((fConst1 * float(fslider2)));
		float 	fSlow15 = (1.0f / faustpower<2>(fSlow14));
		float 	fSlow16 = (2 * (1 - fSlow15));
		float 	fSlow17 = (1.0f / fSlow14);
		float 	fSlow18 = (1 + ((fSlow17 - 1.0000000000000004f) / fSlow14));
		float 	fSlow19 = (1 + ((fSlow17 + 1.0000000000000004f) / fSlow14));
		float 	fSlow20 = (1.0f / fSlow19);
		float 	fSlow21 = tanf((fConst1 * float(fslider3)));
		float 	fSlow22 = (1.0f / faustpower<2>(fSlow21));
		float 	fSlow23 = (2 * (1 - fSlow22));
		float 	fSlow24 = (1.0f / fSlow21);
		float 	fSlow25 = (1 + ((fSlow24 - 1.0000000000000004f) / fSlow21));
		float 	fSlow26 = (1 + ((1.0000000000000004f + fSlow24) / fSlow21));
		float 	fSlow27 = (1.0f / fSlow26);
		float 	fSlow28 = (1 + fSlow24);
		float 	fSlow29 = (1.0f / fSlow28);
		float 	fSlow30 = (0 - ((1 - fSlow24) / fSlow28));
		float 	fSlow31 = (1 + fSlow17);
		float 	fSlow32 = (1.0f / fSlow31);
		float 	fSlow33 = (0 - ((1 - fSlow17) / fSlow31));
		float 	fSlow34 = (1 + fSlow10);
		float 	fSlow35 = (1.0f / fSlow34);
		float 	fSlow36 = (0 - ((1 - fSlow10) / fSlow34));
		float 	fSlow37 = (1 + fSlow4);
		float 	fSlow38 = (1.0f / fSlow37);
		float 	fSlow39 = (0 - ((1 - fSlow4) / fSlow37));
		float 	fSlow40 = float(fslider4);
		float 	fSlow41 = float(fslider5);
		float 	fSlow42 = (float(fslider6) / fSlow41);
		float 	fSlow43 = powf(53,floorf((0.5f + (0.2518706487516997f * logf((fConst2 * (fSlow41 * powf(fSlow42,1.0f))))))));
		float 	fSlow44 = (0 - (6.907755278982138f * fSlow43));
		float 	fSlow45 = expf((fConst3 * (fSlow44 / fSlow40)));
		float 	fSlow46 = (0 - fSlow4);
		float 	fSlow47 = (1.0f / (fSlow1 * fSlow12));
		float 	fSlow48 = (2 * (0 - fSlow2));
		float 	fSlow49 = float(fslider7);
		float 	fSlow50 = expf((fConst3 * (fSlow44 / fSlow49)));
		float 	fSlow51 = (1 + ((fSlow4 - 1.0f) / fSlow1));
		float 	fSlow52 = (1.0f / (1 + ((1.0f + fSlow4) / fSlow1)));
		float 	fSlow53 = (0 - fSlow10);
		float 	fSlow54 = (1.0f / (fSlow7 * fSlow19));
		float 	fSlow55 = (2 * (0 - fSlow8));
		float 	fSlow56 = float(fslider8);
		float 	fSlow57 = expf((fConst3 * (fSlow44 / fSlow56)));
		float 	fSlow58 = (1 + ((fSlow10 - 1.0f) / fSlow7));
		float 	fSlow59 = (1.0f / (1 + ((1.0f + fSlow10) / fSlow7)));
		float 	fSlow60 = (0 - fSlow17);
		float 	fSlow61 = (1.0f / (fSlow14 * fSlow26));
		float 	fSlow62 = (2 * (0 - fSlow15));
		float 	fSlow63 = float(fslider9);
		float 	fSlow64 = expf((fConst3 * (fSlow44 / fSlow63)));
		float 	fSlow65 = (1 + ((fSlow17 - 1.0f) / fSlow14));
		float 	fSlow66 = (1.0f / (1 + ((1.0f + fSlow17) / fSlow14)));
		float 	fSlow67 = (0 - fSlow24);
		float 	fSlow68 = (2 * (0 - fSlow22));
		float 	fSlow69 = float(fslider10);
		float 	fSlow70 = expf((fConst3 * (fSlow44 / fSlow69)));
		float 	fSlow71 = powf(19,floorf((0.5f + (0.3396232718951086f * logf((fConst2 * (fSlow41 * powf(fSlow42,0.4666666666666667f))))))));
		float 	fSlow72 = (0 - (6.907755278982138f * fSlow71));
		float 	fSlow73 = expf((fConst3 * (fSlow72 / fSlow40)));
		float 	fSlow74 = expf((fConst3 * (fSlow72 / fSlow49)));
		float 	fSlow75 = expf((fConst3 * (fSlow72 / fSlow56)));
		float 	fSlow76 = expf((fConst3 * (fSlow72 / fSlow63)));
		float 	fSlow77 = expf((fConst3 * (fSlow72 / fSlow69)));
		float 	fSlow78 = powf(37,floorf((0.5f + (0.2769378934088574f * logf((fConst2 * (fSlow41 * powf(fSlow42,0.7333333333333333f))))))));
		float 	fSlow79 = (0 - (6.907755278982138f * fSlow78));
		float 	fSlow80 = expf((fConst3 * (fSlow79 / fSlow40)));
		float 	fSlow81 = expf((fConst3 * (fSlow79 / fSlow49)));
		float 	fSlow82 = expf((fConst3 * (fSlow79 / fSlow56)));
		float 	fSlow83 = expf((fConst3 * (fSlow79 / fSlow63)));
		float 	fSlow84 = expf((fConst3 * (fSlow79 / fSlow69)));
		float 	fSlow85 = powf(7,floorf((0.5f + (0.5138983423697507f * logf((fConst2 * (fSlow41 * powf(fSlow42,0.2f))))))));
		float 	fSlow86 = (0 - (6.907755278982138f * fSlow85));
		float 	fSlow87 = expf((fConst3 * (fSlow86 / fSlow40)));
		float 	fSlow88 = expf((fConst3 * (fSlow86 / fSlow49)));
		float 	fSlow89 = expf((fConst3 * (fSlow86 / fSlow56)));
		float 	fSlow90 = expf((fConst3 * (fSlow86 / fSlow63)));
		float 	fSlow91 = expf((fConst3 * (fSlow86 / fSlow69)));
		float 	fSlow92 = powf(43,floorf((0.5f + (0.265872585674852f * logf((fConst2 * (fSlow41 * powf(fSlow42,0.8666666666666667f))))))));
		float 	fSlow93 = (0 - (6.907755278982138f * fSlow92));
		float 	fSlow94 = expf((fConst3 * (fSlow93 / fSlow40)));
		float 	fSlow95 = expf((fConst3 * (fSlow93 / fSlow49)));
		float 	fSlow96 = expf((fConst3 * (fSlow93 / fSlow56)));
		float 	fSlow97 = expf((fConst3 * (fSlow93 / fSlow63)));
		float 	fSlow98 = expf((fConst3 * (fSlow93 / fSlow69)));
		float 	fSlow99 = powf(13,floorf((0.5f + (0.3898712452512801f * logf((fConst2 * (fSlow41 * powf(fSlow42,0.3333333333333333f))))))));
		float 	fSlow100 = (0 - (6.907755278982138f * fSlow99));
		float 	fSlow101 = expf((fConst3 * (fSlow100 / fSlow40)));
		float 	fSlow102 = expf((fConst3 * (fSlow100 / fSlow49)));
		float 	fSlow103 = expf((fConst3 * (fSlow100 / fSlow56)));
		float 	fSlow104 = expf((fConst3 * (fSlow100 / fSlow63)));
		float 	fSlow105 = expf((fConst3 * (fSlow100 / fSlow69)));
		float 	fSlow106 = powf(29,floorf((0.5f + (0.2969742043733701f * logf((fConst2 * (fSlow41 * powf(fSlow42,0.6f))))))));
		float 	fSlow107 = (0 - (6.907755278982138f * fSlow106));
		float 	fSlow108 = expf((fConst3 * (fSlow107 / fSlow40)));
		float 	fSlow109 = expf((fConst3 * (fSlow107 / fSlow49)));
		float 	fSlow110 = expf((fConst3 * (fSlow107 / fSlow56)));
		float 	fSlow111 = expf((fConst3 * (fSlow107 / fSlow63)));
		float 	fSlow112 = expf((fConst3 * (fSlow107 / fSlow69)));
		float 	fSlow113 = powf(3,floorf((0.5f + (0.9102392266268373f * logf((fConst2 * (fSlow41 * powf(fSlow42,0.06666666666666667f))))))));
		float 	fSlow114 = (0 - (6.907755278982138f * fSlow113));
		float 	fSlow115 = expf((fConst3 * (fSlow114 / fSlow40)));
		float 	fSlow116 = expf((fConst3 * (fSlow114 / fSlow49)));
		float 	fSlow117 = expf((fConst3 * (fSlow114 / fSlow56)));
		float 	fSlow118 = expf((fConst3 * (fSlow114 / fSlow63)));
		float 	fSlow119 = expf((fConst3 * (fSlow114 / fSlow69)));
		float 	fSlow120 = powf(47,floorf((0.5f + (0.25973030217227155f * logf((fConst2 * (fSlow41 * powf(fSlow42,0.9333333333333333f))))))));
		float 	fSlow121 = (0 - (6.907755278982138f * fSlow120));
		float 	fSlow122 = expf((fConst3 * (fSlow121 / fSlow40)));
		float 	fSlow123 = expf((fConst3 * (fSlow121 / fSlow49)));
		float 	fSlow124 = expf((fConst3 * (fSlow121 / fSlow56)));
		float 	fSlow125 = expf((fConst3 * (fSlow121 / fSlow63)));
		float 	fSlow126 = expf((fConst3 * (fSlow121 / fSlow69)));
		float 	fSlow127 = powf(17,floorf((0.5f + (0.35295612386476116f * logf((fConst2 * (fSlow41 * powf(fSlow42,0.4f))))))));
		float 	fSlow128 = (0 - (6.907755278982138f * fSlow127));
		float 	fSlow129 = expf((fConst3 * (fSlow128 / fSlow40)));
		float 	fSlow130 = expf((fConst3 * (fSlow128 / fSlow49)));
		float 	fSlow131 = expf((fConst3 * (fSlow128 / fSlow56)));
		float 	fSlow132 = expf((fConst3 * (fSlow128 / fSlow63)));
		float 	fSlow133 = expf((fConst3 * (fSlow128 / fSlow69)));
		float 	fSlow134 = powf(31,floorf((0.5f + (0.29120667621996243f * logf((fConst2 * (fSlow41 * powf(fSlow42,0.6666666666666666f))))))));
		float 	fSlow135 = (0 - (6.907755278982138f * fSlow134));
		float 	fSlow136 = expf((fConst3 * (fSlow135 / fSlow40)));
		float 	fSlow137 = expf((fConst3 * (fSlow135 / fSlow49)));
		float 	fSlow138 = expf((fConst3 * (fSlow135 / fSlow56)));
		float 	fSlow139 = expf((fConst3 * (fSlow135 / fSlow63)));
		float 	fSlow140 = expf((fConst3 * (fSlow135 / fSlow69)));
		float 	fSlow141 = powf(5,floorf((0.5f + (0.6213349345596119f * logf((fConst2 * (fSlow41 * powf(fSlow42,0.13333333333333333f))))))));
		float 	fSlow142 = (0 - (6.907755278982138f * fSlow141));
		float 	fSlow143 = expf((fConst3 * (fSlow142 / fSlow40)));
		float 	fSlow144 = expf((fConst3 * (fSlow142 / fSlow49)));
		float 	fSlow145 = expf((fConst3 * (fSlow142 / fSlow56)));
		float 	fSlow146 = expf((fConst3 * (fSlow142 / fSlow63)));
		float 	fSlow147 = expf((fConst3 * (fSlow142 / fSlow69)));
		float 	fSlow148 = powf(41,floorf((0.5f + (0.269282508064391f * logf((fConst2 * (fSlow41 * powf(fSlow42,0.8f))))))));
		float 	fSlow149 = (0 - (6.907755278982138f * fSlow148));
		float 	fSlow150 = expf((fConst3 * (fSlow149 / fSlow40)));
		float 	fSlow151 = expf((fConst3 * (fSlow149 / fSlow49)));
		float 	fSlow152 = expf((fConst3 * (fSlow149 / fSlow56)));
		float 	fSlow153 = expf((fConst3 * (fSlow149 / fSlow63)));
		float 	fSlow154 = expf((fConst3 * (fSlow149 / fSlow69)));
		float 	fSlow155 = powf(11,floorf((0.5f + (0.4170323914242463f * logf((fConst2 * (fSlow41 * powf(fSlow42,0.26666666666666666f))))))));
		float 	fSlow156 = (0 - (6.907755278982138f * fSlow155));
		float 	fSlow157 = expf((fConst3 * (fSlow156 / fSlow40)));
		float 	fSlow158 = expf((fConst3 * (fSlow156 / fSlow49)));
		float 	fSlow159 = expf((fConst3 * (fSlow156 / fSlow56)));
		float 	fSlow160 = expf((fConst3 * (fSlow156 / fSlow63)));
		float 	fSlow161 = expf((fConst3 * (fSlow156 / fSlow69)));
		float 	fSlow162 = powf(23,floorf((0.5f + (0.318928988903801f * logf((fConst2 * (fSlow41 * powf(fSlow42,0.5333333333333333f))))))));
		float 	fSlow163 = (0 - (6.907755278982138f * fSlow162));
		float 	fSlow164 = expf((fConst3 * (fSlow163 / fSlow40)));
		float 	fSlow165 = expf((fConst3 * (fSlow163 / fSlow49)));
		float 	fSlow166 = expf((fConst3 * (fSlow163 / fSlow56)));
		float 	fSlow167 = expf((fConst3 * (fSlow163 / fSlow63)));
		float 	fSlow168 = expf((fConst3 * (fSlow163 / fSlow69)));
		float 	fSlow169 = powf(2,floorf((0.5f + (1.4426950408889634f * logf((fConst2 * (fSlow41 * powf(fSlow42,0.0f))))))));
		float 	fSlow170 = (0 - (6.907755278982138f * fSlow169));
		float 	fSlow171 = expf((fConst3 * (fSlow170 / fSlow40)));
		float 	fSlow172 = expf((fConst3 * (fSlow170 / fSlow49)));
		float 	fSlow173 = expf((fConst3 * (fSlow170 / fSlow56)));
		float 	fSlow174 = expf((fConst3 * (fSlow170 / fSlow63)));
		float 	fSlow175 = expf((fConst3 * (fSlow170 / fSlow69)));
		float 	fSlow176 = (1.0f - (0.5f * float(fbutton0)));
		float 	fSlow177 = (0.25f * fSlow176);
		float 	fSlow178 = float(fbutton1);
		float 	fSlow179 = float(fbutton2);
		float 	fSlow180 = (0.1f * float(fcheckbox1));
		int 	iSlow181 = int((int((fSlow169 - 1)) & 8191));
		float 	fSlow182 = float(fbutton3);
		int 	iSlow183 = int((int((fSlow113 - 1)) & 8191));
		int 	iSlow184 = int((int((fSlow141 - 1)) & 8191));
		int 	iSlow185 = int((int((fSlow85 - 1)) & 8191));
		int 	iSlow186 = int((int((fSlow155 - 1)) & 8191));
		int 	iSlow187 = int((int((fSlow99 - 1)) & 8191));
		int 	iSlow188 = int((int((fSlow127 - 1)) & 8191));
		int 	iSlow189 = int((int((fSlow71 - 1)) & 8191));
		int 	iSlow190 = int((int((fSlow162 - 1)) & 8191));
		int 	iSlow191 = int((int((fSlow106 - 1)) & 8191));
		int 	iSlow192 = int((int((fSlow134 - 1)) & 8191));
		int 	iSlow193 = int((int((fSlow78 - 1)) & 8191));
		int 	iSlow194 = int((int((fSlow148 - 1)) & 8191));
		int 	iSlow195 = int((int((fSlow92 - 1)) & 8191));
		int 	iSlow196 = int((int((fSlow120 - 1)) & 8191));
		int 	iSlow197 = int((int((fSlow43 - 1)) & 8191));
		float 	fSlow198 = powf(10,(0.05f * float(fslider11)));
		FAUSTFLOAT* input0 = input[0];
		FAUSTFLOAT* input1 = input[1];
		FAUSTFLOAT* output0 = output[0];
		FAUSTFLOAT* output1 = output[1];
		for (int i=0; i<count; i++) {
			float fTemp0 = (fSlow0 * (float)input0[i]);
			fRec23[0] = ((fSlow30 * fRec23[1]) + (fSlow29 * (fRec15[1] + fRec15[2])));
			fRec22[0] = (fRec23[0] - (fSlow27 * ((fSlow25 * fRec22[2]) + (fSlow23 * fRec22[1]))));
			float fTemp1 = (fRec22[2] + (fRec22[0] + (2 * fRec22[1])));
			float fTemp2 = (fSlow27 * fTemp1);
			fVec0[0] = fTemp2;
			fRec21[0] = ((fSlow33 * fRec21[1]) + (fSlow32 * (fVec0[0] + fVec0[1])));
			fRec20[0] = (fRec21[0] - (fSlow20 * ((fSlow18 * fRec20[2]) + (fSlow16 * fRec20[1]))));
			float fTemp3 = (fRec20[2] + (fRec20[0] + (2 * fRec20[1])));
			float fTemp4 = (fSlow20 * fTemp3);
			fVec1[0] = fTemp4;
			fRec19[0] = ((fSlow36 * fRec19[1]) + (fSlow35 * (fVec1[0] + fVec1[1])));
			fRec18[0] = (fRec19[0] - (fSlow13 * ((fSlow11 * fRec18[2]) + (fSlow9 * fRec18[1]))));
			float fTemp5 = (fRec18[2] + (fRec18[0] + (2 * fRec18[1])));
			float fTemp6 = (fSlow13 * fTemp5);
			fVec2[0] = fTemp6;
			fRec17[0] = ((fSlow39 * fRec17[1]) + (fSlow38 * (fVec2[0] + fVec2[1])));
			fRec16[0] = (fRec17[0] - (fSlow6 * ((fSlow5 * fRec16[2]) + (fSlow3 * fRec16[1]))));
			fRec25[0] = ((fSlow39 * fRec25[1]) + (fSlow38 * ((fSlow47 * fTemp5) + (fSlow46 * fVec2[1]))));
			fRec24[0] = (fRec25[0] - (fSlow6 * ((fSlow5 * fRec24[2]) + (fSlow3 * fRec24[1]))));
			float fTemp7 = (fSlow3 * fRec26[1]);
			fRec28[0] = ((fSlow36 * fRec28[1]) + (fSlow35 * ((fSlow54 * fTemp3) + (fSlow53 * fVec1[1]))));
			fRec27[0] = (fRec28[0] - (fSlow13 * ((fSlow11 * fRec27[2]) + (fSlow9 * fRec27[1]))));
			fRec26[0] = ((fSlow13 * (((fSlow8 * fRec27[0]) + (fSlow55 * fRec27[1])) + (fSlow8 * fRec27[2]))) - (fSlow52 * ((fSlow51 * fRec26[2]) + fTemp7)));
			float fTemp8 = (fSlow3 * fRec29[1]);
			float fTemp9 = (fSlow9 * fRec30[1]);
			fRec32[0] = ((fSlow33 * fRec32[1]) + (fSlow32 * ((fSlow61 * fTemp1) + (fSlow60 * fVec0[1]))));
			fRec31[0] = (fRec32[0] - (fSlow20 * ((fSlow18 * fRec31[2]) + (fSlow16 * fRec31[1]))));
			fRec30[0] = ((fSlow20 * (((fSlow15 * fRec31[0]) + (fSlow62 * fRec31[1])) + (fSlow15 * fRec31[2]))) - (fSlow59 * ((fSlow58 * fRec30[2]) + fTemp9)));
			fRec29[0] = ((fRec30[2] + (fSlow59 * (fTemp9 + (fSlow58 * fRec30[0])))) - (fSlow52 * ((fSlow51 * fRec29[2]) + fTemp8)));
			float fTemp10 = (fSlow3 * fRec33[1]);
			float fTemp11 = (fSlow9 * fRec34[1]);
			float fTemp12 = (fSlow16 * fRec35[1]);
			fRec37[0] = ((fSlow30 * fRec37[1]) + (fSlow29 * ((fSlow24 * fRec15[1]) + (fSlow67 * fRec15[2]))));
			fRec36[0] = (fRec37[0] - (fSlow27 * ((fSlow25 * fRec36[2]) + (fSlow23 * fRec36[1]))));
			fRec35[0] = ((fSlow27 * (((fSlow22 * fRec36[0]) + (fSlow68 * fRec36[1])) + (fSlow22 * fRec36[2]))) - (fSlow66 * ((fSlow65 * fRec35[2]) + fTemp12)));
			fRec34[0] = ((fRec35[2] + (fSlow66 * (fTemp12 + (fSlow65 * fRec35[0])))) - (fSlow59 * ((fSlow58 * fRec34[2]) + fTemp11)));
			fRec33[0] = ((fRec34[2] + (fSlow59 * (fTemp11 + (fSlow58 * fRec34[0])))) - (fSlow52 * ((fSlow51 * fRec33[2]) + fTemp10)));
			float fTemp13 = ((((fSlow70 * (fRec33[2] + (fSlow52 * (fTemp10 + (fSlow51 * fRec33[0]))))) + (fSlow64 * (fRec29[2] + (fSlow52 * (fTemp8 + (fSlow51 * fRec29[0])))))) + (fSlow57 * (fRec26[2] + (fSlow52 * (fTemp7 + (fSlow51 * fRec26[0])))))) + (fSlow6 * ((fSlow50 * (((fSlow2 * fRec24[0]) + (fSlow48 * fRec24[1])) + (fSlow2 * fRec24[2]))) + (fSlow45 * (fRec16[2] + (fRec16[0] + (2 * fRec16[1])))))));
			fRec45[0] = ((fSlow30 * fRec45[1]) + (fSlow29 * (fRec7[1] + fRec7[2])));
			fRec44[0] = (fRec45[0] - (fSlow27 * ((fSlow25 * fRec44[2]) + (fSlow23 * fRec44[1]))));
			float fTemp14 = (fRec44[2] + (fRec44[0] + (2 * fRec44[1])));
			float fTemp15 = (fSlow27 * fTemp14);
			fVec3[0] = fTemp15;
			fRec43[0] = ((fSlow33 * fRec43[1]) + (fSlow32 * (fVec3[0] + fVec3[1])));
			fRec42[0] = (fRec43[0] - (fSlow20 * ((fSlow18 * fRec42[2]) + (fSlow16 * fRec42[1]))));
			float fTemp16 = (fRec42[2] + (fRec42[0] + (2 * fRec42[1])));
			float fTemp17 = (fSlow20 * fTemp16);
			fVec4[0] = fTemp17;
			fRec41[0] = ((fSlow36 * fRec41[1]) + (fSlow35 * (fVec4[0] + fVec4[1])));
			fRec40[0] = (fRec41[0] - (fSlow13 * ((fSlow11 * fRec40[2]) + (fSlow9 * fRec40[1]))));
			float fTemp18 = (fRec40[2] + (fRec40[0] + (2 * fRec40[1])));
			float fTemp19 = (fSlow13 * fTemp18);
			fVec5[0] = fTemp19;
			fRec39[0] = ((fSlow39 * fRec39[1]) + (fSlow38 * (fVec5[0] + fVec5[1])));
			fRec38[0] = (fRec39[0] - (fSlow6 * ((fSlow5 * fRec38[2]) + (fSlow3 * fRec38[1]))));
			fRec47[0] = ((fSlow39 * fRec47[1]) + (fSlow38 * ((fSlow47 * fTemp18) + (fSlow46 * fVec5[1]))));
			fRec46[0] = (fRec47[0] - (fSlow6 * ((fSlow5 * fRec46[2]) + (fSlow3 * fRec46[1]))));
			float fTemp20 = (fSlow3 * fRec48[1]);
			fRec50[0] = ((fSlow36 * fRec50[1]) + (fSlow35 * ((fSlow54 * fTemp16) + (fSlow53 * fVec4[1]))));
			fRec49[0] = (fRec50[0] - (fSlow13 * ((fSlow11 * fRec49[2]) + (fSlow9 * fRec49[1]))));
			fRec48[0] = ((fSlow13 * (((fSlow8 * fRec49[0]) + (fSlow55 * fRec49[1])) + (fSlow8 * fRec49[2]))) - (fSlow52 * ((fSlow51 * fRec48[2]) + fTemp20)));
			float fTemp21 = (fSlow3 * fRec51[1]);
			float fTemp22 = (fSlow9 * fRec52[1]);
			fRec54[0] = ((fSlow33 * fRec54[1]) + (fSlow32 * ((fSlow61 * fTemp14) + (fSlow60 * fVec3[1]))));
			fRec53[0] = (fRec54[0] - (fSlow20 * ((fSlow18 * fRec53[2]) + (fSlow16 * fRec53[1]))));
			fRec52[0] = ((fSlow20 * (((fSlow15 * fRec53[0]) + (fSlow62 * fRec53[1])) + (fSlow15 * fRec53[2]))) - (fSlow59 * ((fSlow58 * fRec52[2]) + fTemp22)));
			fRec51[0] = ((fRec52[2] + (fSlow59 * (fTemp22 + (fSlow58 * fRec52[0])))) - (fSlow52 * ((fSlow51 * fRec51[2]) + fTemp21)));
			float fTemp23 = (fSlow3 * fRec55[1]);
			float fTemp24 = (fSlow9 * fRec56[1]);
			float fTemp25 = (fSlow16 * fRec57[1]);
			fRec59[0] = ((fSlow30 * fRec59[1]) + (fSlow29 * ((fSlow24 * fRec7[1]) + (fSlow67 * fRec7[2]))));
			fRec58[0] = (fRec59[0] - (fSlow27 * ((fSlow25 * fRec58[2]) + (fSlow23 * fRec58[1]))));
			fRec57[0] = ((fSlow27 * (((fSlow22 * fRec58[0]) + (fSlow68 * fRec58[1])) + (fSlow22 * fRec58[2]))) - (fSlow66 * ((fSlow65 * fRec57[2]) + fTemp25)));
			fRec56[0] = ((fRec57[2] + (fSlow66 * (fTemp25 + (fSlow65 * fRec57[0])))) - (fSlow59 * ((fSlow58 * fRec56[2]) + fTemp24)));
			fRec55[0] = ((fRec56[2] + (fSlow59 * (fTemp24 + (fSlow58 * fRec56[0])))) - (fSlow52 * ((fSlow51 * fRec55[2]) + fTemp23)));
			float fTemp26 = ((((fSlow77 * (fRec55[2] + (fSlow52 * (fTemp23 + (fSlow51 * fRec55[0]))))) + (fSlow76 * (fRec51[2] + (fSlow52 * (fTemp21 + (fSlow51 * fRec51[0])))))) + (fSlow75 * (fRec48[2] + (fSlow52 * (fTemp20 + (fSlow51 * fRec48[0])))))) + (fSlow6 * ((fSlow74 * (((fSlow2 * fRec46[0]) + (fSlow48 * fRec46[1])) + (fSlow2 * fRec46[2]))) + (fSlow73 * (fRec38[2] + (fRec38[0] + (2 * fRec38[1])))))));
			float fTemp27 = (fTemp26 + fTemp13);
			fRec67[0] = ((fSlow30 * fRec67[1]) + (fSlow29 * (fRec11[1] + fRec11[2])));
			fRec66[0] = (fRec67[0] - (fSlow27 * ((fSlow25 * fRec66[2]) + (fSlow23 * fRec66[1]))));
			float fTemp28 = (fRec66[2] + (fRec66[0] + (2 * fRec66[1])));
			float fTemp29 = (fSlow27 * fTemp28);
			fVec6[0] = fTemp29;
			fRec65[0] = ((fSlow33 * fRec65[1]) + (fSlow32 * (fVec6[0] + fVec6[1])));
			fRec64[0] = (fRec65[0] - (fSlow20 * ((fSlow18 * fRec64[2]) + (fSlow16 * fRec64[1]))));
			float fTemp30 = (fRec64[2] + (fRec64[0] + (2 * fRec64[1])));
			float fTemp31 = (fSlow20 * fTemp30);
			fVec7[0] = fTemp31;
			fRec63[0] = ((fSlow36 * fRec63[1]) + (fSlow35 * (fVec7[0] + fVec7[1])));
			fRec62[0] = (fRec63[0] - (fSlow13 * ((fSlow11 * fRec62[2]) + (fSlow9 * fRec62[1]))));
			float fTemp32 = (fRec62[2] + (fRec62[0] + (2 * fRec62[1])));
			float fTemp33 = (fSlow13 * fTemp32);
			fVec8[0] = fTemp33;
			fRec61[0] = ((fSlow39 * fRec61[1]) + (fSlow38 * (fVec8[0] + fVec8[1])));
			fRec60[0] = (fRec61[0] - (fSlow6 * ((fSlow5 * fRec60[2]) + (fSlow3 * fRec60[1]))));
			fRec69[0] = ((fSlow39 * fRec69[1]) + (fSlow38 * ((fSlow47 * fTemp32) + (fSlow46 * fVec8[1]))));
			fRec68[0] = (fRec69[0] - (fSlow6 * ((fSlow5 * fRec68[2]) + (fSlow3 * fRec68[1]))));
			float fTemp34 = (fSlow3 * fRec70[1]);
			fRec72[0] = ((fSlow36 * fRec72[1]) + (fSlow35 * ((fSlow54 * fTemp30) + (fSlow53 * fVec7[1]))));
			fRec71[0] = (fRec72[0] - (fSlow13 * ((fSlow11 * fRec71[2]) + (fSlow9 * fRec71[1]))));
			fRec70[0] = ((fSlow13 * (((fSlow8 * fRec71[0]) + (fSlow55 * fRec71[1])) + (fSlow8 * fRec71[2]))) - (fSlow52 * ((fSlow51 * fRec70[2]) + fTemp34)));
			float fTemp35 = (fSlow3 * fRec73[1]);
			float fTemp36 = (fSlow9 * fRec74[1]);
			fRec76[0] = ((fSlow33 * fRec76[1]) + (fSlow32 * ((fSlow61 * fTemp28) + (fSlow60 * fVec6[1]))));
			fRec75[0] = (fRec76[0] - (fSlow20 * ((fSlow18 * fRec75[2]) + (fSlow16 * fRec75[1]))));
			fRec74[0] = ((fSlow20 * (((fSlow15 * fRec75[0]) + (fSlow62 * fRec75[1])) + (fSlow15 * fRec75[2]))) - (fSlow59 * ((fSlow58 * fRec74[2]) + fTemp36)));
			fRec73[0] = ((fRec74[2] + (fSlow59 * (fTemp36 + (fSlow58 * fRec74[0])))) - (fSlow52 * ((fSlow51 * fRec73[2]) + fTemp35)));
			float fTemp37 = (fSlow3 * fRec77[1]);
			float fTemp38 = (fSlow9 * fRec78[1]);
			float fTemp39 = (fSlow16 * fRec79[1]);
			fRec81[0] = ((fSlow30 * fRec81[1]) + (fSlow29 * ((fSlow24 * fRec11[1]) + (fSlow67 * fRec11[2]))));
			fRec80[0] = (fRec81[0] - (fSlow27 * ((fSlow25 * fRec80[2]) + (fSlow23 * fRec80[1]))));
			fRec79[0] = ((fSlow27 * (((fSlow22 * fRec80[0]) + (fSlow68 * fRec80[1])) + (fSlow22 * fRec80[2]))) - (fSlow66 * ((fSlow65 * fRec79[2]) + fTemp39)));
			fRec78[0] = ((fRec79[2] + (fSlow66 * (fTemp39 + (fSlow65 * fRec79[0])))) - (fSlow59 * ((fSlow58 * fRec78[2]) + fTemp38)));
			fRec77[0] = ((fRec78[2] + (fSlow59 * (fTemp38 + (fSlow58 * fRec78[0])))) - (fSlow52 * ((fSlow51 * fRec77[2]) + fTemp37)));
			float fTemp40 = ((((fSlow84 * (fRec77[2] + (fSlow52 * (fTemp37 + (fSlow51 * fRec77[0]))))) + (fSlow83 * (fRec73[2] + (fSlow52 * (fTemp35 + (fSlow51 * fRec73[0])))))) + (fSlow82 * (fRec70[2] + (fSlow52 * (fTemp34 + (fSlow51 * fRec70[0])))))) + (fSlow6 * ((fSlow81 * (((fSlow2 * fRec68[0]) + (fSlow48 * fRec68[1])) + (fSlow2 * fRec68[2]))) + (fSlow80 * (fRec60[2] + (fRec60[0] + (2 * fRec60[1])))))));
			fRec89[0] = ((fSlow30 * fRec89[1]) + (fSlow29 * (fRec3[1] + fRec3[2])));
			fRec88[0] = (fRec89[0] - (fSlow27 * ((fSlow25 * fRec88[2]) + (fSlow23 * fRec88[1]))));
			float fTemp41 = (fRec88[2] + (fRec88[0] + (2 * fRec88[1])));
			float fTemp42 = (fSlow27 * fTemp41);
			fVec9[0] = fTemp42;
			fRec87[0] = ((fSlow33 * fRec87[1]) + (fSlow32 * (fVec9[0] + fVec9[1])));
			fRec86[0] = (fRec87[0] - (fSlow20 * ((fSlow18 * fRec86[2]) + (fSlow16 * fRec86[1]))));
			float fTemp43 = (fRec86[2] + (fRec86[0] + (2 * fRec86[1])));
			float fTemp44 = (fSlow20 * fTemp43);
			fVec10[0] = fTemp44;
			fRec85[0] = ((fSlow36 * fRec85[1]) + (fSlow35 * (fVec10[0] + fVec10[1])));
			fRec84[0] = (fRec85[0] - (fSlow13 * ((fSlow11 * fRec84[2]) + (fSlow9 * fRec84[1]))));
			float fTemp45 = (fRec84[2] + (fRec84[0] + (2 * fRec84[1])));
			float fTemp46 = (fSlow13 * fTemp45);
			fVec11[0] = fTemp46;
			fRec83[0] = ((fSlow39 * fRec83[1]) + (fSlow38 * (fVec11[0] + fVec11[1])));
			fRec82[0] = (fRec83[0] - (fSlow6 * ((fSlow5 * fRec82[2]) + (fSlow3 * fRec82[1]))));
			fRec91[0] = ((fSlow39 * fRec91[1]) + (fSlow38 * ((fSlow47 * fTemp45) + (fSlow46 * fVec11[1]))));
			fRec90[0] = (fRec91[0] - (fSlow6 * ((fSlow5 * fRec90[2]) + (fSlow3 * fRec90[1]))));
			float fTemp47 = (fSlow3 * fRec92[1]);
			fRec94[0] = ((fSlow36 * fRec94[1]) + (fSlow35 * ((fSlow54 * fTemp43) + (fSlow53 * fVec10[1]))));
			fRec93[0] = (fRec94[0] - (fSlow13 * ((fSlow11 * fRec93[2]) + (fSlow9 * fRec93[1]))));
			fRec92[0] = ((fSlow13 * (((fSlow8 * fRec93[0]) + (fSlow55 * fRec93[1])) + (fSlow8 * fRec93[2]))) - (fSlow52 * ((fSlow51 * fRec92[2]) + fTemp47)));
			float fTemp48 = (fSlow3 * fRec95[1]);
			float fTemp49 = (fSlow9 * fRec96[1]);
			fRec98[0] = ((fSlow33 * fRec98[1]) + (fSlow32 * ((fSlow61 * fTemp41) + (fSlow60 * fVec9[1]))));
			fRec97[0] = (fRec98[0] - (fSlow20 * ((fSlow18 * fRec97[2]) + (fSlow16 * fRec97[1]))));
			fRec96[0] = ((fSlow20 * (((fSlow15 * fRec97[0]) + (fSlow62 * fRec97[1])) + (fSlow15 * fRec97[2]))) - (fSlow59 * ((fSlow58 * fRec96[2]) + fTemp49)));
			fRec95[0] = ((fRec96[2] + (fSlow59 * (fTemp49 + (fSlow58 * fRec96[0])))) - (fSlow52 * ((fSlow51 * fRec95[2]) + fTemp48)));
			float fTemp50 = (fSlow3 * fRec99[1]);
			float fTemp51 = (fSlow9 * fRec100[1]);
			float fTemp52 = (fSlow16 * fRec101[1]);
			fRec103[0] = ((fSlow30 * fRec103[1]) + (fSlow29 * ((fSlow24 * fRec3[1]) + (fSlow67 * fRec3[2]))));
			fRec102[0] = (fRec103[0] - (fSlow27 * ((fSlow25 * fRec102[2]) + (fSlow23 * fRec102[1]))));
			fRec101[0] = ((fSlow27 * (((fSlow22 * fRec102[0]) + (fSlow68 * fRec102[1])) + (fSlow22 * fRec102[2]))) - (fSlow66 * ((fSlow65 * fRec101[2]) + fTemp52)));
			fRec100[0] = ((fRec101[2] + (fSlow66 * (fTemp52 + (fSlow65 * fRec101[0])))) - (fSlow59 * ((fSlow58 * fRec100[2]) + fTemp51)));
			fRec99[0] = ((fRec100[2] + (fSlow59 * (fTemp51 + (fSlow58 * fRec100[0])))) - (fSlow52 * ((fSlow51 * fRec99[2]) + fTemp50)));
			float fTemp53 = ((((fSlow91 * (fRec99[2] + (fSlow52 * (fTemp50 + (fSlow51 * fRec99[0]))))) + (fSlow90 * (fRec95[2] + (fSlow52 * (fTemp48 + (fSlow51 * fRec95[0])))))) + (fSlow89 * (fRec92[2] + (fSlow52 * (fTemp47 + (fSlow51 * fRec92[0])))))) + (fSlow6 * ((fSlow88 * (((fSlow2 * fRec90[0]) + (fSlow48 * fRec90[1])) + (fSlow2 * fRec90[2]))) + (fSlow87 * (fRec82[2] + (fRec82[0] + (2 * fRec82[1])))))));
			float fTemp54 = (fTemp53 + fTemp40);
			float fTemp55 = (fTemp54 + fTemp27);
			fRec111[0] = ((fSlow30 * fRec111[1]) + (fSlow29 * (fRec13[1] + fRec13[2])));
			fRec110[0] = (fRec111[0] - (fSlow27 * ((fSlow25 * fRec110[2]) + (fSlow23 * fRec110[1]))));
			float fTemp56 = (fRec110[2] + (fRec110[0] + (2 * fRec110[1])));
			float fTemp57 = (fSlow27 * fTemp56);
			fVec12[0] = fTemp57;
			fRec109[0] = ((fSlow33 * fRec109[1]) + (fSlow32 * (fVec12[0] + fVec12[1])));
			fRec108[0] = (fRec109[0] - (fSlow20 * ((fSlow18 * fRec108[2]) + (fSlow16 * fRec108[1]))));
			float fTemp58 = (fRec108[2] + (fRec108[0] + (2 * fRec108[1])));
			float fTemp59 = (fSlow20 * fTemp58);
			fVec13[0] = fTemp59;
			fRec107[0] = ((fSlow36 * fRec107[1]) + (fSlow35 * (fVec13[0] + fVec13[1])));
			fRec106[0] = (fRec107[0] - (fSlow13 * ((fSlow11 * fRec106[2]) + (fSlow9 * fRec106[1]))));
			float fTemp60 = (fRec106[2] + (fRec106[0] + (2 * fRec106[1])));
			float fTemp61 = (fSlow13 * fTemp60);
			fVec14[0] = fTemp61;
			fRec105[0] = ((fSlow39 * fRec105[1]) + (fSlow38 * (fVec14[0] + fVec14[1])));
			fRec104[0] = (fRec105[0] - (fSlow6 * ((fSlow5 * fRec104[2]) + (fSlow3 * fRec104[1]))));
			fRec113[0] = ((fSlow39 * fRec113[1]) + (fSlow38 * ((fSlow47 * fTemp60) + (fSlow46 * fVec14[1]))));
			fRec112[0] = (fRec113[0] - (fSlow6 * ((fSlow5 * fRec112[2]) + (fSlow3 * fRec112[1]))));
			float fTemp62 = (fSlow3 * fRec114[1]);
			fRec116[0] = ((fSlow36 * fRec116[1]) + (fSlow35 * ((fSlow54 * fTemp58) + (fSlow53 * fVec13[1]))));
			fRec115[0] = (fRec116[0] - (fSlow13 * ((fSlow11 * fRec115[2]) + (fSlow9 * fRec115[1]))));
			fRec114[0] = ((fSlow13 * (((fSlow8 * fRec115[0]) + (fSlow55 * fRec115[1])) + (fSlow8 * fRec115[2]))) - (fSlow52 * ((fSlow51 * fRec114[2]) + fTemp62)));
			float fTemp63 = (fSlow3 * fRec117[1]);
			float fTemp64 = (fSlow9 * fRec118[1]);
			fRec120[0] = ((fSlow33 * fRec120[1]) + (fSlow32 * ((fSlow61 * fTemp56) + (fSlow60 * fVec12[1]))));
			fRec119[0] = (fRec120[0] - (fSlow20 * ((fSlow18 * fRec119[2]) + (fSlow16 * fRec119[1]))));
			fRec118[0] = ((fSlow20 * (((fSlow15 * fRec119[0]) + (fSlow62 * fRec119[1])) + (fSlow15 * fRec119[2]))) - (fSlow59 * ((fSlow58 * fRec118[2]) + fTemp64)));
			fRec117[0] = ((fRec118[2] + (fSlow59 * (fTemp64 + (fSlow58 * fRec118[0])))) - (fSlow52 * ((fSlow51 * fRec117[2]) + fTemp63)));
			float fTemp65 = (fSlow3 * fRec121[1]);
			float fTemp66 = (fSlow9 * fRec122[1]);
			float fTemp67 = (fSlow16 * fRec123[1]);
			fRec125[0] = ((fSlow30 * fRec125[1]) + (fSlow29 * ((fSlow24 * fRec13[1]) + (fSlow67 * fRec13[2]))));
			fRec124[0] = (fRec125[0] - (fSlow27 * ((fSlow25 * fRec124[2]) + (fSlow23 * fRec124[1]))));
			fRec123[0] = ((fSlow27 * (((fSlow22 * fRec124[0]) + (fSlow68 * fRec124[1])) + (fSlow22 * fRec124[2]))) - (fSlow66 * ((fSlow65 * fRec123[2]) + fTemp67)));
			fRec122[0] = ((fRec123[2] + (fSlow66 * (fTemp67 + (fSlow65 * fRec123[0])))) - (fSlow59 * ((fSlow58 * fRec122[2]) + fTemp66)));
			fRec121[0] = ((fRec122[2] + (fSlow59 * (fTemp66 + (fSlow58 * fRec122[0])))) - (fSlow52 * ((fSlow51 * fRec121[2]) + fTemp65)));
			float fTemp68 = ((((fSlow98 * (fRec121[2] + (fSlow52 * (fTemp65 + (fSlow51 * fRec121[0]))))) + (fSlow97 * (fRec117[2] + (fSlow52 * (fTemp63 + (fSlow51 * fRec117[0])))))) + (fSlow96 * (fRec114[2] + (fSlow52 * (fTemp62 + (fSlow51 * fRec114[0])))))) + (fSlow6 * ((fSlow95 * (((fSlow2 * fRec112[0]) + (fSlow48 * fRec112[1])) + (fSlow2 * fRec112[2]))) + (fSlow94 * (fRec104[2] + (fRec104[0] + (2 * fRec104[1])))))));
			fRec133[0] = ((fSlow30 * fRec133[1]) + (fSlow29 * (fRec5[1] + fRec5[2])));
			fRec132[0] = (fRec133[0] - (fSlow27 * ((fSlow25 * fRec132[2]) + (fSlow23 * fRec132[1]))));
			float fTemp69 = (fRec132[2] + (fRec132[0] + (2 * fRec132[1])));
			float fTemp70 = (fSlow27 * fTemp69);
			fVec15[0] = fTemp70;
			fRec131[0] = ((fSlow33 * fRec131[1]) + (fSlow32 * (fVec15[0] + fVec15[1])));
			fRec130[0] = (fRec131[0] - (fSlow20 * ((fSlow18 * fRec130[2]) + (fSlow16 * fRec130[1]))));
			float fTemp71 = (fRec130[2] + (fRec130[0] + (2 * fRec130[1])));
			float fTemp72 = (fSlow20 * fTemp71);
			fVec16[0] = fTemp72;
			fRec129[0] = ((fSlow36 * fRec129[1]) + (fSlow35 * (fVec16[0] + fVec16[1])));
			fRec128[0] = (fRec129[0] - (fSlow13 * ((fSlow11 * fRec128[2]) + (fSlow9 * fRec128[1]))));
			float fTemp73 = (fRec128[2] + (fRec128[0] + (2 * fRec128[1])));
			float fTemp74 = (fSlow13 * fTemp73);
			fVec17[0] = fTemp74;
			fRec127[0] = ((fSlow39 * fRec127[1]) + (fSlow38 * (fVec17[0] + fVec17[1])));
			fRec126[0] = (fRec127[0] - (fSlow6 * ((fSlow5 * fRec126[2]) + (fSlow3 * fRec126[1]))));
			fRec135[0] = ((fSlow39 * fRec135[1]) + (fSlow38 * ((fSlow47 * fTemp73) + (fSlow46 * fVec17[1]))));
			fRec134[0] = (fRec135[0] - (fSlow6 * ((fSlow5 * fRec134[2]) + (fSlow3 * fRec134[1]))));
			float fTemp75 = (fSlow3 * fRec136[1]);
			fRec138[0] = ((fSlow36 * fRec138[1]) + (fSlow35 * ((fSlow54 * fTemp71) + (fSlow53 * fVec16[1]))));
			fRec137[0] = (fRec138[0] - (fSlow13 * ((fSlow11 * fRec137[2]) + (fSlow9 * fRec137[1]))));
			fRec136[0] = ((fSlow13 * (((fSlow8 * fRec137[0]) + (fSlow55 * fRec137[1])) + (fSlow8 * fRec137[2]))) - (fSlow52 * ((fSlow51 * fRec136[2]) + fTemp75)));
			float fTemp76 = (fSlow3 * fRec139[1]);
			float fTemp77 = (fSlow9 * fRec140[1]);
			fRec142[0] = ((fSlow33 * fRec142[1]) + (fSlow32 * ((fSlow61 * fTemp69) + (fSlow60 * fVec15[1]))));
			fRec141[0] = (fRec142[0] - (fSlow20 * ((fSlow18 * fRec141[2]) + (fSlow16 * fRec141[1]))));
			fRec140[0] = ((fSlow20 * (((fSlow15 * fRec141[0]) + (fSlow62 * fRec141[1])) + (fSlow15 * fRec141[2]))) - (fSlow59 * ((fSlow58 * fRec140[2]) + fTemp77)));
			fRec139[0] = ((fRec140[2] + (fSlow59 * (fTemp77 + (fSlow58 * fRec140[0])))) - (fSlow52 * ((fSlow51 * fRec139[2]) + fTemp76)));
			float fTemp78 = (fSlow3 * fRec143[1]);
			float fTemp79 = (fSlow9 * fRec144[1]);
			float fTemp80 = (fSlow16 * fRec145[1]);
			fRec147[0] = ((fSlow30 * fRec147[1]) + (fSlow29 * ((fSlow24 * fRec5[1]) + (fSlow67 * fRec5[2]))));
			fRec146[0] = (fRec147[0] - (fSlow27 * ((fSlow25 * fRec146[2]) + (fSlow23 * fRec146[1]))));
			fRec145[0] = ((fSlow27 * (((fSlow22 * fRec146[0]) + (fSlow68 * fRec146[1])) + (fSlow22 * fRec146[2]))) - (fSlow66 * ((fSlow65 * fRec145[2]) + fTemp80)));
			fRec144[0] = ((fRec145[2] + (fSlow66 * (fTemp80 + (fSlow65 * fRec145[0])))) - (fSlow59 * ((fSlow58 * fRec144[2]) + fTemp79)));
			fRec143[0] = ((fRec144[2] + (fSlow59 * (fTemp79 + (fSlow58 * fRec144[0])))) - (fSlow52 * ((fSlow51 * fRec143[2]) + fTemp78)));
			float fTemp81 = ((((fSlow105 * (fRec143[2] + (fSlow52 * (fTemp78 + (fSlow51 * fRec143[0]))))) + (fSlow104 * (fRec139[2] + (fSlow52 * (fTemp76 + (fSlow51 * fRec139[0])))))) + (fSlow103 * (fRec136[2] + (fSlow52 * (fTemp75 + (fSlow51 * fRec136[0])))))) + (fSlow6 * ((fSlow102 * (((fSlow2 * fRec134[0]) + (fSlow48 * fRec134[1])) + (fSlow2 * fRec134[2]))) + (fSlow101 * (fRec126[2] + (fRec126[0] + (2 * fRec126[1])))))));
			float fTemp82 = (fTemp81 + fTemp68);
			fRec155[0] = ((fSlow30 * fRec155[1]) + (fSlow29 * (fRec9[1] + fRec9[2])));
			fRec154[0] = (fRec155[0] - (fSlow27 * ((fSlow25 * fRec154[2]) + (fSlow23 * fRec154[1]))));
			float fTemp83 = (fRec154[2] + (fRec154[0] + (2 * fRec154[1])));
			float fTemp84 = (fSlow27 * fTemp83);
			fVec18[0] = fTemp84;
			fRec153[0] = ((fSlow33 * fRec153[1]) + (fSlow32 * (fVec18[0] + fVec18[1])));
			fRec152[0] = (fRec153[0] - (fSlow20 * ((fSlow18 * fRec152[2]) + (fSlow16 * fRec152[1]))));
			float fTemp85 = (fRec152[2] + (fRec152[0] + (2 * fRec152[1])));
			float fTemp86 = (fSlow20 * fTemp85);
			fVec19[0] = fTemp86;
			fRec151[0] = ((fSlow36 * fRec151[1]) + (fSlow35 * (fVec19[0] + fVec19[1])));
			fRec150[0] = (fRec151[0] - (fSlow13 * ((fSlow11 * fRec150[2]) + (fSlow9 * fRec150[1]))));
			float fTemp87 = (fRec150[2] + (fRec150[0] + (2 * fRec150[1])));
			float fTemp88 = (fSlow13 * fTemp87);
			fVec20[0] = fTemp88;
			fRec149[0] = ((fSlow39 * fRec149[1]) + (fSlow38 * (fVec20[0] + fVec20[1])));
			fRec148[0] = (fRec149[0] - (fSlow6 * ((fSlow5 * fRec148[2]) + (fSlow3 * fRec148[1]))));
			fRec157[0] = ((fSlow39 * fRec157[1]) + (fSlow38 * ((fSlow47 * fTemp87) + (fSlow46 * fVec20[1]))));
			fRec156[0] = (fRec157[0] - (fSlow6 * ((fSlow5 * fRec156[2]) + (fSlow3 * fRec156[1]))));
			float fTemp89 = (fSlow3 * fRec158[1]);
			fRec160[0] = ((fSlow36 * fRec160[1]) + (fSlow35 * ((fSlow54 * fTemp85) + (fSlow53 * fVec19[1]))));
			fRec159[0] = (fRec160[0] - (fSlow13 * ((fSlow11 * fRec159[2]) + (fSlow9 * fRec159[1]))));
			fRec158[0] = ((fSlow13 * (((fSlow8 * fRec159[0]) + (fSlow55 * fRec159[1])) + (fSlow8 * fRec159[2]))) - (fSlow52 * ((fSlow51 * fRec158[2]) + fTemp89)));
			float fTemp90 = (fSlow3 * fRec161[1]);
			float fTemp91 = (fSlow9 * fRec162[1]);
			fRec164[0] = ((fSlow33 * fRec164[1]) + (fSlow32 * ((fSlow61 * fTemp83) + (fSlow60 * fVec18[1]))));
			fRec163[0] = (fRec164[0] - (fSlow20 * ((fSlow18 * fRec163[2]) + (fSlow16 * fRec163[1]))));
			fRec162[0] = ((fSlow20 * (((fSlow15 * fRec163[0]) + (fSlow62 * fRec163[1])) + (fSlow15 * fRec163[2]))) - (fSlow59 * ((fSlow58 * fRec162[2]) + fTemp91)));
			fRec161[0] = ((fRec162[2] + (fSlow59 * (fTemp91 + (fSlow58 * fRec162[0])))) - (fSlow52 * ((fSlow51 * fRec161[2]) + fTemp90)));
			float fTemp92 = (fSlow3 * fRec165[1]);
			float fTemp93 = (fSlow9 * fRec166[1]);
			float fTemp94 = (fSlow16 * fRec167[1]);
			fRec169[0] = ((fSlow30 * fRec169[1]) + (fSlow29 * ((fSlow24 * fRec9[1]) + (fSlow67 * fRec9[2]))));
			fRec168[0] = (fRec169[0] - (fSlow27 * ((fSlow25 * fRec168[2]) + (fSlow23 * fRec168[1]))));
			fRec167[0] = ((fSlow27 * (((fSlow22 * fRec168[0]) + (fSlow68 * fRec168[1])) + (fSlow22 * fRec168[2]))) - (fSlow66 * ((fSlow65 * fRec167[2]) + fTemp94)));
			fRec166[0] = ((fRec167[2] + (fSlow66 * (fTemp94 + (fSlow65 * fRec167[0])))) - (fSlow59 * ((fSlow58 * fRec166[2]) + fTemp93)));
			fRec165[0] = ((fRec166[2] + (fSlow59 * (fTemp93 + (fSlow58 * fRec166[0])))) - (fSlow52 * ((fSlow51 * fRec165[2]) + fTemp92)));
			float fTemp95 = ((((fSlow112 * (fRec165[2] + (fSlow52 * (fTemp92 + (fSlow51 * fRec165[0]))))) + (fSlow111 * (fRec161[2] + (fSlow52 * (fTemp90 + (fSlow51 * fRec161[0])))))) + (fSlow110 * (fRec158[2] + (fSlow52 * (fTemp89 + (fSlow51 * fRec158[0])))))) + (fSlow6 * ((fSlow109 * (((fSlow2 * fRec156[0]) + (fSlow48 * fRec156[1])) + (fSlow2 * fRec156[2]))) + (fSlow108 * (fRec148[2] + (fRec148[0] + (2 * fRec148[1])))))));
			fRec177[0] = ((fSlow30 * fRec177[1]) + (fSlow29 * (fRec1[1] + fRec1[2])));
			fRec176[0] = (fRec177[0] - (fSlow27 * ((fSlow25 * fRec176[2]) + (fSlow23 * fRec176[1]))));
			float fTemp96 = (fRec176[2] + (fRec176[0] + (2 * fRec176[1])));
			float fTemp97 = (fSlow27 * fTemp96);
			fVec21[0] = fTemp97;
			fRec175[0] = ((fSlow33 * fRec175[1]) + (fSlow32 * (fVec21[0] + fVec21[1])));
			fRec174[0] = (fRec175[0] - (fSlow20 * ((fSlow18 * fRec174[2]) + (fSlow16 * fRec174[1]))));
			float fTemp98 = (fRec174[2] + (fRec174[0] + (2 * fRec174[1])));
			float fTemp99 = (fSlow20 * fTemp98);
			fVec22[0] = fTemp99;
			fRec173[0] = ((fSlow36 * fRec173[1]) + (fSlow35 * (fVec22[0] + fVec22[1])));
			fRec172[0] = (fRec173[0] - (fSlow13 * ((fSlow11 * fRec172[2]) + (fSlow9 * fRec172[1]))));
			float fTemp100 = (fRec172[2] + (fRec172[0] + (2 * fRec172[1])));
			float fTemp101 = (fSlow13 * fTemp100);
			fVec23[0] = fTemp101;
			fRec171[0] = ((fSlow39 * fRec171[1]) + (fSlow38 * (fVec23[0] + fVec23[1])));
			fRec170[0] = (fRec171[0] - (fSlow6 * ((fSlow5 * fRec170[2]) + (fSlow3 * fRec170[1]))));
			fRec179[0] = ((fSlow39 * fRec179[1]) + (fSlow38 * ((fSlow47 * fTemp100) + (fSlow46 * fVec23[1]))));
			fRec178[0] = (fRec179[0] - (fSlow6 * ((fSlow5 * fRec178[2]) + (fSlow3 * fRec178[1]))));
			float fTemp102 = (fSlow3 * fRec180[1]);
			fRec182[0] = ((fSlow36 * fRec182[1]) + (fSlow35 * ((fSlow54 * fTemp98) + (fSlow53 * fVec22[1]))));
			fRec181[0] = (fRec182[0] - (fSlow13 * ((fSlow11 * fRec181[2]) + (fSlow9 * fRec181[1]))));
			fRec180[0] = ((fSlow13 * (((fSlow8 * fRec181[0]) + (fSlow55 * fRec181[1])) + (fSlow8 * fRec181[2]))) - (fSlow52 * ((fSlow51 * fRec180[2]) + fTemp102)));
			float fTemp103 = (fSlow3 * fRec183[1]);
			float fTemp104 = (fSlow9 * fRec184[1]);
			fRec186[0] = ((fSlow33 * fRec186[1]) + (fSlow32 * ((fSlow61 * fTemp96) + (fSlow60 * fVec21[1]))));
			fRec185[0] = (fRec186[0] - (fSlow20 * ((fSlow18 * fRec185[2]) + (fSlow16 * fRec185[1]))));
			fRec184[0] = ((fSlow20 * (((fSlow15 * fRec185[0]) + (fSlow62 * fRec185[1])) + (fSlow15 * fRec185[2]))) - (fSlow59 * ((fSlow58 * fRec184[2]) + fTemp104)));
			fRec183[0] = ((fRec184[2] + (fSlow59 * (fTemp104 + (fSlow58 * fRec184[0])))) - (fSlow52 * ((fSlow51 * fRec183[2]) + fTemp103)));
			float fTemp105 = (fSlow3 * fRec187[1]);
			float fTemp106 = (fSlow9 * fRec188[1]);
			float fTemp107 = (fSlow16 * fRec189[1]);
			fRec191[0] = ((fSlow30 * fRec191[1]) + (fSlow29 * ((fSlow24 * fRec1[1]) + (fSlow67 * fRec1[2]))));
			fRec190[0] = (fRec191[0] - (fSlow27 * ((fSlow25 * fRec190[2]) + (fSlow23 * fRec190[1]))));
			fRec189[0] = ((fSlow27 * (((fSlow22 * fRec190[0]) + (fSlow68 * fRec190[1])) + (fSlow22 * fRec190[2]))) - (fSlow66 * ((fSlow65 * fRec189[2]) + fTemp107)));
			fRec188[0] = ((fRec189[2] + (fSlow66 * (fTemp107 + (fSlow65 * fRec189[0])))) - (fSlow59 * ((fSlow58 * fRec188[2]) + fTemp106)));
			fRec187[0] = ((fRec188[2] + (fSlow59 * (fTemp106 + (fSlow58 * fRec188[0])))) - (fSlow52 * ((fSlow51 * fRec187[2]) + fTemp105)));
			float fTemp108 = ((((fSlow119 * (fRec187[2] + (fSlow52 * (fTemp105 + (fSlow51 * fRec187[0]))))) + (fSlow118 * (fRec183[2] + (fSlow52 * (fTemp103 + (fSlow51 * fRec183[0])))))) + (fSlow117 * (fRec180[2] + (fSlow52 * (fTemp102 + (fSlow51 * fRec180[0])))))) + (fSlow6 * ((fSlow116 * (((fSlow2 * fRec178[0]) + (fSlow48 * fRec178[1])) + (fSlow2 * fRec178[2]))) + (fSlow115 * (fRec170[2] + (fRec170[0] + (2 * fRec170[1])))))));
			float fTemp109 = (fTemp108 + fTemp95);
			float fTemp110 = (fTemp109 + fTemp82);
			float fTemp111 = (fTemp110 + fTemp55);
			fRec199[0] = ((fSlow30 * fRec199[1]) + (fSlow29 * (fRec14[1] + fRec14[2])));
			fRec198[0] = (fRec199[0] - (fSlow27 * ((fSlow25 * fRec198[2]) + (fSlow23 * fRec198[1]))));
			float fTemp112 = (fRec198[2] + (fRec198[0] + (2 * fRec198[1])));
			float fTemp113 = (fSlow27 * fTemp112);
			fVec24[0] = fTemp113;
			fRec197[0] = ((fSlow33 * fRec197[1]) + (fSlow32 * (fVec24[0] + fVec24[1])));
			fRec196[0] = (fRec197[0] - (fSlow20 * ((fSlow18 * fRec196[2]) + (fSlow16 * fRec196[1]))));
			float fTemp114 = (fRec196[2] + (fRec196[0] + (2 * fRec196[1])));
			float fTemp115 = (fSlow20 * fTemp114);
			fVec25[0] = fTemp115;
			fRec195[0] = ((fSlow36 * fRec195[1]) + (fSlow35 * (fVec25[0] + fVec25[1])));
			fRec194[0] = (fRec195[0] - (fSlow13 * ((fSlow11 * fRec194[2]) + (fSlow9 * fRec194[1]))));
			float fTemp116 = (fRec194[2] + (fRec194[0] + (2 * fRec194[1])));
			float fTemp117 = (fSlow13 * fTemp116);
			fVec26[0] = fTemp117;
			fRec193[0] = ((fSlow39 * fRec193[1]) + (fSlow38 * (fVec26[0] + fVec26[1])));
			fRec192[0] = (fRec193[0] - (fSlow6 * ((fSlow5 * fRec192[2]) + (fSlow3 * fRec192[1]))));
			fRec201[0] = ((fSlow39 * fRec201[1]) + (fSlow38 * ((fSlow47 * fTemp116) + (fSlow46 * fVec26[1]))));
			fRec200[0] = (fRec201[0] - (fSlow6 * ((fSlow5 * fRec200[2]) + (fSlow3 * fRec200[1]))));
			float fTemp118 = (fSlow3 * fRec202[1]);
			fRec204[0] = ((fSlow36 * fRec204[1]) + (fSlow35 * ((fSlow54 * fTemp114) + (fSlow53 * fVec25[1]))));
			fRec203[0] = (fRec204[0] - (fSlow13 * ((fSlow11 * fRec203[2]) + (fSlow9 * fRec203[1]))));
			fRec202[0] = ((fSlow13 * (((fSlow8 * fRec203[0]) + (fSlow55 * fRec203[1])) + (fSlow8 * fRec203[2]))) - (fSlow52 * ((fSlow51 * fRec202[2]) + fTemp118)));
			float fTemp119 = (fSlow3 * fRec205[1]);
			float fTemp120 = (fSlow9 * fRec206[1]);
			fRec208[0] = ((fSlow33 * fRec208[1]) + (fSlow32 * ((fSlow61 * fTemp112) + (fSlow60 * fVec24[1]))));
			fRec207[0] = (fRec208[0] - (fSlow20 * ((fSlow18 * fRec207[2]) + (fSlow16 * fRec207[1]))));
			fRec206[0] = ((fSlow20 * (((fSlow15 * fRec207[0]) + (fSlow62 * fRec207[1])) + (fSlow15 * fRec207[2]))) - (fSlow59 * ((fSlow58 * fRec206[2]) + fTemp120)));
			fRec205[0] = ((fRec206[2] + (fSlow59 * (fTemp120 + (fSlow58 * fRec206[0])))) - (fSlow52 * ((fSlow51 * fRec205[2]) + fTemp119)));
			float fTemp121 = (fSlow3 * fRec209[1]);
			float fTemp122 = (fSlow9 * fRec210[1]);
			float fTemp123 = (fSlow16 * fRec211[1]);
			fRec213[0] = ((fSlow30 * fRec213[1]) + (fSlow29 * ((fSlow24 * fRec14[1]) + (fSlow67 * fRec14[2]))));
			fRec212[0] = (fRec213[0] - (fSlow27 * ((fSlow25 * fRec212[2]) + (fSlow23 * fRec212[1]))));
			fRec211[0] = ((fSlow27 * (((fSlow22 * fRec212[0]) + (fSlow68 * fRec212[1])) + (fSlow22 * fRec212[2]))) - (fSlow66 * ((fSlow65 * fRec211[2]) + fTemp123)));
			fRec210[0] = ((fRec211[2] + (fSlow66 * (fTemp123 + (fSlow65 * fRec211[0])))) - (fSlow59 * ((fSlow58 * fRec210[2]) + fTemp122)));
			fRec209[0] = ((fRec210[2] + (fSlow59 * (fTemp122 + (fSlow58 * fRec210[0])))) - (fSlow52 * ((fSlow51 * fRec209[2]) + fTemp121)));
			float fTemp124 = ((((fSlow126 * (fRec209[2] + (fSlow52 * (fTemp121 + (fSlow51 * fRec209[0]))))) + (fSlow125 * (fRec205[2] + (fSlow52 * (fTemp119 + (fSlow51 * fRec205[0])))))) + (fSlow124 * (fRec202[2] + (fSlow52 * (fTemp118 + (fSlow51 * fRec202[0])))))) + (fSlow6 * ((fSlow123 * (((fSlow2 * fRec200[0]) + (fSlow48 * fRec200[1])) + (fSlow2 * fRec200[2]))) + (fSlow122 * (fRec192[2] + (fRec192[0] + (2 * fRec192[1])))))));
			fRec221[0] = ((fSlow30 * fRec221[1]) + (fSlow29 * (fRec6[1] + fRec6[2])));
			fRec220[0] = (fRec221[0] - (fSlow27 * ((fSlow25 * fRec220[2]) + (fSlow23 * fRec220[1]))));
			float fTemp125 = (fRec220[2] + (fRec220[0] + (2 * fRec220[1])));
			float fTemp126 = (fSlow27 * fTemp125);
			fVec27[0] = fTemp126;
			fRec219[0] = ((fSlow33 * fRec219[1]) + (fSlow32 * (fVec27[0] + fVec27[1])));
			fRec218[0] = (fRec219[0] - (fSlow20 * ((fSlow18 * fRec218[2]) + (fSlow16 * fRec218[1]))));
			float fTemp127 = (fRec218[2] + (fRec218[0] + (2 * fRec218[1])));
			float fTemp128 = (fSlow20 * fTemp127);
			fVec28[0] = fTemp128;
			fRec217[0] = ((fSlow36 * fRec217[1]) + (fSlow35 * (fVec28[0] + fVec28[1])));
			fRec216[0] = (fRec217[0] - (fSlow13 * ((fSlow11 * fRec216[2]) + (fSlow9 * fRec216[1]))));
			float fTemp129 = (fRec216[2] + (fRec216[0] + (2 * fRec216[1])));
			float fTemp130 = (fSlow13 * fTemp129);
			fVec29[0] = fTemp130;
			fRec215[0] = ((fSlow39 * fRec215[1]) + (fSlow38 * (fVec29[0] + fVec29[1])));
			fRec214[0] = (fRec215[0] - (fSlow6 * ((fSlow5 * fRec214[2]) + (fSlow3 * fRec214[1]))));
			fRec223[0] = ((fSlow39 * fRec223[1]) + (fSlow38 * ((fSlow47 * fTemp129) + (fSlow46 * fVec29[1]))));
			fRec222[0] = (fRec223[0] - (fSlow6 * ((fSlow5 * fRec222[2]) + (fSlow3 * fRec222[1]))));
			float fTemp131 = (fSlow3 * fRec224[1]);
			fRec226[0] = ((fSlow36 * fRec226[1]) + (fSlow35 * ((fSlow54 * fTemp127) + (fSlow53 * fVec28[1]))));
			fRec225[0] = (fRec226[0] - (fSlow13 * ((fSlow11 * fRec225[2]) + (fSlow9 * fRec225[1]))));
			fRec224[0] = ((fSlow13 * (((fSlow8 * fRec225[0]) + (fSlow55 * fRec225[1])) + (fSlow8 * fRec225[2]))) - (fSlow52 * ((fSlow51 * fRec224[2]) + fTemp131)));
			float fTemp132 = (fSlow3 * fRec227[1]);
			float fTemp133 = (fSlow9 * fRec228[1]);
			fRec230[0] = ((fSlow33 * fRec230[1]) + (fSlow32 * ((fSlow61 * fTemp125) + (fSlow60 * fVec27[1]))));
			fRec229[0] = (fRec230[0] - (fSlow20 * ((fSlow18 * fRec229[2]) + (fSlow16 * fRec229[1]))));
			fRec228[0] = ((fSlow20 * (((fSlow15 * fRec229[0]) + (fSlow62 * fRec229[1])) + (fSlow15 * fRec229[2]))) - (fSlow59 * ((fSlow58 * fRec228[2]) + fTemp133)));
			fRec227[0] = ((fRec228[2] + (fSlow59 * (fTemp133 + (fSlow58 * fRec228[0])))) - (fSlow52 * ((fSlow51 * fRec227[2]) + fTemp132)));
			float fTemp134 = (fSlow3 * fRec231[1]);
			float fTemp135 = (fSlow9 * fRec232[1]);
			float fTemp136 = (fSlow16 * fRec233[1]);
			fRec235[0] = ((fSlow30 * fRec235[1]) + (fSlow29 * ((fSlow24 * fRec6[1]) + (fSlow67 * fRec6[2]))));
			fRec234[0] = (fRec235[0] - (fSlow27 * ((fSlow25 * fRec234[2]) + (fSlow23 * fRec234[1]))));
			fRec233[0] = ((fSlow27 * (((fSlow22 * fRec234[0]) + (fSlow68 * fRec234[1])) + (fSlow22 * fRec234[2]))) - (fSlow66 * ((fSlow65 * fRec233[2]) + fTemp136)));
			fRec232[0] = ((fRec233[2] + (fSlow66 * (fTemp136 + (fSlow65 * fRec233[0])))) - (fSlow59 * ((fSlow58 * fRec232[2]) + fTemp135)));
			fRec231[0] = ((fRec232[2] + (fSlow59 * (fTemp135 + (fSlow58 * fRec232[0])))) - (fSlow52 * ((fSlow51 * fRec231[2]) + fTemp134)));
			float fTemp137 = ((((fSlow133 * (fRec231[2] + (fSlow52 * (fTemp134 + (fSlow51 * fRec231[0]))))) + (fSlow132 * (fRec227[2] + (fSlow52 * (fTemp132 + (fSlow51 * fRec227[0])))))) + (fSlow131 * (fRec224[2] + (fSlow52 * (fTemp131 + (fSlow51 * fRec224[0])))))) + (fSlow6 * ((fSlow130 * (((fSlow2 * fRec222[0]) + (fSlow48 * fRec222[1])) + (fSlow2 * fRec222[2]))) + (fSlow129 * (fRec214[2] + (fRec214[0] + (2 * fRec214[1])))))));
			float fTemp138 = (fTemp137 + fTemp124);
			fRec243[0] = ((fSlow30 * fRec243[1]) + (fSlow29 * (fRec10[1] + fRec10[2])));
			fRec242[0] = (fRec243[0] - (fSlow27 * ((fSlow25 * fRec242[2]) + (fSlow23 * fRec242[1]))));
			float fTemp139 = (fRec242[2] + (fRec242[0] + (2 * fRec242[1])));
			float fTemp140 = (fSlow27 * fTemp139);
			fVec30[0] = fTemp140;
			fRec241[0] = ((fSlow33 * fRec241[1]) + (fSlow32 * (fVec30[0] + fVec30[1])));
			fRec240[0] = (fRec241[0] - (fSlow20 * ((fSlow18 * fRec240[2]) + (fSlow16 * fRec240[1]))));
			float fTemp141 = (fRec240[2] + (fRec240[0] + (2 * fRec240[1])));
			float fTemp142 = (fSlow20 * fTemp141);
			fVec31[0] = fTemp142;
			fRec239[0] = ((fSlow36 * fRec239[1]) + (fSlow35 * (fVec31[0] + fVec31[1])));
			fRec238[0] = (fRec239[0] - (fSlow13 * ((fSlow11 * fRec238[2]) + (fSlow9 * fRec238[1]))));
			float fTemp143 = (fRec238[2] + (fRec238[0] + (2 * fRec238[1])));
			float fTemp144 = (fSlow13 * fTemp143);
			fVec32[0] = fTemp144;
			fRec237[0] = ((fSlow39 * fRec237[1]) + (fSlow38 * (fVec32[0] + fVec32[1])));
			fRec236[0] = (fRec237[0] - (fSlow6 * ((fSlow5 * fRec236[2]) + (fSlow3 * fRec236[1]))));
			fRec245[0] = ((fSlow39 * fRec245[1]) + (fSlow38 * ((fSlow47 * fTemp143) + (fSlow46 * fVec32[1]))));
			fRec244[0] = (fRec245[0] - (fSlow6 * ((fSlow5 * fRec244[2]) + (fSlow3 * fRec244[1]))));
			float fTemp145 = (fSlow3 * fRec246[1]);
			fRec248[0] = ((fSlow36 * fRec248[1]) + (fSlow35 * ((fSlow54 * fTemp141) + (fSlow53 * fVec31[1]))));
			fRec247[0] = (fRec248[0] - (fSlow13 * ((fSlow11 * fRec247[2]) + (fSlow9 * fRec247[1]))));
			fRec246[0] = ((fSlow13 * (((fSlow8 * fRec247[0]) + (fSlow55 * fRec247[1])) + (fSlow8 * fRec247[2]))) - (fSlow52 * ((fSlow51 * fRec246[2]) + fTemp145)));
			float fTemp146 = (fSlow3 * fRec249[1]);
			float fTemp147 = (fSlow9 * fRec250[1]);
			fRec252[0] = ((fSlow33 * fRec252[1]) + (fSlow32 * ((fSlow61 * fTemp139) + (fSlow60 * fVec30[1]))));
			fRec251[0] = (fRec252[0] - (fSlow20 * ((fSlow18 * fRec251[2]) + (fSlow16 * fRec251[1]))));
			fRec250[0] = ((fSlow20 * (((fSlow15 * fRec251[0]) + (fSlow62 * fRec251[1])) + (fSlow15 * fRec251[2]))) - (fSlow59 * ((fSlow58 * fRec250[2]) + fTemp147)));
			fRec249[0] = ((fRec250[2] + (fSlow59 * (fTemp147 + (fSlow58 * fRec250[0])))) - (fSlow52 * ((fSlow51 * fRec249[2]) + fTemp146)));
			float fTemp148 = (fSlow3 * fRec253[1]);
			float fTemp149 = (fSlow9 * fRec254[1]);
			float fTemp150 = (fSlow16 * fRec255[1]);
			fRec257[0] = ((fSlow30 * fRec257[1]) + (fSlow29 * ((fSlow24 * fRec10[1]) + (fSlow67 * fRec10[2]))));
			fRec256[0] = (fRec257[0] - (fSlow27 * ((fSlow25 * fRec256[2]) + (fSlow23 * fRec256[1]))));
			fRec255[0] = ((fSlow27 * (((fSlow22 * fRec256[0]) + (fSlow68 * fRec256[1])) + (fSlow22 * fRec256[2]))) - (fSlow66 * ((fSlow65 * fRec255[2]) + fTemp150)));
			fRec254[0] = ((fRec255[2] + (fSlow66 * (fTemp150 + (fSlow65 * fRec255[0])))) - (fSlow59 * ((fSlow58 * fRec254[2]) + fTemp149)));
			fRec253[0] = ((fRec254[2] + (fSlow59 * (fTemp149 + (fSlow58 * fRec254[0])))) - (fSlow52 * ((fSlow51 * fRec253[2]) + fTemp148)));
			float fTemp151 = ((((fSlow140 * (fRec253[2] + (fSlow52 * (fTemp148 + (fSlow51 * fRec253[0]))))) + (fSlow139 * (fRec249[2] + (fSlow52 * (fTemp146 + (fSlow51 * fRec249[0])))))) + (fSlow138 * (fRec246[2] + (fSlow52 * (fTemp145 + (fSlow51 * fRec246[0])))))) + (fSlow6 * ((fSlow137 * (((fSlow2 * fRec244[0]) + (fSlow48 * fRec244[1])) + (fSlow2 * fRec244[2]))) + (fSlow136 * (fRec236[2] + (fRec236[0] + (2 * fRec236[1])))))));
			fRec265[0] = ((fSlow30 * fRec265[1]) + (fSlow29 * (fRec2[1] + fRec2[2])));
			fRec264[0] = (fRec265[0] - (fSlow27 * ((fSlow25 * fRec264[2]) + (fSlow23 * fRec264[1]))));
			float fTemp152 = (fRec264[2] + (fRec264[0] + (2 * fRec264[1])));
			float fTemp153 = (fSlow27 * fTemp152);
			fVec33[0] = fTemp153;
			fRec263[0] = ((fSlow33 * fRec263[1]) + (fSlow32 * (fVec33[0] + fVec33[1])));
			fRec262[0] = (fRec263[0] - (fSlow20 * ((fSlow18 * fRec262[2]) + (fSlow16 * fRec262[1]))));
			float fTemp154 = (fRec262[2] + (fRec262[0] + (2 * fRec262[1])));
			float fTemp155 = (fSlow20 * fTemp154);
			fVec34[0] = fTemp155;
			fRec261[0] = ((fSlow36 * fRec261[1]) + (fSlow35 * (fVec34[0] + fVec34[1])));
			fRec260[0] = (fRec261[0] - (fSlow13 * ((fSlow11 * fRec260[2]) + (fSlow9 * fRec260[1]))));
			float fTemp156 = (fRec260[2] + (fRec260[0] + (2 * fRec260[1])));
			float fTemp157 = (fSlow13 * fTemp156);
			fVec35[0] = fTemp157;
			fRec259[0] = ((fSlow39 * fRec259[1]) + (fSlow38 * (fVec35[0] + fVec35[1])));
			fRec258[0] = (fRec259[0] - (fSlow6 * ((fSlow5 * fRec258[2]) + (fSlow3 * fRec258[1]))));
			fRec267[0] = ((fSlow39 * fRec267[1]) + (fSlow38 * ((fSlow47 * fTemp156) + (fSlow46 * fVec35[1]))));
			fRec266[0] = (fRec267[0] - (fSlow6 * ((fSlow5 * fRec266[2]) + (fSlow3 * fRec266[1]))));
			float fTemp158 = (fSlow3 * fRec268[1]);
			fRec270[0] = ((fSlow36 * fRec270[1]) + (fSlow35 * ((fSlow54 * fTemp154) + (fSlow53 * fVec34[1]))));
			fRec269[0] = (fRec270[0] - (fSlow13 * ((fSlow11 * fRec269[2]) + (fSlow9 * fRec269[1]))));
			fRec268[0] = ((fSlow13 * (((fSlow8 * fRec269[0]) + (fSlow55 * fRec269[1])) + (fSlow8 * fRec269[2]))) - (fSlow52 * ((fSlow51 * fRec268[2]) + fTemp158)));
			float fTemp159 = (fSlow3 * fRec271[1]);
			float fTemp160 = (fSlow9 * fRec272[1]);
			fRec274[0] = ((fSlow33 * fRec274[1]) + (fSlow32 * ((fSlow61 * fTemp152) + (fSlow60 * fVec33[1]))));
			fRec273[0] = (fRec274[0] - (fSlow20 * ((fSlow18 * fRec273[2]) + (fSlow16 * fRec273[1]))));
			fRec272[0] = ((fSlow20 * (((fSlow15 * fRec273[0]) + (fSlow62 * fRec273[1])) + (fSlow15 * fRec273[2]))) - (fSlow59 * ((fSlow58 * fRec272[2]) + fTemp160)));
			fRec271[0] = ((fRec272[2] + (fSlow59 * (fTemp160 + (fSlow58 * fRec272[0])))) - (fSlow52 * ((fSlow51 * fRec271[2]) + fTemp159)));
			float fTemp161 = (fSlow3 * fRec275[1]);
			float fTemp162 = (fSlow9 * fRec276[1]);
			float fTemp163 = (fSlow16 * fRec277[1]);
			fRec279[0] = ((fSlow30 * fRec279[1]) + (fSlow29 * ((fSlow24 * fRec2[1]) + (fSlow67 * fRec2[2]))));
			fRec278[0] = (fRec279[0] - (fSlow27 * ((fSlow25 * fRec278[2]) + (fSlow23 * fRec278[1]))));
			fRec277[0] = ((fSlow27 * (((fSlow22 * fRec278[0]) + (fSlow68 * fRec278[1])) + (fSlow22 * fRec278[2]))) - (fSlow66 * ((fSlow65 * fRec277[2]) + fTemp163)));
			fRec276[0] = ((fRec277[2] + (fSlow66 * (fTemp163 + (fSlow65 * fRec277[0])))) - (fSlow59 * ((fSlow58 * fRec276[2]) + fTemp162)));
			fRec275[0] = ((fRec276[2] + (fSlow59 * (fTemp162 + (fSlow58 * fRec276[0])))) - (fSlow52 * ((fSlow51 * fRec275[2]) + fTemp161)));
			float fTemp164 = ((((fSlow147 * (fRec275[2] + (fSlow52 * (fTemp161 + (fSlow51 * fRec275[0]))))) + (fSlow146 * (fRec271[2] + (fSlow52 * (fTemp159 + (fSlow51 * fRec271[0])))))) + (fSlow145 * (fRec268[2] + (fSlow52 * (fTemp158 + (fSlow51 * fRec268[0])))))) + (fSlow6 * ((fSlow144 * (((fSlow2 * fRec266[0]) + (fSlow48 * fRec266[1])) + (fSlow2 * fRec266[2]))) + (fSlow143 * (fRec258[2] + (fRec258[0] + (2 * fRec258[1])))))));
			float fTemp165 = (fTemp164 + fTemp151);
			float fTemp166 = (fTemp165 + fTemp138);
			fRec287[0] = ((fSlow30 * fRec287[1]) + (fSlow29 * (fRec12[1] + fRec12[2])));
			fRec286[0] = (fRec287[0] - (fSlow27 * ((fSlow25 * fRec286[2]) + (fSlow23 * fRec286[1]))));
			float fTemp167 = (fRec286[2] + (fRec286[0] + (2 * fRec286[1])));
			float fTemp168 = (fSlow27 * fTemp167);
			fVec36[0] = fTemp168;
			fRec285[0] = ((fSlow33 * fRec285[1]) + (fSlow32 * (fVec36[0] + fVec36[1])));
			fRec284[0] = (fRec285[0] - (fSlow20 * ((fSlow18 * fRec284[2]) + (fSlow16 * fRec284[1]))));
			float fTemp169 = (fRec284[2] + (fRec284[0] + (2 * fRec284[1])));
			float fTemp170 = (fSlow20 * fTemp169);
			fVec37[0] = fTemp170;
			fRec283[0] = ((fSlow36 * fRec283[1]) + (fSlow35 * (fVec37[0] + fVec37[1])));
			fRec282[0] = (fRec283[0] - (fSlow13 * ((fSlow11 * fRec282[2]) + (fSlow9 * fRec282[1]))));
			float fTemp171 = (fRec282[2] + (fRec282[0] + (2 * fRec282[1])));
			float fTemp172 = (fSlow13 * fTemp171);
			fVec38[0] = fTemp172;
			fRec281[0] = ((fSlow39 * fRec281[1]) + (fSlow38 * (fVec38[0] + fVec38[1])));
			fRec280[0] = (fRec281[0] - (fSlow6 * ((fSlow5 * fRec280[2]) + (fSlow3 * fRec280[1]))));
			fRec289[0] = ((fSlow39 * fRec289[1]) + (fSlow38 * ((fSlow47 * fTemp171) + (fSlow46 * fVec38[1]))));
			fRec288[0] = (fRec289[0] - (fSlow6 * ((fSlow5 * fRec288[2]) + (fSlow3 * fRec288[1]))));
			float fTemp173 = (fSlow3 * fRec290[1]);
			fRec292[0] = ((fSlow36 * fRec292[1]) + (fSlow35 * ((fSlow53 * fVec37[1]) + (fSlow54 * fTemp169))));
			fRec291[0] = (fRec292[0] - (fSlow13 * ((fSlow11 * fRec291[2]) + (fSlow9 * fRec291[1]))));
			fRec290[0] = ((fSlow13 * (((fSlow8 * fRec291[0]) + (fSlow55 * fRec291[1])) + (fSlow8 * fRec291[2]))) - (fSlow52 * ((fSlow51 * fRec290[2]) + fTemp173)));
			float fTemp174 = (fSlow3 * fRec293[1]);
			float fTemp175 = (fSlow9 * fRec294[1]);
			fRec296[0] = ((fSlow33 * fRec296[1]) + (fSlow32 * ((fSlow61 * fTemp167) + (fSlow60 * fVec36[1]))));
			fRec295[0] = (fRec296[0] - (fSlow20 * ((fSlow18 * fRec295[2]) + (fSlow16 * fRec295[1]))));
			fRec294[0] = ((fSlow20 * (((fSlow15 * fRec295[0]) + (fSlow62 * fRec295[1])) + (fSlow15 * fRec295[2]))) - (fSlow59 * ((fSlow58 * fRec294[2]) + fTemp175)));
			fRec293[0] = ((fRec294[2] + (fSlow59 * (fTemp175 + (fSlow58 * fRec294[0])))) - (fSlow52 * ((fSlow51 * fRec293[2]) + fTemp174)));
			float fTemp176 = (fSlow3 * fRec297[1]);
			float fTemp177 = (fSlow9 * fRec298[1]);
			float fTemp178 = (fSlow16 * fRec299[1]);
			fRec301[0] = ((fSlow30 * fRec301[1]) + (fSlow29 * ((fSlow24 * fRec12[1]) + (fSlow67 * fRec12[2]))));
			fRec300[0] = (fRec301[0] - (fSlow27 * ((fSlow25 * fRec300[2]) + (fSlow23 * fRec300[1]))));
			fRec299[0] = ((fSlow27 * (((fSlow22 * fRec300[0]) + (fSlow68 * fRec300[1])) + (fSlow22 * fRec300[2]))) - (fSlow66 * ((fSlow65 * fRec299[2]) + fTemp178)));
			fRec298[0] = ((fRec299[2] + (fSlow66 * (fTemp178 + (fSlow65 * fRec299[0])))) - (fSlow59 * ((fSlow58 * fRec298[2]) + fTemp177)));
			fRec297[0] = ((fRec298[2] + (fSlow59 * (fTemp177 + (fSlow58 * fRec298[0])))) - (fSlow52 * ((fSlow51 * fRec297[2]) + fTemp176)));
			float fTemp179 = ((((fSlow154 * (fRec297[2] + (fSlow52 * (fTemp176 + (fSlow51 * fRec297[0]))))) + (fSlow153 * (fRec293[2] + (fSlow52 * (fTemp174 + (fSlow51 * fRec293[0])))))) + (fSlow152 * (fRec290[2] + (fSlow52 * (fTemp173 + (fSlow51 * fRec290[0])))))) + (fSlow6 * ((fSlow151 * (((fSlow2 * fRec288[0]) + (fSlow48 * fRec288[1])) + (fSlow2 * fRec288[2]))) + (fSlow150 * (fRec280[2] + (fRec280[0] + (2 * fRec280[1])))))));
			fRec309[0] = ((fSlow30 * fRec309[1]) + (fSlow29 * (fRec4[1] + fRec4[2])));
			fRec308[0] = (fRec309[0] - (fSlow27 * ((fSlow25 * fRec308[2]) + (fSlow23 * fRec308[1]))));
			float fTemp180 = (fRec308[2] + (fRec308[0] + (2 * fRec308[1])));
			float fTemp181 = (fSlow27 * fTemp180);
			fVec39[0] = fTemp181;
			fRec307[0] = ((fSlow33 * fRec307[1]) + (fSlow32 * (fVec39[0] + fVec39[1])));
			fRec306[0] = (fRec307[0] - (fSlow20 * ((fSlow18 * fRec306[2]) + (fSlow16 * fRec306[1]))));
			float fTemp182 = (fRec306[2] + (fRec306[0] + (2 * fRec306[1])));
			float fTemp183 = (fSlow20 * fTemp182);
			fVec40[0] = fTemp183;
			fRec305[0] = ((fSlow36 * fRec305[1]) + (fSlow35 * (fVec40[0] + fVec40[1])));
			fRec304[0] = (fRec305[0] - (fSlow13 * ((fSlow11 * fRec304[2]) + (fSlow9 * fRec304[1]))));
			float fTemp184 = (fRec304[2] + (fRec304[0] + (2 * fRec304[1])));
			float fTemp185 = (fSlow13 * fTemp184);
			fVec41[0] = fTemp185;
			fRec303[0] = ((fSlow39 * fRec303[1]) + (fSlow38 * (fVec41[0] + fVec41[1])));
			fRec302[0] = (fRec303[0] - (fSlow6 * ((fSlow5 * fRec302[2]) + (fSlow3 * fRec302[1]))));
			fRec311[0] = ((fSlow39 * fRec311[1]) + (fSlow38 * ((fSlow47 * fTemp184) + (fSlow46 * fVec41[1]))));
			fRec310[0] = (fRec311[0] - (fSlow6 * ((fSlow5 * fRec310[2]) + (fSlow3 * fRec310[1]))));
			float fTemp186 = (fSlow3 * fRec312[1]);
			fRec314[0] = ((fSlow36 * fRec314[1]) + (fSlow35 * ((fSlow54 * fTemp182) + (fSlow53 * fVec40[1]))));
			fRec313[0] = (fRec314[0] - (fSlow13 * ((fSlow11 * fRec313[2]) + (fSlow9 * fRec313[1]))));
			fRec312[0] = ((fSlow13 * (((fSlow8 * fRec313[0]) + (fSlow55 * fRec313[1])) + (fSlow8 * fRec313[2]))) - (fSlow52 * ((fSlow51 * fRec312[2]) + fTemp186)));
			float fTemp187 = (fSlow3 * fRec315[1]);
			float fTemp188 = (fSlow9 * fRec316[1]);
			fRec318[0] = ((fSlow33 * fRec318[1]) + (fSlow32 * ((fSlow61 * fTemp180) + (fSlow60 * fVec39[1]))));
			fRec317[0] = (fRec318[0] - (fSlow20 * ((fSlow18 * fRec317[2]) + (fSlow16 * fRec317[1]))));
			fRec316[0] = ((fSlow20 * (((fSlow15 * fRec317[0]) + (fSlow62 * fRec317[1])) + (fSlow15 * fRec317[2]))) - (fSlow59 * ((fSlow58 * fRec316[2]) + fTemp188)));
			fRec315[0] = ((fRec316[2] + (fSlow59 * (fTemp188 + (fSlow58 * fRec316[0])))) - (fSlow52 * ((fSlow51 * fRec315[2]) + fTemp187)));
			float fTemp189 = (fSlow3 * fRec319[1]);
			float fTemp190 = (fSlow9 * fRec320[1]);
			float fTemp191 = (fSlow16 * fRec321[1]);
			fRec323[0] = ((fSlow30 * fRec323[1]) + (fSlow29 * ((fSlow24 * fRec4[1]) + (fSlow67 * fRec4[2]))));
			fRec322[0] = (fRec323[0] - (fSlow27 * ((fSlow25 * fRec322[2]) + (fSlow23 * fRec322[1]))));
			fRec321[0] = ((fSlow27 * (((fSlow22 * fRec322[0]) + (fSlow68 * fRec322[1])) + (fSlow22 * fRec322[2]))) - (fSlow66 * ((fSlow65 * fRec321[2]) + fTemp191)));
			fRec320[0] = ((fRec321[2] + (fSlow66 * (fTemp191 + (fSlow65 * fRec321[0])))) - (fSlow59 * ((fSlow58 * fRec320[2]) + fTemp190)));
			fRec319[0] = ((fRec320[2] + (fSlow59 * (fTemp190 + (fSlow58 * fRec320[0])))) - (fSlow52 * ((fSlow51 * fRec319[2]) + fTemp189)));
			float fTemp192 = ((((fSlow161 * (fRec319[2] + (fSlow52 * (fTemp189 + (fSlow51 * fRec319[0]))))) + (fSlow160 * (fRec315[2] + (fSlow52 * (fTemp187 + (fSlow51 * fRec315[0])))))) + (fSlow159 * (fRec312[2] + (fSlow52 * (fTemp186 + (fSlow51 * fRec312[0])))))) + (fSlow6 * ((fSlow158 * (((fSlow2 * fRec310[0]) + (fSlow48 * fRec310[1])) + (fSlow2 * fRec310[2]))) + (fSlow157 * (fRec302[2] + (fRec302[0] + (2 * fRec302[1])))))));
			float fTemp193 = (fTemp192 + fTemp179);
			fRec331[0] = ((fSlow30 * fRec331[1]) + (fSlow29 * (fRec8[1] + fRec8[2])));
			fRec330[0] = (fRec331[0] - (fSlow27 * ((fSlow25 * fRec330[2]) + (fSlow23 * fRec330[1]))));
			float fTemp194 = (fRec330[2] + (fRec330[0] + (2 * fRec330[1])));
			float fTemp195 = (fSlow27 * fTemp194);
			fVec42[0] = fTemp195;
			fRec329[0] = ((fSlow33 * fRec329[1]) + (fSlow32 * (fVec42[0] + fVec42[1])));
			fRec328[0] = (fRec329[0] - (fSlow20 * ((fSlow18 * fRec328[2]) + (fSlow16 * fRec328[1]))));
			float fTemp196 = (fRec328[2] + (fRec328[0] + (2 * fRec328[1])));
			float fTemp197 = (fSlow20 * fTemp196);
			fVec43[0] = fTemp197;
			fRec327[0] = ((fSlow36 * fRec327[1]) + (fSlow35 * (fVec43[0] + fVec43[1])));
			fRec326[0] = (fRec327[0] - (fSlow13 * ((fSlow11 * fRec326[2]) + (fSlow9 * fRec326[1]))));
			float fTemp198 = (fRec326[2] + (fRec326[0] + (2 * fRec326[1])));
			float fTemp199 = (fSlow13 * fTemp198);
			fVec44[0] = fTemp199;
			fRec325[0] = ((fSlow39 * fRec325[1]) + (fSlow38 * (fVec44[0] + fVec44[1])));
			fRec324[0] = (fRec325[0] - (fSlow6 * ((fSlow5 * fRec324[2]) + (fSlow3 * fRec324[1]))));
			fRec333[0] = ((fSlow39 * fRec333[1]) + (fSlow38 * ((fSlow47 * fTemp198) + (fSlow46 * fVec44[1]))));
			fRec332[0] = (fRec333[0] - (fSlow6 * ((fSlow5 * fRec332[2]) + (fSlow3 * fRec332[1]))));
			float fTemp200 = (fSlow3 * fRec334[1]);
			fRec336[0] = ((fSlow36 * fRec336[1]) + (fSlow35 * ((fSlow54 * fTemp196) + (fSlow53 * fVec43[1]))));
			fRec335[0] = (fRec336[0] - (fSlow13 * ((fSlow11 * fRec335[2]) + (fSlow9 * fRec335[1]))));
			fRec334[0] = ((fSlow13 * (((fSlow8 * fRec335[0]) + (fSlow55 * fRec335[1])) + (fSlow8 * fRec335[2]))) - (fSlow52 * ((fSlow51 * fRec334[2]) + fTemp200)));
			float fTemp201 = (fSlow3 * fRec337[1]);
			float fTemp202 = (fSlow9 * fRec338[1]);
			fRec340[0] = ((fSlow33 * fRec340[1]) + (fSlow32 * ((fSlow61 * fTemp194) + (fSlow60 * fVec42[1]))));
			fRec339[0] = (fRec340[0] - (fSlow20 * ((fSlow18 * fRec339[2]) + (fSlow16 * fRec339[1]))));
			fRec338[0] = ((fSlow20 * (((fSlow15 * fRec339[0]) + (fSlow62 * fRec339[1])) + (fSlow15 * fRec339[2]))) - (fSlow59 * ((fSlow58 * fRec338[2]) + fTemp202)));
			fRec337[0] = ((fRec338[2] + (fSlow59 * (fTemp202 + (fSlow58 * fRec338[0])))) - (fSlow52 * ((fSlow51 * fRec337[2]) + fTemp201)));
			float fTemp203 = (fSlow3 * fRec341[1]);
			float fTemp204 = (fSlow9 * fRec342[1]);
			float fTemp205 = (fSlow16 * fRec343[1]);
			fRec345[0] = ((fSlow30 * fRec345[1]) + (fSlow29 * ((fSlow24 * fRec8[1]) + (fSlow67 * fRec8[2]))));
			fRec344[0] = (fRec345[0] - (fSlow27 * ((fSlow25 * fRec344[2]) + (fSlow23 * fRec344[1]))));
			fRec343[0] = ((fSlow27 * (((fSlow22 * fRec344[0]) + (fSlow68 * fRec344[1])) + (fSlow22 * fRec344[2]))) - (fSlow66 * ((fSlow65 * fRec343[2]) + fTemp205)));
			fRec342[0] = ((fRec343[2] + (fSlow66 * (fTemp205 + (fSlow65 * fRec343[0])))) - (fSlow59 * ((fSlow58 * fRec342[2]) + fTemp204)));
			fRec341[0] = ((fRec342[2] + (fSlow59 * (fTemp204 + (fSlow58 * fRec342[0])))) - (fSlow52 * ((fSlow51 * fRec341[2]) + fTemp203)));
			float fTemp206 = ((((fSlow168 * (fRec341[2] + (fSlow52 * (fTemp203 + (fSlow51 * fRec341[0]))))) + (fSlow167 * (fRec337[2] + (fSlow52 * (fTemp201 + (fSlow51 * fRec337[0])))))) + (fSlow166 * (fRec334[2] + (fSlow52 * (fTemp200 + (fSlow51 * fRec334[0])))))) + (fSlow6 * ((fSlow165 * (((fSlow2 * fRec332[0]) + (fSlow48 * fRec332[1])) + (fSlow2 * fRec332[2]))) + (fSlow164 * (fRec324[2] + (fRec324[0] + (2 * fRec324[1])))))));
			fRec353[0] = ((fSlow30 * fRec353[1]) + (fSlow29 * (fRec0[1] + fRec0[2])));
			fRec352[0] = (fRec353[0] - (fSlow27 * ((fSlow25 * fRec352[2]) + (fSlow23 * fRec352[1]))));
			float fTemp207 = (fRec352[2] + (fRec352[0] + (2 * fRec352[1])));
			float fTemp208 = (fSlow27 * fTemp207);
			fVec45[0] = fTemp208;
			fRec351[0] = ((fSlow33 * fRec351[1]) + (fSlow32 * (fVec45[0] + fVec45[1])));
			fRec350[0] = (fRec351[0] - (fSlow20 * ((fSlow18 * fRec350[2]) + (fSlow16 * fRec350[1]))));
			float fTemp209 = (fRec350[2] + (fRec350[0] + (2 * fRec350[1])));
			float fTemp210 = (fSlow20 * fTemp209);
			fVec46[0] = fTemp210;
			fRec349[0] = ((fSlow36 * fRec349[1]) + (fSlow35 * (fVec46[0] + fVec46[1])));
			fRec348[0] = (fRec349[0] - (fSlow13 * ((fSlow11 * fRec348[2]) + (fSlow9 * fRec348[1]))));
			float fTemp211 = (fRec348[2] + (fRec348[0] + (2 * fRec348[1])));
			float fTemp212 = (fSlow13 * fTemp211);
			fVec47[0] = fTemp212;
			fRec347[0] = ((fSlow39 * fRec347[1]) + (fSlow38 * (fVec47[0] + fVec47[1])));
			fRec346[0] = (fRec347[0] - (fSlow6 * ((fSlow5 * fRec346[2]) + (fSlow3 * fRec346[1]))));
			fRec355[0] = ((fSlow39 * fRec355[1]) + (fSlow38 * ((fSlow47 * fTemp211) + (fSlow46 * fVec47[1]))));
			fRec354[0] = (fRec355[0] - (fSlow6 * ((fSlow5 * fRec354[2]) + (fSlow3 * fRec354[1]))));
			float fTemp213 = (fSlow3 * fRec356[1]);
			fRec358[0] = ((fSlow36 * fRec358[1]) + (fSlow35 * ((fSlow54 * fTemp209) + (fSlow53 * fVec46[1]))));
			fRec357[0] = (fRec358[0] - (fSlow13 * ((fSlow11 * fRec357[2]) + (fSlow9 * fRec357[1]))));
			fRec356[0] = ((fSlow13 * (((fSlow8 * fRec357[0]) + (fSlow55 * fRec357[1])) + (fSlow8 * fRec357[2]))) - (fSlow52 * ((fSlow51 * fRec356[2]) + fTemp213)));
			float fTemp214 = (fSlow3 * fRec359[1]);
			float fTemp215 = (fSlow9 * fRec360[1]);
			fRec362[0] = ((fSlow33 * fRec362[1]) + (fSlow32 * ((fSlow61 * fTemp207) + (fSlow60 * fVec45[1]))));
			fRec361[0] = (fRec362[0] - (fSlow20 * ((fSlow18 * fRec361[2]) + (fSlow16 * fRec361[1]))));
			fRec360[0] = ((fSlow20 * (((fSlow15 * fRec361[0]) + (fSlow62 * fRec361[1])) + (fSlow15 * fRec361[2]))) - (fSlow59 * ((fSlow58 * fRec360[2]) + fTemp215)));
			fRec359[0] = ((fRec360[2] + (fSlow59 * (fTemp215 + (fSlow58 * fRec360[0])))) - (fSlow52 * ((fSlow51 * fRec359[2]) + fTemp214)));
			float fTemp216 = (fSlow3 * fRec363[1]);
			float fTemp217 = (fSlow9 * fRec364[1]);
			float fTemp218 = (fSlow16 * fRec365[1]);
			fRec367[0] = ((fSlow30 * fRec367[1]) + (fSlow29 * ((fSlow24 * fRec0[1]) + (fSlow67 * fRec0[2]))));
			fRec366[0] = (fRec367[0] - (fSlow27 * ((fSlow25 * fRec366[2]) + (fSlow23 * fRec366[1]))));
			fRec365[0] = ((fSlow27 * (((fSlow22 * fRec366[0]) + (fSlow68 * fRec366[1])) + (fSlow22 * fRec366[2]))) - (fSlow66 * ((fSlow65 * fRec365[2]) + fTemp218)));
			fRec364[0] = ((fRec365[2] + (fSlow66 * (fTemp218 + (fSlow65 * fRec365[0])))) - (fSlow59 * ((fSlow58 * fRec364[2]) + fTemp217)));
			fRec363[0] = ((fRec364[2] + (fSlow59 * (fTemp217 + (fSlow58 * fRec364[0])))) - (fSlow52 * ((fSlow51 * fRec363[2]) + fTemp216)));
			float fTemp219 = ((((fSlow175 * (fRec363[2] + (fSlow52 * (fTemp216 + (fSlow51 * fRec363[0]))))) + (fSlow174 * (fRec359[2] + (fSlow52 * (fTemp214 + (fSlow51 * fRec359[0])))))) + (fSlow173 * (fRec356[2] + (fSlow52 * (fTemp213 + (fSlow51 * fRec356[0])))))) + (fSlow6 * ((fSlow172 * (((fSlow2 * fRec354[0]) + (fSlow48 * fRec354[1])) + (fSlow2 * fRec354[2]))) + (fSlow171 * (fRec346[2] + (fRec346[0] + (2 * fRec346[1])))))));
			float fTemp220 = (fTemp219 + fTemp206);
			float fTemp221 = (fTemp220 + fTemp193);
			float fTemp222 = (fTemp221 + fTemp166);
			fVec48[0] = fSlow178;
			int iTemp223 = ((fSlow178 - fVec48[1]) > 0);
			fVec49[0] = fSlow179;
			int iTemp224 = ((fSlow179 - fVec49[1]) > 0);
			iRec369[0] = (12345 + (1103515245 * iRec369[1]));
			fRec368[0] = (((0.5221894f * fRec368[3]) + ((4.656612875245797e-10f * iRec369[0]) + (2.494956002f * fRec368[1]))) - (2.017265875f * fRec368[2]));
			float fTemp225 = (fSlow180 * (((0.049922035f * fRec368[0]) + (0.050612699f * fRec368[2])) - ((0.095993537f * fRec368[1]) + (0.004408786f * fRec368[3]))));
			fVec50[IOTA&8191] = (fTemp225 + (iTemp224 + (iTemp223 + ((fSlow177 * (fTemp222 + fTemp111)) + fTemp0))));
			fRec0[0] = fVec50[(IOTA-iSlow181)&8191];
			float fTemp226 = (iTemp224 + fTemp225);
			float fTemp227 = (fSlow0 * (float)input1[i]);
			fVec51[0] = fSlow182;
			int iTemp228 = ((fSlow182 - fVec51[1]) > 0);
			fVec52[IOTA&8191] = (iTemp228 + (fTemp227 + ((fSlow176 * ((0.25f * fTemp222) - (0.25f * fTemp111))) + fTemp226)));
			fRec1[0] = fVec52[(IOTA-iSlow183)&8191];
			float fTemp229 = ((0.25f * fTemp110) - (0.25f * fTemp55));
			float fTemp230 = ((0.25f * fTemp221) - (0.25f * fTemp166));
			float fTemp231 = ((iTemp224 + (fTemp0 + iTemp223)) + fTemp225);
			fVec53[IOTA&8191] = (fTemp231 + (fSlow176 * (fTemp230 + fTemp229)));
			fRec2[0] = fVec53[(IOTA-iSlow184)&8191];
			float fTemp232 = (iTemp228 + (fTemp227 + fTemp226));
			fVec54[IOTA&8191] = (fTemp232 + (fSlow176 * (fTemp230 - fTemp229)));
			fRec3[0] = fVec54[(IOTA-iSlow185)&8191];
			float fTemp233 = ((0.25f * fTemp54) - (0.25f * fTemp27));
			float fTemp234 = ((0.25f * fTemp109) - (0.25f * fTemp82));
			float fTemp235 = (fTemp234 + fTemp233);
			float fTemp236 = ((0.25f * fTemp165) - (0.25f * fTemp138));
			float fTemp237 = ((0.25f * fTemp220) - (0.25f * fTemp193));
			float fTemp238 = (fTemp237 + fTemp236);
			fVec55[IOTA&8191] = (fTemp231 + (fSlow176 * (fTemp238 + fTemp235)));
			fRec4[0] = fVec55[(IOTA-iSlow186)&8191];
			fVec56[IOTA&8191] = (fTemp232 + (fSlow176 * (fTemp238 - fTemp235)));
			fRec5[0] = fVec56[(IOTA-iSlow187)&8191];
			float fTemp239 = (fTemp234 - fTemp233);
			float fTemp240 = (fTemp237 - fTemp236);
			fVec57[IOTA&8191] = (fTemp231 + (fSlow176 * (fTemp240 + fTemp239)));
			fRec6[0] = fVec57[(IOTA-iSlow188)&8191];
			fVec58[IOTA&8191] = (fTemp232 + (fSlow176 * (fTemp240 - fTemp239)));
			fRec7[0] = fVec58[(IOTA-iSlow189)&8191];
			float fTemp241 = ((0.25f * fTemp26) - (0.25f * fTemp13));
			float fTemp242 = ((0.25f * fTemp53) - (0.25f * fTemp40));
			float fTemp243 = (fTemp242 + fTemp241);
			float fTemp244 = ((0.25f * fTemp81) - (0.25f * fTemp68));
			float fTemp245 = ((0.25f * fTemp108) - (0.25f * fTemp95));
			float fTemp246 = (fTemp245 + fTemp244);
			float fTemp247 = (fTemp246 + fTemp243);
			float fTemp248 = ((0.25f * fTemp137) - (0.25f * fTemp124));
			float fTemp249 = ((0.25f * fTemp164) - (0.25f * fTemp151));
			float fTemp250 = (fTemp249 + fTemp248);
			float fTemp251 = ((0.25f * fTemp192) - (0.25f * fTemp179));
			float fTemp252 = ((0.25f * fTemp219) - (0.25f * fTemp206));
			float fTemp253 = (fTemp252 + fTemp251);
			float fTemp254 = (fTemp253 + fTemp250);
			fVec59[IOTA&8191] = (fTemp231 + (fSlow176 * (fTemp254 + fTemp247)));
			fRec8[0] = fVec59[(IOTA-iSlow190)&8191];
			fVec60[IOTA&8191] = (fTemp232 + (fSlow176 * (fTemp254 - fTemp247)));
			fRec9[0] = fVec60[(IOTA-iSlow191)&8191];
			float fTemp255 = (fTemp246 - fTemp243);
			float fTemp256 = (fTemp253 - fTemp250);
			fVec61[IOTA&8191] = (fTemp231 + (fSlow176 * (fTemp256 + fTemp255)));
			fRec10[0] = fVec61[(IOTA-iSlow192)&8191];
			fVec62[IOTA&8191] = (fTemp232 + (fSlow176 * (fTemp256 - fTemp255)));
			fRec11[0] = fVec62[(IOTA-iSlow193)&8191];
			float fTemp257 = (fTemp242 - fTemp241);
			float fTemp258 = (fTemp245 - fTemp244);
			float fTemp259 = (fTemp258 + fTemp257);
			float fTemp260 = (fTemp249 - fTemp248);
			float fTemp261 = (fTemp252 - fTemp251);
			float fTemp262 = (fTemp261 + fTemp260);
			fVec63[IOTA&8191] = (fTemp231 + (fSlow176 * (fTemp262 + fTemp259)));
			fRec12[0] = fVec63[(IOTA-iSlow194)&8191];
			fVec64[IOTA&8191] = (fTemp232 + (fSlow176 * (fTemp262 - fTemp259)));
			fRec13[0] = fVec64[(IOTA-iSlow195)&8191];
			float fTemp263 = (fTemp258 - fTemp257);
			float fTemp264 = (fTemp261 - fTemp260);
			fVec65[IOTA&8191] = (fTemp231 + (fSlow176 * (fTemp264 + fTemp263)));
			fRec14[0] = fVec65[(IOTA-iSlow196)&8191];
			fVec66[IOTA&8191] = (fTemp232 + (fSlow176 * (fTemp264 - fTemp263)));
			fRec15[0] = fVec66[(IOTA-iSlow197)&8191];
			output0[i] = (FAUSTFLOAT)(fSlow198 * (((((((fRec0[0] + fRec2[0]) + fRec4[0]) + fRec6[0]) + fRec8[0]) + fRec10[0]) + fRec12[0]) + fRec14[0]));
			output1[i] = (FAUSTFLOAT)(fSlow198 * (((((((fRec1[0] + fRec3[0]) + fRec5[0]) + fRec7[0]) + fRec9[0]) + fRec11[0]) + fRec13[0]) + fRec15[0]));
			// post processing
			fRec15[2] = fRec15[1]; fRec15[1] = fRec15[0];
			fRec14[2] = fRec14[1]; fRec14[1] = fRec14[0];
			fRec13[2] = fRec13[1]; fRec13[1] = fRec13[0];
			fRec12[2] = fRec12[1]; fRec12[1] = fRec12[0];
			fRec11[2] = fRec11[1]; fRec11[1] = fRec11[0];
			fRec10[2] = fRec10[1]; fRec10[1] = fRec10[0];
			fRec9[2] = fRec9[1]; fRec9[1] = fRec9[0];
			fRec8[2] = fRec8[1]; fRec8[1] = fRec8[0];
			fRec7[2] = fRec7[1]; fRec7[1] = fRec7[0];
			fRec6[2] = fRec6[1]; fRec6[1] = fRec6[0];
			fRec5[2] = fRec5[1]; fRec5[1] = fRec5[0];
			fRec4[2] = fRec4[1]; fRec4[1] = fRec4[0];
			fRec3[2] = fRec3[1]; fRec3[1] = fRec3[0];
			fRec2[2] = fRec2[1]; fRec2[1] = fRec2[0];
			fRec1[2] = fRec1[1]; fRec1[1] = fRec1[0];
			fVec51[1] = fVec51[0];
			fRec0[2] = fRec0[1]; fRec0[1] = fRec0[0];
			IOTA = IOTA+1;
			for (int i=3; i>0; i--) fRec368[i] = fRec368[i-1];
			iRec369[1] = iRec369[0];
			fVec49[1] = fVec49[0];
			fVec48[1] = fVec48[0];
			fRec363[2] = fRec363[1]; fRec363[1] = fRec363[0];
			fRec364[2] = fRec364[1]; fRec364[1] = fRec364[0];
			fRec365[2] = fRec365[1]; fRec365[1] = fRec365[0];
			fRec366[2] = fRec366[1]; fRec366[1] = fRec366[0];
			fRec367[1] = fRec367[0];
			fRec359[2] = fRec359[1]; fRec359[1] = fRec359[0];
			fRec360[2] = fRec360[1]; fRec360[1] = fRec360[0];
			fRec361[2] = fRec361[1]; fRec361[1] = fRec361[0];
			fRec362[1] = fRec362[0];
			fRec356[2] = fRec356[1]; fRec356[1] = fRec356[0];
			fRec357[2] = fRec357[1]; fRec357[1] = fRec357[0];
			fRec358[1] = fRec358[0];
			fRec354[2] = fRec354[1]; fRec354[1] = fRec354[0];
			fRec355[1] = fRec355[0];
			fRec346[2] = fRec346[1]; fRec346[1] = fRec346[0];
			fRec347[1] = fRec347[0];
			fVec47[1] = fVec47[0];
			fRec348[2] = fRec348[1]; fRec348[1] = fRec348[0];
			fRec349[1] = fRec349[0];
			fVec46[1] = fVec46[0];
			fRec350[2] = fRec350[1]; fRec350[1] = fRec350[0];
			fRec351[1] = fRec351[0];
			fVec45[1] = fVec45[0];
			fRec352[2] = fRec352[1]; fRec352[1] = fRec352[0];
			fRec353[1] = fRec353[0];
			fRec341[2] = fRec341[1]; fRec341[1] = fRec341[0];
			fRec342[2] = fRec342[1]; fRec342[1] = fRec342[0];
			fRec343[2] = fRec343[1]; fRec343[1] = fRec343[0];
			fRec344[2] = fRec344[1]; fRec344[1] = fRec344[0];
			fRec345[1] = fRec345[0];
			fRec337[2] = fRec337[1]; fRec337[1] = fRec337[0];
			fRec338[2] = fRec338[1]; fRec338[1] = fRec338[0];
			fRec339[2] = fRec339[1]; fRec339[1] = fRec339[0];
			fRec340[1] = fRec340[0];
			fRec334[2] = fRec334[1]; fRec334[1] = fRec334[0];
			fRec335[2] = fRec335[1]; fRec335[1] = fRec335[0];
			fRec336[1] = fRec336[0];
			fRec332[2] = fRec332[1]; fRec332[1] = fRec332[0];
			fRec333[1] = fRec333[0];
			fRec324[2] = fRec324[1]; fRec324[1] = fRec324[0];
			fRec325[1] = fRec325[0];
			fVec44[1] = fVec44[0];
			fRec326[2] = fRec326[1]; fRec326[1] = fRec326[0];
			fRec327[1] = fRec327[0];
			fVec43[1] = fVec43[0];
			fRec328[2] = fRec328[1]; fRec328[1] = fRec328[0];
			fRec329[1] = fRec329[0];
			fVec42[1] = fVec42[0];
			fRec330[2] = fRec330[1]; fRec330[1] = fRec330[0];
			fRec331[1] = fRec331[0];
			fRec319[2] = fRec319[1]; fRec319[1] = fRec319[0];
			fRec320[2] = fRec320[1]; fRec320[1] = fRec320[0];
			fRec321[2] = fRec321[1]; fRec321[1] = fRec321[0];
			fRec322[2] = fRec322[1]; fRec322[1] = fRec322[0];
			fRec323[1] = fRec323[0];
			fRec315[2] = fRec315[1]; fRec315[1] = fRec315[0];
			fRec316[2] = fRec316[1]; fRec316[1] = fRec316[0];
			fRec317[2] = fRec317[1]; fRec317[1] = fRec317[0];
			fRec318[1] = fRec318[0];
			fRec312[2] = fRec312[1]; fRec312[1] = fRec312[0];
			fRec313[2] = fRec313[1]; fRec313[1] = fRec313[0];
			fRec314[1] = fRec314[0];
			fRec310[2] = fRec310[1]; fRec310[1] = fRec310[0];
			fRec311[1] = fRec311[0];
			fRec302[2] = fRec302[1]; fRec302[1] = fRec302[0];
			fRec303[1] = fRec303[0];
			fVec41[1] = fVec41[0];
			fRec304[2] = fRec304[1]; fRec304[1] = fRec304[0];
			fRec305[1] = fRec305[0];
			fVec40[1] = fVec40[0];
			fRec306[2] = fRec306[1]; fRec306[1] = fRec306[0];
			fRec307[1] = fRec307[0];
			fVec39[1] = fVec39[0];
			fRec308[2] = fRec308[1]; fRec308[1] = fRec308[0];
			fRec309[1] = fRec309[0];
			fRec297[2] = fRec297[1]; fRec297[1] = fRec297[0];
			fRec298[2] = fRec298[1]; fRec298[1] = fRec298[0];
			fRec299[2] = fRec299[1]; fRec299[1] = fRec299[0];
			fRec300[2] = fRec300[1]; fRec300[1] = fRec300[0];
			fRec301[1] = fRec301[0];
			fRec293[2] = fRec293[1]; fRec293[1] = fRec293[0];
			fRec294[2] = fRec294[1]; fRec294[1] = fRec294[0];
			fRec295[2] = fRec295[1]; fRec295[1] = fRec295[0];
			fRec296[1] = fRec296[0];
			fRec290[2] = fRec290[1]; fRec290[1] = fRec290[0];
			fRec291[2] = fRec291[1]; fRec291[1] = fRec291[0];
			fRec292[1] = fRec292[0];
			fRec288[2] = fRec288[1]; fRec288[1] = fRec288[0];
			fRec289[1] = fRec289[0];
			fRec280[2] = fRec280[1]; fRec280[1] = fRec280[0];
			fRec281[1] = fRec281[0];
			fVec38[1] = fVec38[0];
			fRec282[2] = fRec282[1]; fRec282[1] = fRec282[0];
			fRec283[1] = fRec283[0];
			fVec37[1] = fVec37[0];
			fRec284[2] = fRec284[1]; fRec284[1] = fRec284[0];
			fRec285[1] = fRec285[0];
			fVec36[1] = fVec36[0];
			fRec286[2] = fRec286[1]; fRec286[1] = fRec286[0];
			fRec287[1] = fRec287[0];
			fRec275[2] = fRec275[1]; fRec275[1] = fRec275[0];
			fRec276[2] = fRec276[1]; fRec276[1] = fRec276[0];
			fRec277[2] = fRec277[1]; fRec277[1] = fRec277[0];
			fRec278[2] = fRec278[1]; fRec278[1] = fRec278[0];
			fRec279[1] = fRec279[0];
			fRec271[2] = fRec271[1]; fRec271[1] = fRec271[0];
			fRec272[2] = fRec272[1]; fRec272[1] = fRec272[0];
			fRec273[2] = fRec273[1]; fRec273[1] = fRec273[0];
			fRec274[1] = fRec274[0];
			fRec268[2] = fRec268[1]; fRec268[1] = fRec268[0];
			fRec269[2] = fRec269[1]; fRec269[1] = fRec269[0];
			fRec270[1] = fRec270[0];
			fRec266[2] = fRec266[1]; fRec266[1] = fRec266[0];
			fRec267[1] = fRec267[0];
			fRec258[2] = fRec258[1]; fRec258[1] = fRec258[0];
			fRec259[1] = fRec259[0];
			fVec35[1] = fVec35[0];
			fRec260[2] = fRec260[1]; fRec260[1] = fRec260[0];
			fRec261[1] = fRec261[0];
			fVec34[1] = fVec34[0];
			fRec262[2] = fRec262[1]; fRec262[1] = fRec262[0];
			fRec263[1] = fRec263[0];
			fVec33[1] = fVec33[0];
			fRec264[2] = fRec264[1]; fRec264[1] = fRec264[0];
			fRec265[1] = fRec265[0];
			fRec253[2] = fRec253[1]; fRec253[1] = fRec253[0];
			fRec254[2] = fRec254[1]; fRec254[1] = fRec254[0];
			fRec255[2] = fRec255[1]; fRec255[1] = fRec255[0];
			fRec256[2] = fRec256[1]; fRec256[1] = fRec256[0];
			fRec257[1] = fRec257[0];
			fRec249[2] = fRec249[1]; fRec249[1] = fRec249[0];
			fRec250[2] = fRec250[1]; fRec250[1] = fRec250[0];
			fRec251[2] = fRec251[1]; fRec251[1] = fRec251[0];
			fRec252[1] = fRec252[0];
			fRec246[2] = fRec246[1]; fRec246[1] = fRec246[0];
			fRec247[2] = fRec247[1]; fRec247[1] = fRec247[0];
			fRec248[1] = fRec248[0];
			fRec244[2] = fRec244[1]; fRec244[1] = fRec244[0];
			fRec245[1] = fRec245[0];
			fRec236[2] = fRec236[1]; fRec236[1] = fRec236[0];
			fRec237[1] = fRec237[0];
			fVec32[1] = fVec32[0];
			fRec238[2] = fRec238[1]; fRec238[1] = fRec238[0];
			fRec239[1] = fRec239[0];
			fVec31[1] = fVec31[0];
			fRec240[2] = fRec240[1]; fRec240[1] = fRec240[0];
			fRec241[1] = fRec241[0];
			fVec30[1] = fVec30[0];
			fRec242[2] = fRec242[1]; fRec242[1] = fRec242[0];
			fRec243[1] = fRec243[0];
			fRec231[2] = fRec231[1]; fRec231[1] = fRec231[0];
			fRec232[2] = fRec232[1]; fRec232[1] = fRec232[0];
			fRec233[2] = fRec233[1]; fRec233[1] = fRec233[0];
			fRec234[2] = fRec234[1]; fRec234[1] = fRec234[0];
			fRec235[1] = fRec235[0];
			fRec227[2] = fRec227[1]; fRec227[1] = fRec227[0];
			fRec228[2] = fRec228[1]; fRec228[1] = fRec228[0];
			fRec229[2] = fRec229[1]; fRec229[1] = fRec229[0];
			fRec230[1] = fRec230[0];
			fRec224[2] = fRec224[1]; fRec224[1] = fRec224[0];
			fRec225[2] = fRec225[1]; fRec225[1] = fRec225[0];
			fRec226[1] = fRec226[0];
			fRec222[2] = fRec222[1]; fRec222[1] = fRec222[0];
			fRec223[1] = fRec223[0];
			fRec214[2] = fRec214[1]; fRec214[1] = fRec214[0];
			fRec215[1] = fRec215[0];
			fVec29[1] = fVec29[0];
			fRec216[2] = fRec216[1]; fRec216[1] = fRec216[0];
			fRec217[1] = fRec217[0];
			fVec28[1] = fVec28[0];
			fRec218[2] = fRec218[1]; fRec218[1] = fRec218[0];
			fRec219[1] = fRec219[0];
			fVec27[1] = fVec27[0];
			fRec220[2] = fRec220[1]; fRec220[1] = fRec220[0];
			fRec221[1] = fRec221[0];
			fRec209[2] = fRec209[1]; fRec209[1] = fRec209[0];
			fRec210[2] = fRec210[1]; fRec210[1] = fRec210[0];
			fRec211[2] = fRec211[1]; fRec211[1] = fRec211[0];
			fRec212[2] = fRec212[1]; fRec212[1] = fRec212[0];
			fRec213[1] = fRec213[0];
			fRec205[2] = fRec205[1]; fRec205[1] = fRec205[0];
			fRec206[2] = fRec206[1]; fRec206[1] = fRec206[0];
			fRec207[2] = fRec207[1]; fRec207[1] = fRec207[0];
			fRec208[1] = fRec208[0];
			fRec202[2] = fRec202[1]; fRec202[1] = fRec202[0];
			fRec203[2] = fRec203[1]; fRec203[1] = fRec203[0];
			fRec204[1] = fRec204[0];
			fRec200[2] = fRec200[1]; fRec200[1] = fRec200[0];
			fRec201[1] = fRec201[0];
			fRec192[2] = fRec192[1]; fRec192[1] = fRec192[0];
			fRec193[1] = fRec193[0];
			fVec26[1] = fVec26[0];
			fRec194[2] = fRec194[1]; fRec194[1] = fRec194[0];
			fRec195[1] = fRec195[0];
			fVec25[1] = fVec25[0];
			fRec196[2] = fRec196[1]; fRec196[1] = fRec196[0];
			fRec197[1] = fRec197[0];
			fVec24[1] = fVec24[0];
			fRec198[2] = fRec198[1]; fRec198[1] = fRec198[0];
			fRec199[1] = fRec199[0];
			fRec187[2] = fRec187[1]; fRec187[1] = fRec187[0];
			fRec188[2] = fRec188[1]; fRec188[1] = fRec188[0];
			fRec189[2] = fRec189[1]; fRec189[1] = fRec189[0];
			fRec190[2] = fRec190[1]; fRec190[1] = fRec190[0];
			fRec191[1] = fRec191[0];
			fRec183[2] = fRec183[1]; fRec183[1] = fRec183[0];
			fRec184[2] = fRec184[1]; fRec184[1] = fRec184[0];
			fRec185[2] = fRec185[1]; fRec185[1] = fRec185[0];
			fRec186[1] = fRec186[0];
			fRec180[2] = fRec180[1]; fRec180[1] = fRec180[0];
			fRec181[2] = fRec181[1]; fRec181[1] = fRec181[0];
			fRec182[1] = fRec182[0];
			fRec178[2] = fRec178[1]; fRec178[1] = fRec178[0];
			fRec179[1] = fRec179[0];
			fRec170[2] = fRec170[1]; fRec170[1] = fRec170[0];
			fRec171[1] = fRec171[0];
			fVec23[1] = fVec23[0];
			fRec172[2] = fRec172[1]; fRec172[1] = fRec172[0];
			fRec173[1] = fRec173[0];
			fVec22[1] = fVec22[0];
			fRec174[2] = fRec174[1]; fRec174[1] = fRec174[0];
			fRec175[1] = fRec175[0];
			fVec21[1] = fVec21[0];
			fRec176[2] = fRec176[1]; fRec176[1] = fRec176[0];
			fRec177[1] = fRec177[0];
			fRec165[2] = fRec165[1]; fRec165[1] = fRec165[0];
			fRec166[2] = fRec166[1]; fRec166[1] = fRec166[0];
			fRec167[2] = fRec167[1]; fRec167[1] = fRec167[0];
			fRec168[2] = fRec168[1]; fRec168[1] = fRec168[0];
			fRec169[1] = fRec169[0];
			fRec161[2] = fRec161[1]; fRec161[1] = fRec161[0];
			fRec162[2] = fRec162[1]; fRec162[1] = fRec162[0];
			fRec163[2] = fRec163[1]; fRec163[1] = fRec163[0];
			fRec164[1] = fRec164[0];
			fRec158[2] = fRec158[1]; fRec158[1] = fRec158[0];
			fRec159[2] = fRec159[1]; fRec159[1] = fRec159[0];
			fRec160[1] = fRec160[0];
			fRec156[2] = fRec156[1]; fRec156[1] = fRec156[0];
			fRec157[1] = fRec157[0];
			fRec148[2] = fRec148[1]; fRec148[1] = fRec148[0];
			fRec149[1] = fRec149[0];
			fVec20[1] = fVec20[0];
			fRec150[2] = fRec150[1]; fRec150[1] = fRec150[0];
			fRec151[1] = fRec151[0];
			fVec19[1] = fVec19[0];
			fRec152[2] = fRec152[1]; fRec152[1] = fRec152[0];
			fRec153[1] = fRec153[0];
			fVec18[1] = fVec18[0];
			fRec154[2] = fRec154[1]; fRec154[1] = fRec154[0];
			fRec155[1] = fRec155[0];
			fRec143[2] = fRec143[1]; fRec143[1] = fRec143[0];
			fRec144[2] = fRec144[1]; fRec144[1] = fRec144[0];
			fRec145[2] = fRec145[1]; fRec145[1] = fRec145[0];
			fRec146[2] = fRec146[1]; fRec146[1] = fRec146[0];
			fRec147[1] = fRec147[0];
			fRec139[2] = fRec139[1]; fRec139[1] = fRec139[0];
			fRec140[2] = fRec140[1]; fRec140[1] = fRec140[0];
			fRec141[2] = fRec141[1]; fRec141[1] = fRec141[0];
			fRec142[1] = fRec142[0];
			fRec136[2] = fRec136[1]; fRec136[1] = fRec136[0];
			fRec137[2] = fRec137[1]; fRec137[1] = fRec137[0];
			fRec138[1] = fRec138[0];
			fRec134[2] = fRec134[1]; fRec134[1] = fRec134[0];
			fRec135[1] = fRec135[0];
			fRec126[2] = fRec126[1]; fRec126[1] = fRec126[0];
			fRec127[1] = fRec127[0];
			fVec17[1] = fVec17[0];
			fRec128[2] = fRec128[1]; fRec128[1] = fRec128[0];
			fRec129[1] = fRec129[0];
			fVec16[1] = fVec16[0];
			fRec130[2] = fRec130[1]; fRec130[1] = fRec130[0];
			fRec131[1] = fRec131[0];
			fVec15[1] = fVec15[0];
			fRec132[2] = fRec132[1]; fRec132[1] = fRec132[0];
			fRec133[1] = fRec133[0];
			fRec121[2] = fRec121[1]; fRec121[1] = fRec121[0];
			fRec122[2] = fRec122[1]; fRec122[1] = fRec122[0];
			fRec123[2] = fRec123[1]; fRec123[1] = fRec123[0];
			fRec124[2] = fRec124[1]; fRec124[1] = fRec124[0];
			fRec125[1] = fRec125[0];
			fRec117[2] = fRec117[1]; fRec117[1] = fRec117[0];
			fRec118[2] = fRec118[1]; fRec118[1] = fRec118[0];
			fRec119[2] = fRec119[1]; fRec119[1] = fRec119[0];
			fRec120[1] = fRec120[0];
			fRec114[2] = fRec114[1]; fRec114[1] = fRec114[0];
			fRec115[2] = fRec115[1]; fRec115[1] = fRec115[0];
			fRec116[1] = fRec116[0];
			fRec112[2] = fRec112[1]; fRec112[1] = fRec112[0];
			fRec113[1] = fRec113[0];
			fRec104[2] = fRec104[1]; fRec104[1] = fRec104[0];
			fRec105[1] = fRec105[0];
			fVec14[1] = fVec14[0];
			fRec106[2] = fRec106[1]; fRec106[1] = fRec106[0];
			fRec107[1] = fRec107[0];
			fVec13[1] = fVec13[0];
			fRec108[2] = fRec108[1]; fRec108[1] = fRec108[0];
			fRec109[1] = fRec109[0];
			fVec12[1] = fVec12[0];
			fRec110[2] = fRec110[1]; fRec110[1] = fRec110[0];
			fRec111[1] = fRec111[0];
			fRec99[2] = fRec99[1]; fRec99[1] = fRec99[0];
			fRec100[2] = fRec100[1]; fRec100[1] = fRec100[0];
			fRec101[2] = fRec101[1]; fRec101[1] = fRec101[0];
			fRec102[2] = fRec102[1]; fRec102[1] = fRec102[0];
			fRec103[1] = fRec103[0];
			fRec95[2] = fRec95[1]; fRec95[1] = fRec95[0];
			fRec96[2] = fRec96[1]; fRec96[1] = fRec96[0];
			fRec97[2] = fRec97[1]; fRec97[1] = fRec97[0];
			fRec98[1] = fRec98[0];
			fRec92[2] = fRec92[1]; fRec92[1] = fRec92[0];
			fRec93[2] = fRec93[1]; fRec93[1] = fRec93[0];
			fRec94[1] = fRec94[0];
			fRec90[2] = fRec90[1]; fRec90[1] = fRec90[0];
			fRec91[1] = fRec91[0];
			fRec82[2] = fRec82[1]; fRec82[1] = fRec82[0];
			fRec83[1] = fRec83[0];
			fVec11[1] = fVec11[0];
			fRec84[2] = fRec84[1]; fRec84[1] = fRec84[0];
			fRec85[1] = fRec85[0];
			fVec10[1] = fVec10[0];
			fRec86[2] = fRec86[1]; fRec86[1] = fRec86[0];
			fRec87[1] = fRec87[0];
			fVec9[1] = fVec9[0];
			fRec88[2] = fRec88[1]; fRec88[1] = fRec88[0];
			fRec89[1] = fRec89[0];
			fRec77[2] = fRec77[1]; fRec77[1] = fRec77[0];
			fRec78[2] = fRec78[1]; fRec78[1] = fRec78[0];
			fRec79[2] = fRec79[1]; fRec79[1] = fRec79[0];
			fRec80[2] = fRec80[1]; fRec80[1] = fRec80[0];
			fRec81[1] = fRec81[0];
			fRec73[2] = fRec73[1]; fRec73[1] = fRec73[0];
			fRec74[2] = fRec74[1]; fRec74[1] = fRec74[0];
			fRec75[2] = fRec75[1]; fRec75[1] = fRec75[0];
			fRec76[1] = fRec76[0];
			fRec70[2] = fRec70[1]; fRec70[1] = fRec70[0];
			fRec71[2] = fRec71[1]; fRec71[1] = fRec71[0];
			fRec72[1] = fRec72[0];
			fRec68[2] = fRec68[1]; fRec68[1] = fRec68[0];
			fRec69[1] = fRec69[0];
			fRec60[2] = fRec60[1]; fRec60[1] = fRec60[0];
			fRec61[1] = fRec61[0];
			fVec8[1] = fVec8[0];
			fRec62[2] = fRec62[1]; fRec62[1] = fRec62[0];
			fRec63[1] = fRec63[0];
			fVec7[1] = fVec7[0];
			fRec64[2] = fRec64[1]; fRec64[1] = fRec64[0];
			fRec65[1] = fRec65[0];
			fVec6[1] = fVec6[0];
			fRec66[2] = fRec66[1]; fRec66[1] = fRec66[0];
			fRec67[1] = fRec67[0];
			fRec55[2] = fRec55[1]; fRec55[1] = fRec55[0];
			fRec56[2] = fRec56[1]; fRec56[1] = fRec56[0];
			fRec57[2] = fRec57[1]; fRec57[1] = fRec57[0];
			fRec58[2] = fRec58[1]; fRec58[1] = fRec58[0];
			fRec59[1] = fRec59[0];
			fRec51[2] = fRec51[1]; fRec51[1] = fRec51[0];
			fRec52[2] = fRec52[1]; fRec52[1] = fRec52[0];
			fRec53[2] = fRec53[1]; fRec53[1] = fRec53[0];
			fRec54[1] = fRec54[0];
			fRec48[2] = fRec48[1]; fRec48[1] = fRec48[0];
			fRec49[2] = fRec49[1]; fRec49[1] = fRec49[0];
			fRec50[1] = fRec50[0];
			fRec46[2] = fRec46[1]; fRec46[1] = fRec46[0];
			fRec47[1] = fRec47[0];
			fRec38[2] = fRec38[1]; fRec38[1] = fRec38[0];
			fRec39[1] = fRec39[0];
			fVec5[1] = fVec5[0];
			fRec40[2] = fRec40[1]; fRec40[1] = fRec40[0];
			fRec41[1] = fRec41[0];
			fVec4[1] = fVec4[0];
			fRec42[2] = fRec42[1]; fRec42[1] = fRec42[0];
			fRec43[1] = fRec43[0];
			fVec3[1] = fVec3[0];
			fRec44[2] = fRec44[1]; fRec44[1] = fRec44[0];
			fRec45[1] = fRec45[0];
			fRec33[2] = fRec33[1]; fRec33[1] = fRec33[0];
			fRec34[2] = fRec34[1]; fRec34[1] = fRec34[0];
			fRec35[2] = fRec35[1]; fRec35[1] = fRec35[0];
			fRec36[2] = fRec36[1]; fRec36[1] = fRec36[0];
			fRec37[1] = fRec37[0];
			fRec29[2] = fRec29[1]; fRec29[1] = fRec29[0];
			fRec30[2] = fRec30[1]; fRec30[1] = fRec30[0];
			fRec31[2] = fRec31[1]; fRec31[1] = fRec31[0];
			fRec32[1] = fRec32[0];
			fRec26[2] = fRec26[1]; fRec26[1] = fRec26[0];
			fRec27[2] = fRec27[1]; fRec27[1] = fRec27[0];
			fRec28[1] = fRec28[0];
			fRec24[2] = fRec24[1]; fRec24[1] = fRec24[0];
			fRec25[1] = fRec25[0];
			fRec16[2] = fRec16[1]; fRec16[1] = fRec16[0];
			fRec17[1] = fRec17[0];
			fVec2[1] = fVec2[0];
			fRec18[2] = fRec18[1]; fRec18[1] = fRec18[0];
			fRec19[1] = fRec19[0];
			fVec1[1] = fVec1[0];
			fRec20[2] = fRec20[1]; fRec20[1] = fRec20[0];
			fRec21[1] = fRec21[0];
			fVec0[1] = fVec0[0];
			fRec22[2] = fRec22[1]; fRec22[1] = fRec22[0];
			fRec23[1] = fRec23[0];
		}
	}
};



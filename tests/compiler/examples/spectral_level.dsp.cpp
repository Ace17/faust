//-----------------------------------------------------
// name: "spectrum_level"
//
// Code generated with Faust 0.9.70 (http://faust.grame.fr)
//-----------------------------------------------------
#ifndef FAUSTFLOAT
#define FAUSTFLOAT float
#endif  

typedef long double quad;
/* link with  */
#include <math.h>
#ifndef FAUSTPOWER
#define FAUSTPOWER
#include <cmath>
template <int N> inline float faustpower(float x)          { return powf(x,N); } 
template <int N> inline double faustpower(double x)        { return pow(x,N); }
template <int N> inline int faustpower(int x)              { return faustpower<N/2>(x) * faustpower<N-N/2>(x); } 
template <>   inline int faustpower<0>(int x)            { return 1; }
template <>   inline int faustpower<1>(int x)            { return x; }
#endif

#ifndef FAUSTCLASS 
#define FAUSTCLASS mydsp
#endif

class mydsp : public dsp {
  private:
	int 	iConst0;
	float 	fConst1;
	float 	fConst2;
	float 	fConst3;
	float 	fConst4;
	float 	fConst5;
	float 	fConst6;
	float 	fConst7;
	float 	fConst8;
	float 	fConst9;
	float 	fConst10;
	float 	fConst11;
	float 	fConst12;
	float 	fConst13;
	float 	fConst14;
	float 	fConst15;
	float 	fConst16;
	float 	fConst17;
	float 	fConst18;
	float 	fConst19;
	float 	fConst20;
	float 	fConst21;
	float 	fConst22;
	float 	fConst23;
	float 	fConst24;
	float 	fConst25;
	float 	fConst26;
	float 	fConst27;
	float 	fConst28;
	float 	fConst29;
	float 	fConst30;
	float 	fConst31;
	float 	fConst32;
	float 	fConst33;
	float 	fConst34;
	float 	fConst35;
	float 	fConst36;
	float 	fConst37;
	float 	fConst38;
	float 	fConst39;
	float 	fConst40;
	float 	fConst41;
	float 	fConst42;
	float 	fConst43;
	float 	fConst44;
	float 	fConst45;
	float 	fConst46;
	float 	fConst47;
	float 	fConst48;
	float 	fConst49;
	float 	fConst50;
	float 	fConst51;
	float 	fConst52;
	float 	fConst53;
	float 	fConst54;
	float 	fConst55;
	float 	fConst56;
	float 	fConst57;
	float 	fConst58;
	float 	fConst59;
	float 	fConst60;
	float 	fConst61;
	float 	fConst62;
	float 	fConst63;
	float 	fConst64;
	float 	fConst65;
	float 	fConst66;
	float 	fConst67;
	float 	fConst68;
	float 	fConst69;
	float 	fConst70;
	float 	fConst71;
	float 	fConst72;
	float 	fConst73;
	float 	fConst74;
	float 	fConst75;
	float 	fConst76;
	float 	fConst77;
	float 	fConst78;
	float 	fConst79;
	float 	fConst80;
	float 	fConst81;
	float 	fConst82;
	float 	fConst83;
	float 	fConst84;
	float 	fConst85;
	float 	fConst86;
	float 	fConst87;
	float 	fConst88;
	float 	fConst89;
	float 	fConst90;
	float 	fConst91;
	float 	fConst92;
	float 	fConst93;
	float 	fConst94;
	float 	fConst95;
	float 	fConst96;
	float 	fConst97;
	float 	fConst98;
	float 	fConst99;
	float 	fConst100;
	float 	fConst101;
	float 	fConst102;
	float 	fConst103;
	float 	fConst104;
	float 	fConst105;
	float 	fConst106;
	float 	fConst107;
	float 	fConst108;
	float 	fConst109;
	float 	fConst110;
	float 	fConst111;
	float 	fConst112;
	float 	fConst113;
	float 	fConst114;
	float 	fConst115;
	float 	fConst116;
	float 	fConst117;
	float 	fConst118;
	float 	fConst119;
	float 	fConst120;
	float 	fConst121;
	float 	fConst122;
	float 	fConst123;
	float 	fConst124;
	float 	fConst125;
	float 	fConst126;
	float 	fConst127;
	float 	fConst128;
	float 	fConst129;
	float 	fConst130;
	float 	fConst131;
	float 	fConst132;
	float 	fConst133;
	float 	fConst134;
	float 	fConst135;
	float 	fConst136;
	float 	fConst137;
	float 	fConst138;
	float 	fConst139;
	float 	fConst140;
	float 	fConst141;
	float 	fConst142;
	float 	fConst143;
	float 	fConst144;
	float 	fConst145;
	float 	fConst146;
	float 	fConst147;
	float 	fConst148;
	float 	fConst149;
	float 	fConst150;
	float 	fConst151;
	float 	fConst152;
	float 	fConst153;
	float 	fConst154;
	float 	fConst155;
	float 	fConst156;
	float 	fConst157;
	float 	fConst158;
	float 	fConst159;
	float 	fConst160;
	float 	fConst161;
	float 	fConst162;
	float 	fConst163;
	float 	fConst164;
	float 	fConst165;
	float 	fConst166;
	float 	fConst167;
	float 	fConst168;
	float 	fConst169;
	float 	fConst170;
	float 	fConst171;
	float 	fConst172;
	float 	fConst173;
	float 	fConst174;
	float 	fConst175;
	float 	fConst176;
	float 	fConst177;
	float 	fConst178;
	float 	fConst179;
	float 	fConst180;
	float 	fConst181;
	float 	fConst182;
	float 	fConst183;
	float 	fConst184;
	float 	fConst185;
	float 	fConst186;
	float 	fConst187;
	float 	fConst188;
	float 	fConst189;
	float 	fConst190;
	float 	fConst191;
	float 	fConst192;
	float 	fConst193;
	float 	fConst194;
	float 	fConst195;
	float 	fConst196;
	float 	fConst197;
	float 	fConst198;
	float 	fConst199;
	float 	fConst200;
	float 	fConst201;
	float 	fConst202;
	float 	fConst203;
	float 	fConst204;
	float 	fConst205;
	float 	fConst206;
	float 	fConst207;
	float 	fConst208;
	float 	fConst209;
	float 	fConst210;
	float 	fConst211;
	float 	fConst212;
	float 	fConst213;
	float 	fConst214;
	float 	fConst215;
	float 	fConst216;
	float 	fConst217;
	float 	fConst218;
	float 	fConst219;
	float 	fConst220;
	float 	fConst221;
	float 	fConst222;
	float 	fConst223;
	float 	fConst224;
	float 	fConst225;
	float 	fConst226;
	float 	fConst227;
	float 	fConst228;
	float 	fConst229;
	float 	fConst230;
	float 	fConst231;
	float 	fConst232;
	float 	fConst233;
	float 	fConst234;
	float 	fConst235;
	float 	fConst236;
	float 	fConst237;
	float 	fConst238;
	float 	fConst239;
	float 	fConst240;
	float 	fConst241;
	float 	fConst242;
	float 	fConst243;
	float 	fConst244;
	float 	fConst245;
	float 	fConst246;
	float 	fConst247;
	float 	fConst248;
	float 	fConst249;
	float 	fConst250;
	float 	fConst251;
	float 	fConst252;
	float 	fConst253;
	float 	fConst254;
	float 	fConst255;
	float 	fConst256;
	float 	fConst257;
	float 	fConst258;
	float 	fConst259;
	float 	fConst260;
	float 	fConst261;
	float 	fConst262;
	float 	fConst263;
	float 	fConst264;
	float 	fConst265;
	float 	fConst266;
	float 	fConst267;
	float 	fConst268;
	float 	fConst269;
	float 	fConst270;
	float 	fConst271;
	float 	fConst272;
	float 	fConst273;
	float 	fConst274;
	float 	fConst275;
	float 	fConst276;
	float 	fConst277;
	float 	fConst278;
	float 	fConst279;
	float 	fConst280;
	float 	fConst281;
	float 	fConst282;
	float 	fConst283;
	float 	fConst284;
	float 	fConst285;
	float 	fConst286;
	float 	fConst287;
	float 	fConst288;
	float 	fConst289;
	float 	fConst290;
	float 	fConst291;
	float 	fConst292;
	float 	fConst293;
	float 	fConst294;
	float 	fConst295;
	float 	fConst296;
	float 	fConst297;
	float 	fConst298;
	float 	fConst299;
	float 	fConst300;
	float 	fConst301;
	float 	fConst302;
	float 	fConst303;
	float 	fConst304;
	float 	fConst305;
	float 	fConst306;
	float 	fConst307;
	float 	fConst308;
	float 	fConst309;
	float 	fConst310;
	float 	fConst311;
	float 	fConst312;
	float 	fConst313;
	float 	fConst314;
	float 	fConst315;
	float 	fConst316;
	float 	fConst317;
	float 	fConst318;
	float 	fConst319;
	float 	fConst320;
	float 	fConst321;
	float 	fConst322;
	float 	fConst323;
	float 	fConst324;
	float 	fConst325;
	float 	fConst326;
	float 	fConst327;
	float 	fConst328;
	float 	fConst329;
	float 	fConst330;
	float 	fConst331;
	float 	fConst332;
	float 	fConst333;
	float 	fConst334;
	float 	fConst335;
	float 	fConst336;
	float 	fConst337;
	float 	fConst338;
	float 	fConst339;
	float 	fConst340;
	float 	fConst341;
	float 	fConst342;
	float 	fConst343;
	float 	fConst344;
	float 	fConst345;
	float 	fConst346;
	float 	fConst347;
	float 	fConst348;
	float 	fConst349;
	float 	fConst350;
	float 	fConst351;
	float 	fConst352;
	float 	fConst353;
	float 	fConst354;
	float 	fConst355;
	float 	fConst356;
	float 	fConst357;
	float 	fConst358;
	float 	fConst359;
	float 	fConst360;
	float 	fConst361;
	float 	fConst362;
	float 	fConst363;
	float 	fConst364;
	float 	fConst365;
	float 	fConst366;
	float 	fConst367;
	float 	fConst368;
	float 	fConst369;
	float 	fConst370;
	float 	fConst371;
	float 	fConst372;
	float 	fConst373;
	float 	fConst374;
	float 	fConst375;
	float 	fConst376;
	float 	fConst377;
	float 	fRec87[3];
	float 	fConst378;
	float 	fConst379;
	float 	fConst380;
	float 	fRec86[3];
	float 	fConst381;
	float 	fConst382;
	float 	fRec85[3];
	float 	fConst383;
	float 	fConst384;
	float 	fRec84[3];
	float 	fConst385;
	float 	fConst386;
	float 	fConst387;
	float 	fRec83[3];
	float 	fConst388;
	float 	fConst389;
	float 	fRec82[3];
	float 	fConst390;
	float 	fConst391;
	float 	fRec81[3];
	float 	fConst392;
	float 	fConst393;
	float 	fConst394;
	float 	fRec80[3];
	float 	fConst395;
	float 	fConst396;
	float 	fRec79[3];
	float 	fConst397;
	float 	fConst398;
	float 	fRec78[3];
	float 	fConst399;
	float 	fConst400;
	float 	fConst401;
	float 	fRec77[3];
	float 	fConst402;
	float 	fConst403;
	float 	fRec76[3];
	float 	fConst404;
	float 	fConst405;
	float 	fRec75[3];
	float 	fConst406;
	float 	fConst407;
	float 	fConst408;
	float 	fRec74[3];
	float 	fConst409;
	float 	fConst410;
	float 	fRec73[3];
	float 	fConst411;
	float 	fConst412;
	float 	fRec72[3];
	float 	fConst413;
	float 	fConst414;
	float 	fConst415;
	float 	fRec71[3];
	float 	fConst416;
	float 	fConst417;
	float 	fRec70[3];
	float 	fConst418;
	float 	fConst419;
	float 	fRec69[3];
	float 	fConst420;
	float 	fConst421;
	float 	fConst422;
	float 	fRec68[3];
	float 	fConst423;
	float 	fConst424;
	float 	fRec67[3];
	float 	fConst425;
	float 	fConst426;
	float 	fRec66[3];
	float 	fConst427;
	float 	fConst428;
	float 	fConst429;
	float 	fRec65[3];
	float 	fConst430;
	float 	fConst431;
	float 	fRec64[3];
	float 	fConst432;
	float 	fConst433;
	float 	fRec63[3];
	float 	fConst434;
	float 	fConst435;
	float 	fConst436;
	float 	fRec62[3];
	float 	fConst437;
	float 	fConst438;
	float 	fRec61[3];
	float 	fConst439;
	float 	fConst440;
	float 	fRec60[3];
	float 	fConst441;
	float 	fConst442;
	float 	fConst443;
	float 	fRec59[3];
	float 	fConst444;
	float 	fConst445;
	float 	fRec58[3];
	float 	fConst446;
	float 	fConst447;
	float 	fRec57[3];
	float 	fConst448;
	float 	fConst449;
	float 	fConst450;
	float 	fRec56[3];
	float 	fConst451;
	float 	fConst452;
	float 	fRec55[3];
	float 	fConst453;
	float 	fConst454;
	float 	fRec54[3];
	float 	fConst455;
	float 	fConst456;
	float 	fConst457;
	float 	fRec53[3];
	float 	fConst458;
	float 	fConst459;
	float 	fRec52[3];
	float 	fConst460;
	float 	fConst461;
	float 	fRec51[3];
	float 	fConst462;
	float 	fConst463;
	float 	fConst464;
	float 	fRec50[3];
	float 	fConst465;
	float 	fConst466;
	float 	fRec49[3];
	float 	fConst467;
	float 	fConst468;
	float 	fRec48[3];
	float 	fConst469;
	float 	fConst470;
	float 	fConst471;
	float 	fRec47[3];
	float 	fConst472;
	float 	fConst473;
	float 	fRec46[3];
	float 	fConst474;
	float 	fConst475;
	float 	fRec45[3];
	float 	fConst476;
	float 	fConst477;
	float 	fConst478;
	float 	fRec44[3];
	float 	fConst479;
	float 	fConst480;
	float 	fRec43[3];
	float 	fConst481;
	float 	fConst482;
	float 	fRec42[3];
	float 	fConst483;
	float 	fConst484;
	float 	fConst485;
	float 	fRec41[3];
	float 	fConst486;
	float 	fConst487;
	float 	fRec40[3];
	float 	fConst488;
	float 	fConst489;
	float 	fRec39[3];
	float 	fConst490;
	float 	fConst491;
	float 	fConst492;
	float 	fRec38[3];
	float 	fConst493;
	float 	fConst494;
	float 	fRec37[3];
	float 	fConst495;
	float 	fConst496;
	float 	fRec36[3];
	float 	fConst497;
	float 	fConst498;
	float 	fConst499;
	float 	fRec35[3];
	float 	fConst500;
	float 	fConst501;
	float 	fRec34[3];
	float 	fConst502;
	float 	fConst503;
	float 	fRec33[3];
	float 	fConst504;
	float 	fConst505;
	float 	fConst506;
	float 	fRec32[3];
	float 	fConst507;
	float 	fConst508;
	float 	fRec31[3];
	float 	fConst509;
	float 	fConst510;
	float 	fRec30[3];
	float 	fConst511;
	float 	fConst512;
	float 	fConst513;
	float 	fRec29[3];
	float 	fConst514;
	float 	fConst515;
	float 	fRec28[3];
	float 	fConst516;
	float 	fConst517;
	float 	fRec27[3];
	float 	fConst518;
	float 	fConst519;
	float 	fConst520;
	float 	fRec26[3];
	float 	fConst521;
	float 	fConst522;
	float 	fRec25[3];
	float 	fConst523;
	float 	fConst524;
	float 	fRec24[3];
	float 	fConst525;
	float 	fConst526;
	float 	fConst527;
	float 	fRec23[3];
	float 	fConst528;
	float 	fConst529;
	float 	fRec22[3];
	float 	fConst530;
	float 	fConst531;
	float 	fRec21[3];
	float 	fConst532;
	float 	fConst533;
	float 	fConst534;
	float 	fRec20[3];
	float 	fConst535;
	float 	fConst536;
	float 	fRec19[3];
	float 	fConst537;
	float 	fConst538;
	float 	fRec18[3];
	float 	fConst539;
	float 	fConst540;
	float 	fConst541;
	float 	fRec17[3];
	float 	fConst542;
	float 	fConst543;
	float 	fRec16[3];
	float 	fConst544;
	float 	fConst545;
	float 	fRec15[3];
	float 	fConst546;
	float 	fConst547;
	float 	fConst548;
	float 	fRec14[3];
	float 	fConst549;
	float 	fConst550;
	float 	fRec13[3];
	float 	fConst551;
	float 	fConst552;
	float 	fRec12[3];
	float 	fConst553;
	float 	fConst554;
	float 	fConst555;
	float 	fRec11[3];
	float 	fConst556;
	float 	fConst557;
	float 	fRec10[3];
	float 	fConst558;
	float 	fConst559;
	float 	fRec9[3];
	float 	fConst560;
	float 	fConst561;
	float 	fConst562;
	float 	fRec8[3];
	float 	fConst563;
	float 	fConst564;
	float 	fRec7[3];
	float 	fConst565;
	float 	fConst566;
	float 	fRec6[3];
	float 	fConst567;
	float 	fConst568;
	float 	fConst569;
	float 	fRec5[3];
	float 	fConst570;
	float 	fConst571;
	float 	fRec4[3];
	float 	fConst572;
	float 	fConst573;
	float 	fRec3[3];
	float 	fConst574;
	float 	fConst575;
	float 	fConst576;
	float 	fRec2[3];
	float 	fConst577;
	float 	fConst578;
	float 	fRec1[3];
	float 	fConst579;
	float 	fConst580;
	FAUSTFLOAT 	fslider0;
	float 	fConst581;
	float 	fRec0[2];
	FAUSTFLOAT 	fslider1;
	FAUSTFLOAT 	fbargraph0;
	float 	fConst582;
	float 	fConst583;
	float 	fConst584;
	float 	fConst585;
	float 	fConst586;
	float 	fConst587;
	float 	fConst588;
	float 	fConst589;
	float 	fConst590;
	float 	fRec91[3];
	float 	fConst591;
	float 	fConst592;
	float 	fConst593;
	float 	fRec90[3];
	float 	fConst594;
	float 	fConst595;
	float 	fConst596;
	float 	fRec89[3];
	float 	fConst597;
	float 	fConst598;
	float 	fConst599;
	float 	fRec88[2];
	FAUSTFLOAT 	fbargraph1;
	float 	fConst600;
	float 	fConst601;
	float 	fConst602;
	float 	fConst603;
	float 	fConst604;
	float 	fConst605;
	float 	fConst606;
	float 	fConst607;
	float 	fConst608;
	float 	fRec95[3];
	float 	fConst609;
	float 	fConst610;
	float 	fConst611;
	float 	fRec94[3];
	float 	fConst612;
	float 	fConst613;
	float 	fConst614;
	float 	fRec93[3];
	float 	fConst615;
	float 	fConst616;
	float 	fConst617;
	float 	fRec92[2];
	FAUSTFLOAT 	fbargraph2;
	float 	fConst618;
	float 	fConst619;
	float 	fConst620;
	float 	fConst621;
	float 	fConst622;
	float 	fConst623;
	float 	fConst624;
	float 	fConst625;
	float 	fConst626;
	float 	fRec99[3];
	float 	fConst627;
	float 	fConst628;
	float 	fConst629;
	float 	fRec98[3];
	float 	fConst630;
	float 	fConst631;
	float 	fConst632;
	float 	fRec97[3];
	float 	fConst633;
	float 	fConst634;
	float 	fConst635;
	float 	fRec96[2];
	FAUSTFLOAT 	fbargraph3;
	float 	fConst636;
	float 	fConst637;
	float 	fConst638;
	float 	fConst639;
	float 	fConst640;
	float 	fConst641;
	float 	fConst642;
	float 	fConst643;
	float 	fConst644;
	float 	fRec103[3];
	float 	fConst645;
	float 	fConst646;
	float 	fConst647;
	float 	fRec102[3];
	float 	fConst648;
	float 	fConst649;
	float 	fConst650;
	float 	fRec101[3];
	float 	fConst651;
	float 	fConst652;
	float 	fConst653;
	float 	fRec100[2];
	FAUSTFLOAT 	fbargraph4;
	float 	fConst654;
	float 	fConst655;
	float 	fConst656;
	float 	fConst657;
	float 	fConst658;
	float 	fConst659;
	float 	fConst660;
	float 	fConst661;
	float 	fConst662;
	float 	fRec107[3];
	float 	fConst663;
	float 	fConst664;
	float 	fConst665;
	float 	fRec106[3];
	float 	fConst666;
	float 	fConst667;
	float 	fConst668;
	float 	fRec105[3];
	float 	fConst669;
	float 	fConst670;
	float 	fConst671;
	float 	fRec104[2];
	FAUSTFLOAT 	fbargraph5;
	float 	fConst672;
	float 	fConst673;
	float 	fConst674;
	float 	fConst675;
	float 	fConst676;
	float 	fConst677;
	float 	fConst678;
	float 	fConst679;
	float 	fConst680;
	float 	fRec111[3];
	float 	fConst681;
	float 	fConst682;
	float 	fConst683;
	float 	fRec110[3];
	float 	fConst684;
	float 	fConst685;
	float 	fConst686;
	float 	fRec109[3];
	float 	fConst687;
	float 	fConst688;
	float 	fConst689;
	float 	fRec108[2];
	FAUSTFLOAT 	fbargraph6;
	float 	fConst690;
	float 	fConst691;
	float 	fConst692;
	float 	fConst693;
	float 	fConst694;
	float 	fConst695;
	float 	fConst696;
	float 	fConst697;
	float 	fConst698;
	float 	fRec115[3];
	float 	fConst699;
	float 	fConst700;
	float 	fConst701;
	float 	fRec114[3];
	float 	fConst702;
	float 	fConst703;
	float 	fConst704;
	float 	fRec113[3];
	float 	fConst705;
	float 	fConst706;
	float 	fConst707;
	float 	fRec112[2];
	FAUSTFLOAT 	fbargraph7;
	float 	fConst708;
	float 	fConst709;
	float 	fConst710;
	float 	fConst711;
	float 	fConst712;
	float 	fConst713;
	float 	fConst714;
	float 	fConst715;
	float 	fConst716;
	float 	fRec119[3];
	float 	fConst717;
	float 	fConst718;
	float 	fConst719;
	float 	fRec118[3];
	float 	fConst720;
	float 	fConst721;
	float 	fConst722;
	float 	fRec117[3];
	float 	fConst723;
	float 	fConst724;
	float 	fConst725;
	float 	fRec116[2];
	FAUSTFLOAT 	fbargraph8;
	float 	fConst726;
	float 	fConst727;
	float 	fConst728;
	float 	fConst729;
	float 	fConst730;
	float 	fConst731;
	float 	fConst732;
	float 	fConst733;
	float 	fConst734;
	float 	fRec123[3];
	float 	fConst735;
	float 	fConst736;
	float 	fConst737;
	float 	fRec122[3];
	float 	fConst738;
	float 	fConst739;
	float 	fConst740;
	float 	fRec121[3];
	float 	fConst741;
	float 	fConst742;
	float 	fConst743;
	float 	fRec120[2];
	FAUSTFLOAT 	fbargraph9;
	float 	fConst744;
	float 	fConst745;
	float 	fConst746;
	float 	fConst747;
	float 	fConst748;
	float 	fConst749;
	float 	fConst750;
	float 	fConst751;
	float 	fConst752;
	float 	fRec127[3];
	float 	fConst753;
	float 	fConst754;
	float 	fConst755;
	float 	fRec126[3];
	float 	fConst756;
	float 	fConst757;
	float 	fConst758;
	float 	fRec125[3];
	float 	fConst759;
	float 	fConst760;
	float 	fConst761;
	float 	fRec124[2];
	FAUSTFLOAT 	fbargraph10;
	float 	fConst762;
	float 	fConst763;
	float 	fConst764;
	float 	fConst765;
	float 	fConst766;
	float 	fConst767;
	float 	fConst768;
	float 	fConst769;
	float 	fConst770;
	float 	fRec131[3];
	float 	fConst771;
	float 	fConst772;
	float 	fConst773;
	float 	fRec130[3];
	float 	fConst774;
	float 	fConst775;
	float 	fConst776;
	float 	fRec129[3];
	float 	fConst777;
	float 	fConst778;
	float 	fConst779;
	float 	fRec128[2];
	FAUSTFLOAT 	fbargraph11;
	float 	fConst780;
	float 	fConst781;
	float 	fConst782;
	float 	fConst783;
	float 	fConst784;
	float 	fConst785;
	float 	fConst786;
	float 	fConst787;
	float 	fConst788;
	float 	fRec135[3];
	float 	fConst789;
	float 	fConst790;
	float 	fConst791;
	float 	fRec134[3];
	float 	fConst792;
	float 	fConst793;
	float 	fConst794;
	float 	fRec133[3];
	float 	fConst795;
	float 	fConst796;
	float 	fConst797;
	float 	fRec132[2];
	FAUSTFLOAT 	fbargraph12;
	float 	fConst798;
	float 	fConst799;
	float 	fConst800;
	float 	fConst801;
	float 	fConst802;
	float 	fConst803;
	float 	fConst804;
	float 	fConst805;
	float 	fConst806;
	float 	fRec139[3];
	float 	fConst807;
	float 	fConst808;
	float 	fConst809;
	float 	fRec138[3];
	float 	fConst810;
	float 	fConst811;
	float 	fConst812;
	float 	fRec137[3];
	float 	fConst813;
	float 	fConst814;
	float 	fConst815;
	float 	fRec136[2];
	FAUSTFLOAT 	fbargraph13;
	float 	fConst816;
	float 	fConst817;
	float 	fConst818;
	float 	fConst819;
	float 	fConst820;
	float 	fConst821;
	float 	fConst822;
	float 	fConst823;
	float 	fConst824;
	float 	fRec143[3];
	float 	fConst825;
	float 	fConst826;
	float 	fConst827;
	float 	fRec142[3];
	float 	fConst828;
	float 	fConst829;
	float 	fConst830;
	float 	fRec141[3];
	float 	fConst831;
	float 	fConst832;
	float 	fConst833;
	float 	fRec140[2];
	FAUSTFLOAT 	fbargraph14;
	float 	fConst834;
	float 	fConst835;
	float 	fConst836;
	float 	fConst837;
	float 	fConst838;
	float 	fConst839;
	float 	fConst840;
	float 	fConst841;
	float 	fConst842;
	float 	fRec147[3];
	float 	fConst843;
	float 	fConst844;
	float 	fConst845;
	float 	fRec146[3];
	float 	fConst846;
	float 	fConst847;
	float 	fConst848;
	float 	fRec145[3];
	float 	fConst849;
	float 	fConst850;
	float 	fConst851;
	float 	fRec144[2];
	FAUSTFLOAT 	fbargraph15;
	float 	fConst852;
	float 	fConst853;
	float 	fConst854;
	float 	fConst855;
	float 	fConst856;
	float 	fConst857;
	float 	fConst858;
	float 	fConst859;
	float 	fConst860;
	float 	fRec151[3];
	float 	fConst861;
	float 	fConst862;
	float 	fConst863;
	float 	fRec150[3];
	float 	fConst864;
	float 	fConst865;
	float 	fConst866;
	float 	fRec149[3];
	float 	fConst867;
	float 	fConst868;
	float 	fConst869;
	float 	fRec148[2];
	FAUSTFLOAT 	fbargraph16;
	float 	fConst870;
	float 	fConst871;
	float 	fConst872;
	float 	fConst873;
	float 	fConst874;
	float 	fConst875;
	float 	fConst876;
	float 	fConst877;
	float 	fConst878;
	float 	fRec155[3];
	float 	fConst879;
	float 	fConst880;
	float 	fConst881;
	float 	fRec154[3];
	float 	fConst882;
	float 	fConst883;
	float 	fConst884;
	float 	fRec153[3];
	float 	fConst885;
	float 	fConst886;
	float 	fConst887;
	float 	fRec152[2];
	FAUSTFLOAT 	fbargraph17;
	float 	fConst888;
	float 	fConst889;
	float 	fConst890;
	float 	fConst891;
	float 	fConst892;
	float 	fConst893;
	float 	fConst894;
	float 	fConst895;
	float 	fConst896;
	float 	fRec159[3];
	float 	fConst897;
	float 	fConst898;
	float 	fConst899;
	float 	fRec158[3];
	float 	fConst900;
	float 	fConst901;
	float 	fConst902;
	float 	fRec157[3];
	float 	fConst903;
	float 	fConst904;
	float 	fConst905;
	float 	fRec156[2];
	FAUSTFLOAT 	fbargraph18;
	float 	fConst906;
	float 	fConst907;
	float 	fConst908;
	float 	fConst909;
	float 	fConst910;
	float 	fConst911;
	float 	fConst912;
	float 	fConst913;
	float 	fConst914;
	float 	fRec163[3];
	float 	fConst915;
	float 	fConst916;
	float 	fConst917;
	float 	fRec162[3];
	float 	fConst918;
	float 	fConst919;
	float 	fConst920;
	float 	fRec161[3];
	float 	fConst921;
	float 	fConst922;
	float 	fConst923;
	float 	fRec160[2];
	FAUSTFLOAT 	fbargraph19;
	float 	fConst924;
	float 	fConst925;
	float 	fConst926;
	float 	fConst927;
	float 	fConst928;
	float 	fConst929;
	float 	fConst930;
	float 	fConst931;
	float 	fConst932;
	float 	fRec167[3];
	float 	fConst933;
	float 	fConst934;
	float 	fConst935;
	float 	fRec166[3];
	float 	fConst936;
	float 	fConst937;
	float 	fConst938;
	float 	fRec165[3];
	float 	fConst939;
	float 	fConst940;
	float 	fConst941;
	float 	fRec164[2];
	FAUSTFLOAT 	fbargraph20;
	float 	fConst942;
	float 	fConst943;
	float 	fConst944;
	float 	fConst945;
	float 	fConst946;
	float 	fConst947;
	float 	fConst948;
	float 	fConst949;
	float 	fConst950;
	float 	fRec171[3];
	float 	fConst951;
	float 	fConst952;
	float 	fConst953;
	float 	fRec170[3];
	float 	fConst954;
	float 	fConst955;
	float 	fConst956;
	float 	fRec169[3];
	float 	fConst957;
	float 	fConst958;
	float 	fConst959;
	float 	fRec168[2];
	FAUSTFLOAT 	fbargraph21;
	float 	fConst960;
	float 	fConst961;
	float 	fConst962;
	float 	fConst963;
	float 	fConst964;
	float 	fConst965;
	float 	fConst966;
	float 	fConst967;
	float 	fConst968;
	float 	fRec175[3];
	float 	fConst969;
	float 	fConst970;
	float 	fConst971;
	float 	fRec174[3];
	float 	fConst972;
	float 	fConst973;
	float 	fConst974;
	float 	fRec173[3];
	float 	fConst975;
	float 	fConst976;
	float 	fConst977;
	float 	fRec172[2];
	FAUSTFLOAT 	fbargraph22;
	float 	fConst978;
	float 	fConst979;
	float 	fConst980;
	float 	fConst981;
	float 	fConst982;
	float 	fConst983;
	float 	fConst984;
	float 	fConst985;
	float 	fConst986;
	float 	fRec179[3];
	float 	fConst987;
	float 	fConst988;
	float 	fConst989;
	float 	fRec178[3];
	float 	fConst990;
	float 	fConst991;
	float 	fConst992;
	float 	fRec177[3];
	float 	fConst993;
	float 	fConst994;
	float 	fConst995;
	float 	fRec176[2];
	FAUSTFLOAT 	fbargraph23;
	float 	fConst996;
	float 	fConst997;
	float 	fConst998;
	float 	fConst999;
	float 	fConst1000;
	float 	fConst1001;
	float 	fConst1002;
	float 	fConst1003;
	float 	fConst1004;
	float 	fRec183[3];
	float 	fConst1005;
	float 	fConst1006;
	float 	fConst1007;
	float 	fRec182[3];
	float 	fConst1008;
	float 	fConst1009;
	float 	fConst1010;
	float 	fRec181[3];
	float 	fConst1011;
	float 	fConst1012;
	float 	fConst1013;
	float 	fRec180[2];
	FAUSTFLOAT 	fbargraph24;
	float 	fConst1014;
	float 	fConst1015;
	float 	fConst1016;
	float 	fConst1017;
	float 	fConst1018;
	float 	fConst1019;
	float 	fConst1020;
	float 	fConst1021;
	float 	fConst1022;
	float 	fRec187[3];
	float 	fConst1023;
	float 	fConst1024;
	float 	fConst1025;
	float 	fRec186[3];
	float 	fConst1026;
	float 	fConst1027;
	float 	fConst1028;
	float 	fRec185[3];
	float 	fConst1029;
	float 	fConst1030;
	float 	fConst1031;
	float 	fRec184[2];
	FAUSTFLOAT 	fbargraph25;
	float 	fConst1032;
	float 	fConst1033;
	float 	fConst1034;
	float 	fConst1035;
	float 	fConst1036;
	float 	fConst1037;
	float 	fConst1038;
	float 	fConst1039;
	float 	fConst1040;
	float 	fRec191[3];
	float 	fConst1041;
	float 	fConst1042;
	float 	fConst1043;
	float 	fRec190[3];
	float 	fConst1044;
	float 	fConst1045;
	float 	fConst1046;
	float 	fRec189[3];
	float 	fConst1047;
	float 	fConst1048;
	float 	fConst1049;
	float 	fRec188[2];
	FAUSTFLOAT 	fbargraph26;
	float 	fConst1050;
	float 	fConst1051;
	float 	fConst1052;
	float 	fConst1053;
	float 	fConst1054;
	float 	fConst1055;
	float 	fConst1056;
	float 	fConst1057;
	float 	fConst1058;
	float 	fRec195[3];
	float 	fConst1059;
	float 	fConst1060;
	float 	fConst1061;
	float 	fRec194[3];
	float 	fConst1062;
	float 	fConst1063;
	float 	fConst1064;
	float 	fRec193[3];
	float 	fConst1065;
	float 	fConst1066;
	float 	fConst1067;
	float 	fRec192[2];
	FAUSTFLOAT 	fbargraph27;
	float 	fConst1068;
	float 	fConst1069;
	float 	fConst1070;
	float 	fConst1071;
	float 	fConst1072;
	float 	fConst1073;
	float 	fConst1074;
	float 	fConst1075;
	float 	fConst1076;
	float 	fRec199[3];
	float 	fConst1077;
	float 	fConst1078;
	float 	fConst1079;
	float 	fRec198[3];
	float 	fConst1080;
	float 	fConst1081;
	float 	fConst1082;
	float 	fRec197[3];
	float 	fConst1083;
	float 	fConst1084;
	float 	fConst1085;
	float 	fRec196[2];
	FAUSTFLOAT 	fbargraph28;
	float 	fConst1086;
	float 	fConst1087;
	float 	fConst1088;
	float 	fConst1089;
	float 	fConst1090;
	float 	fConst1091;
	float 	fConst1092;
	float 	fConst1093;
	float 	fConst1094;
	float 	fRec203[3];
	float 	fConst1095;
	float 	fConst1096;
	float 	fConst1097;
	float 	fRec202[3];
	float 	fConst1098;
	float 	fConst1099;
	float 	fConst1100;
	float 	fRec201[3];
	float 	fConst1101;
	float 	fConst1102;
	float 	fConst1103;
	float 	fRec200[2];
	FAUSTFLOAT 	fbargraph29;
  public:
	static void metadata(Meta* m) 	{ 
		m->declare("name", "spectrum_level");
		m->declare("filter.lib/name", "Faust Filter Library");
		m->declare("filter.lib/author", "Julius O. Smith (jos at ccrma.stanford.edu)");
		m->declare("filter.lib/copyright", "Julius O. Smith III");
		m->declare("filter.lib/version", "1.29");
		m->declare("filter.lib/license", "STK-4.3");
		m->declare("filter.lib/reference", "https://ccrma.stanford.edu/~jos/filters/");
		m->declare("music.lib/version", "1.0");
		m->declare("music.lib/copyright", "GRAME");
		m->declare("music.lib/author", "GRAME");
		m->declare("music.lib/name", "Music Library");
		m->declare("music.lib/license", "LGPL with exception");
		m->declare("math.lib/name", "Math Library");
		m->declare("math.lib/author", "GRAME");
		m->declare("math.lib/copyright", "GRAME");
		m->declare("math.lib/version", "1.0");
		m->declare("math.lib/license", "LGPL with exception");
	}

	virtual int getNumInputs() 	{ return 1; }
	virtual int getNumOutputs() 	{ return 2; }
	static void classInit(int samplingFreq) {
	}
	virtual void instanceInit(int samplingFreq) {
		fSamplingFreq = samplingFreq;
		iConst0 = min(192000, max(1, fSamplingFreq));
		fConst1 = tanf((77.92136692443755f / float(iConst0)));
		fConst2 = faustpower<2>(fConst1);
		fConst3 = (1.0f / fConst2);
		fConst4 = (2 * (1.069358407707312f - fConst3));
		fConst5 = (1.0f / fConst1);
		fConst6 = (1.069358407707312f + ((fConst5 - 0.168404871113589f) / fConst1));
		fConst7 = (1.0f / (1.069358407707312f + ((0.168404871113589f + fConst5) / fConst1)));
		fConst8 = (2 * (0.689621364484675f - fConst3));
		fConst9 = (0.689621364484675f + ((fConst5 - 0.512478641889141f) / fConst1));
		fConst10 = (1.0f / (0.689621364484675f + ((0.512478641889141f + fConst5) / fConst1)));
		fConst11 = (2 * (0.24529150870616f - fConst3));
		fConst12 = (0.24529150870616f + ((fConst5 - 0.782413046821645f) / fConst1));
		fConst13 = (1.0f / (0.24529150870616f + ((0.782413046821645f + fConst5) / fConst1)));
		fConst14 = tanf((98.17477042468103f / float(iConst0)));
		fConst15 = faustpower<2>(fConst14);
		fConst16 = (1.0f / fConst15);
		fConst17 = (2 * (1.069358407707312f - fConst16));
		fConst18 = (1.0f / fConst14);
		fConst19 = (1.069358407707312f + ((fConst18 - 0.168404871113589f) / fConst14));
		fConst20 = (1.0f / (1.069358407707312f + ((0.168404871113589f + fConst18) / fConst14)));
		fConst21 = (2 * (0.689621364484675f - fConst16));
		fConst22 = (0.689621364484675f + ((fConst18 - 0.512478641889141f) / fConst14));
		fConst23 = (1.0f / (0.689621364484675f + ((0.512478641889141f + fConst18) / fConst14)));
		fConst24 = (2 * (0.24529150870616f - fConst16));
		fConst25 = (0.24529150870616f + ((fConst18 - 0.782413046821645f) / fConst14));
		fConst26 = (1.0f / (0.24529150870616f + ((0.782413046821645f + fConst18) / fConst14)));
		fConst27 = tanf((123.69245982665232f / float(iConst0)));
		fConst28 = faustpower<2>(fConst27);
		fConst29 = (1.0f / fConst28);
		fConst30 = (2 * (1.069358407707312f - fConst29));
		fConst31 = (1.0f / fConst27);
		fConst32 = (1.069358407707312f + ((fConst31 - 0.168404871113589f) / fConst27));
		fConst33 = (1.0f / (1.069358407707312f + ((0.168404871113589f + fConst31) / fConst27)));
		fConst34 = (2 * (0.689621364484675f - fConst29));
		fConst35 = (0.689621364484675f + ((fConst31 - 0.512478641889141f) / fConst27));
		fConst36 = (1.0f / (0.689621364484675f + ((0.512478641889141f + fConst31) / fConst27)));
		fConst37 = (2 * (0.24529150870616f - fConst29));
		fConst38 = (0.24529150870616f + ((fConst31 - 0.782413046821645f) / fConst27));
		fConst39 = (1.0f / (0.24529150870616f + ((0.782413046821645f + fConst31) / fConst27)));
		fConst40 = tanf((155.8427338488751f / float(iConst0)));
		fConst41 = faustpower<2>(fConst40);
		fConst42 = (1.0f / fConst41);
		fConst43 = (2 * (1.069358407707312f - fConst42));
		fConst44 = (1.0f / fConst40);
		fConst45 = (1.069358407707312f + ((fConst44 - 0.168404871113589f) / fConst40));
		fConst46 = (1.0f / (1.069358407707312f + ((0.168404871113589f + fConst44) / fConst40)));
		fConst47 = (2 * (0.689621364484675f - fConst42));
		fConst48 = (0.689621364484675f + ((fConst44 - 0.512478641889141f) / fConst40));
		fConst49 = (1.0f / (0.689621364484675f + ((0.512478641889141f + fConst44) / fConst40)));
		fConst50 = (2 * (0.24529150870616f - fConst42));
		fConst51 = (0.24529150870616f + ((fConst44 - 0.782413046821645f) / fConst40));
		fConst52 = (1.0f / (0.24529150870616f + ((0.782413046821645f + fConst44) / fConst40)));
		fConst53 = tanf((196.34954084936206f / float(iConst0)));
		fConst54 = faustpower<2>(fConst53);
		fConst55 = (1.0f / fConst54);
		fConst56 = (2 * (1.069358407707312f - fConst55));
		fConst57 = (1.0f / fConst53);
		fConst58 = (1.069358407707312f + ((fConst57 - 0.168404871113589f) / fConst53));
		fConst59 = (1.0f / (1.069358407707312f + ((0.168404871113589f + fConst57) / fConst53)));
		fConst60 = (2 * (0.689621364484675f - fConst55));
		fConst61 = (0.689621364484675f + ((fConst57 - 0.512478641889141f) / fConst53));
		fConst62 = (1.0f / (0.689621364484675f + ((0.512478641889141f + fConst57) / fConst53)));
		fConst63 = (2 * (0.24529150870616f - fConst55));
		fConst64 = (0.24529150870616f + ((fConst57 - 0.782413046821645f) / fConst53));
		fConst65 = (1.0f / (0.24529150870616f + ((0.782413046821645f + fConst57) / fConst53)));
		fConst66 = tanf((247.3849196533045f / float(iConst0)));
		fConst67 = faustpower<2>(fConst66);
		fConst68 = (1.0f / fConst67);
		fConst69 = (2 * (1.069358407707312f - fConst68));
		fConst70 = (1.0f / fConst66);
		fConst71 = (1.069358407707312f + ((fConst70 - 0.168404871113589f) / fConst66));
		fConst72 = (1.0f / (1.069358407707312f + ((0.168404871113589f + fConst70) / fConst66)));
		fConst73 = (2 * (0.689621364484675f - fConst68));
		fConst74 = (0.689621364484675f + ((fConst70 - 0.512478641889141f) / fConst66));
		fConst75 = (1.0f / (0.689621364484675f + ((0.512478641889141f + fConst70) / fConst66)));
		fConst76 = (2 * (0.24529150870616f - fConst68));
		fConst77 = (0.24529150870616f + ((fConst70 - 0.782413046821645f) / fConst66));
		fConst78 = (1.0f / (0.24529150870616f + ((0.782413046821645f + fConst70) / fConst66)));
		fConst79 = tanf((311.68546769775037f / float(iConst0)));
		fConst80 = faustpower<2>(fConst79);
		fConst81 = (1.0f / fConst80);
		fConst82 = (2 * (1.069358407707312f - fConst81));
		fConst83 = (1.0f / fConst79);
		fConst84 = (1.069358407707312f + ((fConst83 - 0.168404871113589f) / fConst79));
		fConst85 = (1.0f / (1.069358407707312f + ((0.168404871113589f + fConst83) / fConst79)));
		fConst86 = (2 * (0.689621364484675f - fConst81));
		fConst87 = (0.689621364484675f + ((fConst83 - 0.512478641889141f) / fConst79));
		fConst88 = (1.0f / (0.689621364484675f + ((0.512478641889141f + fConst83) / fConst79)));
		fConst89 = (2 * (0.24529150870616f - fConst81));
		fConst90 = (0.24529150870616f + ((fConst83 - 0.782413046821645f) / fConst79));
		fConst91 = (1.0f / (0.24529150870616f + ((0.782413046821645f + fConst83) / fConst79)));
		fConst92 = tanf((392.6990816987241f / float(iConst0)));
		fConst93 = faustpower<2>(fConst92);
		fConst94 = (1.0f / fConst93);
		fConst95 = (2 * (1.069358407707312f - fConst94));
		fConst96 = (1.0f / fConst92);
		fConst97 = (1.069358407707312f + ((fConst96 - 0.168404871113589f) / fConst92));
		fConst98 = (1.0f / (1.069358407707312f + ((0.168404871113589f + fConst96) / fConst92)));
		fConst99 = (2 * (0.689621364484675f - fConst94));
		fConst100 = (0.689621364484675f + ((fConst96 - 0.512478641889141f) / fConst92));
		fConst101 = (1.0f / (0.689621364484675f + ((0.512478641889141f + fConst96) / fConst92)));
		fConst102 = (2 * (0.24529150870616f - fConst94));
		fConst103 = (0.24529150870616f + ((fConst96 - 0.782413046821645f) / fConst92));
		fConst104 = (1.0f / (0.24529150870616f + ((0.782413046821645f + fConst96) / fConst92)));
		fConst105 = tanf((494.769839306609f / float(iConst0)));
		fConst106 = faustpower<2>(fConst105);
		fConst107 = (1.0f / fConst106);
		fConst108 = (2 * (1.069358407707312f - fConst107));
		fConst109 = (1.0f / fConst105);
		fConst110 = (1.069358407707312f + ((fConst109 - 0.168404871113589f) / fConst105));
		fConst111 = (1.0f / (1.069358407707312f + ((0.168404871113589f + fConst109) / fConst105)));
		fConst112 = (2 * (0.689621364484675f - fConst107));
		fConst113 = (0.689621364484675f + ((fConst109 - 0.512478641889141f) / fConst105));
		fConst114 = (1.0f / (0.689621364484675f + ((0.512478641889141f + fConst109) / fConst105)));
		fConst115 = (2 * (0.24529150870616f - fConst107));
		fConst116 = (0.24529150870616f + ((fConst109 - 0.782413046821645f) / fConst105));
		fConst117 = (1.0f / (0.24529150870616f + ((0.782413046821645f + fConst109) / fConst105)));
		fConst118 = tanf((623.3709353955007f / float(iConst0)));
		fConst119 = faustpower<2>(fConst118);
		fConst120 = (1.0f / fConst119);
		fConst121 = (2 * (1.069358407707312f - fConst120));
		fConst122 = (1.0f / fConst118);
		fConst123 = (1.069358407707312f + ((fConst122 - 0.168404871113589f) / fConst118));
		fConst124 = (1.0f / (1.069358407707312f + ((0.168404871113589f + fConst122) / fConst118)));
		fConst125 = (2 * (0.689621364484675f - fConst120));
		fConst126 = (0.689621364484675f + ((fConst122 - 0.512478641889141f) / fConst118));
		fConst127 = (1.0f / (0.689621364484675f + ((0.512478641889141f + fConst122) / fConst118)));
		fConst128 = (2 * (0.24529150870616f - fConst120));
		fConst129 = (0.24529150870616f + ((fConst122 - 0.782413046821645f) / fConst118));
		fConst130 = (1.0f / (0.24529150870616f + ((0.782413046821645f + fConst122) / fConst118)));
		fConst131 = tanf((785.3981633974482f / float(iConst0)));
		fConst132 = faustpower<2>(fConst131);
		fConst133 = (1.0f / fConst132);
		fConst134 = (2 * (1.069358407707312f - fConst133));
		fConst135 = (1.0f / fConst131);
		fConst136 = (1.069358407707312f + ((fConst135 - 0.168404871113589f) / fConst131));
		fConst137 = (1.0f / (1.069358407707312f + ((0.168404871113589f + fConst135) / fConst131)));
		fConst138 = (2 * (0.689621364484675f - fConst133));
		fConst139 = (0.689621364484675f + ((fConst135 - 0.512478641889141f) / fConst131));
		fConst140 = (1.0f / (0.689621364484675f + ((0.512478641889141f + fConst135) / fConst131)));
		fConst141 = (2 * (0.24529150870616f - fConst133));
		fConst142 = (0.24529150870616f + ((fConst135 - 0.782413046821645f) / fConst131));
		fConst143 = (1.0f / (0.24529150870616f + ((0.782413046821645f + fConst135) / fConst131)));
		fConst144 = tanf((989.539678613218f / float(iConst0)));
		fConst145 = faustpower<2>(fConst144);
		fConst146 = (1.0f / fConst145);
		fConst147 = (2 * (1.069358407707312f - fConst146));
		fConst148 = (1.0f / fConst144);
		fConst149 = (1.069358407707312f + ((fConst148 - 0.168404871113589f) / fConst144));
		fConst150 = (1.0f / (1.069358407707312f + ((0.168404871113589f + fConst148) / fConst144)));
		fConst151 = (2 * (0.689621364484675f - fConst146));
		fConst152 = (0.689621364484675f + ((fConst148 - 0.512478641889141f) / fConst144));
		fConst153 = (1.0f / (0.689621364484675f + ((0.512478641889141f + fConst148) / fConst144)));
		fConst154 = (2 * (0.24529150870616f - fConst146));
		fConst155 = (0.24529150870616f + ((fConst148 - 0.782413046821645f) / fConst144));
		fConst156 = (1.0f / (0.24529150870616f + ((0.782413046821645f + fConst148) / fConst144)));
		fConst157 = tanf((1246.7418707910015f / float(iConst0)));
		fConst158 = faustpower<2>(fConst157);
		fConst159 = (1.0f / fConst158);
		fConst160 = (2 * (1.069358407707312f - fConst159));
		fConst161 = (1.0f / fConst157);
		fConst162 = (1.069358407707312f + ((fConst161 - 0.168404871113589f) / fConst157));
		fConst163 = (1.0f / (1.069358407707312f + ((0.168404871113589f + fConst161) / fConst157)));
		fConst164 = (2 * (0.689621364484675f - fConst159));
		fConst165 = (0.689621364484675f + ((fConst161 - 0.512478641889141f) / fConst157));
		fConst166 = (1.0f / (0.689621364484675f + ((0.512478641889141f + fConst161) / fConst157)));
		fConst167 = (2 * (0.24529150870616f - fConst159));
		fConst168 = (0.24529150870616f + ((fConst161 - 0.782413046821645f) / fConst157));
		fConst169 = (1.0f / (0.24529150870616f + ((0.782413046821645f + fConst161) / fConst157)));
		fConst170 = tanf((1570.7963267948965f / float(iConst0)));
		fConst171 = faustpower<2>(fConst170);
		fConst172 = (1.0f / fConst171);
		fConst173 = (2 * (1.069358407707312f - fConst172));
		fConst174 = (1.0f / fConst170);
		fConst175 = (1.069358407707312f + ((fConst174 - 0.168404871113589f) / fConst170));
		fConst176 = (1.0f / (1.069358407707312f + ((0.168404871113589f + fConst174) / fConst170)));
		fConst177 = (2 * (0.689621364484675f - fConst172));
		fConst178 = (0.689621364484675f + ((fConst174 - 0.512478641889141f) / fConst170));
		fConst179 = (1.0f / (0.689621364484675f + ((0.512478641889141f + fConst174) / fConst170)));
		fConst180 = (2 * (0.24529150870616f - fConst172));
		fConst181 = (0.24529150870616f + ((fConst174 - 0.782413046821645f) / fConst170));
		fConst182 = (1.0f / (0.24529150870616f + ((0.782413046821645f + fConst174) / fConst170)));
		fConst183 = tanf((1979.079357226436f / float(iConst0)));
		fConst184 = faustpower<2>(fConst183);
		fConst185 = (1.0f / fConst184);
		fConst186 = (2 * (1.069358407707312f - fConst185));
		fConst187 = (1.0f / fConst183);
		fConst188 = (1.069358407707312f + ((fConst187 - 0.168404871113589f) / fConst183));
		fConst189 = (1.0f / (1.069358407707312f + ((0.168404871113589f + fConst187) / fConst183)));
		fConst190 = (2 * (0.689621364484675f - fConst185));
		fConst191 = (0.689621364484675f + ((fConst187 - 0.512478641889141f) / fConst183));
		fConst192 = (1.0f / (0.689621364484675f + ((0.512478641889141f + fConst187) / fConst183)));
		fConst193 = (2 * (0.24529150870616f - fConst185));
		fConst194 = (0.24529150870616f + ((fConst187 - 0.782413046821645f) / fConst183));
		fConst195 = (1.0f / (0.24529150870616f + ((0.782413046821645f + fConst187) / fConst183)));
		fConst196 = tanf((2493.483741582003f / float(iConst0)));
		fConst197 = faustpower<2>(fConst196);
		fConst198 = (1.0f / fConst197);
		fConst199 = (2 * (1.069358407707312f - fConst198));
		fConst200 = (1.0f / fConst196);
		fConst201 = (1.069358407707312f + ((fConst200 - 0.168404871113589f) / fConst196));
		fConst202 = (1.0f / (1.069358407707312f + ((0.168404871113589f + fConst200) / fConst196)));
		fConst203 = (2 * (0.689621364484675f - fConst198));
		fConst204 = (0.689621364484675f + ((fConst200 - 0.512478641889141f) / fConst196));
		fConst205 = (1.0f / (0.689621364484675f + ((0.512478641889141f + fConst200) / fConst196)));
		fConst206 = (2 * (0.24529150870616f - fConst198));
		fConst207 = (0.24529150870616f + ((fConst200 - 0.782413046821645f) / fConst196));
		fConst208 = (1.0f / (0.24529150870616f + ((0.782413046821645f + fConst200) / fConst196)));
		fConst209 = tanf((3141.592653589793f / float(iConst0)));
		fConst210 = faustpower<2>(fConst209);
		fConst211 = (1.0f / fConst210);
		fConst212 = (2 * (1.069358407707312f - fConst211));
		fConst213 = (1.0f / fConst209);
		fConst214 = (1.069358407707312f + ((fConst213 - 0.168404871113589f) / fConst209));
		fConst215 = (1.0f / (1.069358407707312f + ((0.168404871113589f + fConst213) / fConst209)));
		fConst216 = (2 * (0.689621364484675f - fConst211));
		fConst217 = (0.689621364484675f + ((fConst213 - 0.512478641889141f) / fConst209));
		fConst218 = (1.0f / (0.689621364484675f + ((0.512478641889141f + fConst213) / fConst209)));
		fConst219 = (2 * (0.24529150870616f - fConst211));
		fConst220 = (0.24529150870616f + ((fConst213 - 0.782413046821645f) / fConst209));
		fConst221 = (1.0f / (0.24529150870616f + ((0.782413046821645f + fConst213) / fConst209)));
		fConst222 = tanf((3958.158714452873f / float(iConst0)));
		fConst223 = faustpower<2>(fConst222);
		fConst224 = (1.0f / fConst223);
		fConst225 = (2 * (1.069358407707312f - fConst224));
		fConst226 = (1.0f / fConst222);
		fConst227 = (1.069358407707312f + ((fConst226 - 0.168404871113589f) / fConst222));
		fConst228 = (1.0f / (1.069358407707312f + ((0.168404871113589f + fConst226) / fConst222)));
		fConst229 = (2 * (0.689621364484675f - fConst224));
		fConst230 = (0.689621364484675f + ((fConst226 - 0.512478641889141f) / fConst222));
		fConst231 = (1.0f / (0.689621364484675f + ((0.512478641889141f + fConst226) / fConst222)));
		fConst232 = (2 * (0.24529150870616f - fConst224));
		fConst233 = (0.24529150870616f + ((fConst226 - 0.782413046821645f) / fConst222));
		fConst234 = (1.0f / (0.24529150870616f + ((0.782413046821645f + fConst226) / fConst222)));
		fConst235 = tanf((4986.967483164005f / float(iConst0)));
		fConst236 = faustpower<2>(fConst235);
		fConst237 = (1.0f / fConst236);
		fConst238 = (2 * (1.069358407707312f - fConst237));
		fConst239 = (1.0f / fConst235);
		fConst240 = (1.069358407707312f + ((fConst239 - 0.168404871113589f) / fConst235));
		fConst241 = (1.0f / (1.069358407707312f + ((0.168404871113589f + fConst239) / fConst235)));
		fConst242 = (2 * (0.689621364484675f - fConst237));
		fConst243 = (0.689621364484675f + ((fConst239 - 0.512478641889141f) / fConst235));
		fConst244 = (1.0f / (0.689621364484675f + ((0.512478641889141f + fConst239) / fConst235)));
		fConst245 = (2 * (0.24529150870616f - fConst237));
		fConst246 = (0.24529150870616f + ((fConst239 - 0.782413046821645f) / fConst235));
		fConst247 = (1.0f / (0.24529150870616f + ((0.782413046821645f + fConst239) / fConst235)));
		fConst248 = tanf((6283.185307179586f / float(iConst0)));
		fConst249 = faustpower<2>(fConst248);
		fConst250 = (1.0f / fConst249);
		fConst251 = (2 * (1.069358407707312f - fConst250));
		fConst252 = (1.0f / fConst248);
		fConst253 = (1.069358407707312f + ((fConst252 - 0.168404871113589f) / fConst248));
		fConst254 = (1.0f / (1.069358407707312f + ((0.168404871113589f + fConst252) / fConst248)));
		fConst255 = (2 * (0.689621364484675f - fConst250));
		fConst256 = (0.689621364484675f + ((fConst252 - 0.512478641889141f) / fConst248));
		fConst257 = (1.0f / (0.689621364484675f + ((0.512478641889141f + fConst252) / fConst248)));
		fConst258 = (2 * (0.24529150870616f - fConst250));
		fConst259 = (0.24529150870616f + ((fConst252 - 0.782413046821645f) / fConst248));
		fConst260 = (1.0f / (0.24529150870616f + ((0.782413046821645f + fConst252) / fConst248)));
		fConst261 = tanf((7916.317428905746f / float(iConst0)));
		fConst262 = faustpower<2>(fConst261);
		fConst263 = (1.0f / fConst262);
		fConst264 = (2 * (1.069358407707312f - fConst263));
		fConst265 = (1.0f / fConst261);
		fConst266 = (1.069358407707312f + ((fConst265 - 0.168404871113589f) / fConst261));
		fConst267 = (1.0f / (1.069358407707312f + ((0.168404871113589f + fConst265) / fConst261)));
		fConst268 = (2 * (0.689621364484675f - fConst263));
		fConst269 = (0.689621364484675f + ((fConst265 - 0.512478641889141f) / fConst261));
		fConst270 = (1.0f / (0.689621364484675f + ((0.512478641889141f + fConst265) / fConst261)));
		fConst271 = (2 * (0.24529150870616f - fConst263));
		fConst272 = (0.24529150870616f + ((fConst265 - 0.782413046821645f) / fConst261));
		fConst273 = (1.0f / (0.24529150870616f + ((0.782413046821645f + fConst265) / fConst261)));
		fConst274 = tanf((9973.93496632801f / float(iConst0)));
		fConst275 = faustpower<2>(fConst274);
		fConst276 = (1.0f / fConst275);
		fConst277 = (2 * (1.069358407707312f - fConst276));
		fConst278 = (1.0f / fConst274);
		fConst279 = (1.069358407707312f + ((fConst278 - 0.168404871113589f) / fConst274));
		fConst280 = (1.0f / (1.069358407707312f + ((0.168404871113589f + fConst278) / fConst274)));
		fConst281 = (2 * (0.689621364484675f - fConst276));
		fConst282 = (0.689621364484675f + ((fConst278 - 0.512478641889141f) / fConst274));
		fConst283 = (1.0f / (0.689621364484675f + ((0.512478641889141f + fConst278) / fConst274)));
		fConst284 = (2 * (0.24529150870616f - fConst276));
		fConst285 = (0.24529150870616f + ((fConst278 - 0.782413046821645f) / fConst274));
		fConst286 = (1.0f / (0.24529150870616f + ((0.782413046821645f + fConst278) / fConst274)));
		fConst287 = tanf((12566.370614359172f / float(iConst0)));
		fConst288 = faustpower<2>(fConst287);
		fConst289 = (1.0f / fConst288);
		fConst290 = (2 * (1.069358407707312f - fConst289));
		fConst291 = (1.0f / fConst287);
		fConst292 = (1.069358407707312f + ((fConst291 - 0.168404871113589f) / fConst287));
		fConst293 = (1.0f / (1.069358407707312f + ((0.168404871113589f + fConst291) / fConst287)));
		fConst294 = (2 * (0.689621364484675f - fConst289));
		fConst295 = (0.689621364484675f + ((fConst291 - 0.512478641889141f) / fConst287));
		fConst296 = (1.0f / (0.689621364484675f + ((0.512478641889141f + fConst291) / fConst287)));
		fConst297 = (2 * (0.24529150870616f - fConst289));
		fConst298 = (0.24529150870616f + ((fConst291 - 0.782413046821645f) / fConst287));
		fConst299 = (1.0f / (0.24529150870616f + ((0.782413046821645f + fConst291) / fConst287)));
		fConst300 = tanf((15832.634857811492f / float(iConst0)));
		fConst301 = faustpower<2>(fConst300);
		fConst302 = (1.0f / fConst301);
		fConst303 = (2 * (1.069358407707312f - fConst302));
		fConst304 = (1.0f / fConst300);
		fConst305 = (1.069358407707312f + ((fConst304 - 0.168404871113589f) / fConst300));
		fConst306 = (1.0f / (1.069358407707312f + ((0.168404871113589f + fConst304) / fConst300)));
		fConst307 = (2 * (0.689621364484675f - fConst302));
		fConst308 = (0.689621364484675f + ((fConst304 - 0.512478641889141f) / fConst300));
		fConst309 = (1.0f / (0.689621364484675f + ((0.512478641889141f + fConst304) / fConst300)));
		fConst310 = (2 * (0.24529150870616f - fConst302));
		fConst311 = (0.24529150870616f + ((fConst304 - 0.782413046821645f) / fConst300));
		fConst312 = (1.0f / (0.24529150870616f + ((0.782413046821645f + fConst304) / fConst300)));
		fConst313 = tanf((19947.869932656024f / float(iConst0)));
		fConst314 = faustpower<2>(fConst313);
		fConst315 = (1.0f / fConst314);
		fConst316 = (2 * (1.069358407707312f - fConst315));
		fConst317 = (1.0f / fConst313);
		fConst318 = (1.069358407707312f + ((fConst317 - 0.168404871113589f) / fConst313));
		fConst319 = (1.0f / (1.069358407707312f + ((0.168404871113589f + fConst317) / fConst313)));
		fConst320 = (2 * (0.689621364484675f - fConst315));
		fConst321 = (0.689621364484675f + ((fConst317 - 0.512478641889141f) / fConst313));
		fConst322 = (1.0f / (0.689621364484675f + ((0.512478641889141f + fConst317) / fConst313)));
		fConst323 = (2 * (0.24529150870616f - fConst315));
		fConst324 = (0.24529150870616f + ((fConst317 - 0.782413046821645f) / fConst313));
		fConst325 = (1.0f / (0.24529150870616f + ((0.782413046821645f + fConst317) / fConst313)));
		fConst326 = tanf((25132.741228718343f / float(iConst0)));
		fConst327 = faustpower<2>(fConst326);
		fConst328 = (1.0f / fConst327);
		fConst329 = (2 * (1.069358407707312f - fConst328));
		fConst330 = (1.0f / fConst326);
		fConst331 = (1.069358407707312f + ((fConst330 - 0.168404871113589f) / fConst326));
		fConst332 = (1.0f / (1.069358407707312f + ((0.168404871113589f + fConst330) / fConst326)));
		fConst333 = (2 * (0.689621364484675f - fConst328));
		fConst334 = (0.689621364484675f + ((fConst330 - 0.512478641889141f) / fConst326));
		fConst335 = (1.0f / (0.689621364484675f + ((0.512478641889141f + fConst330) / fConst326)));
		fConst336 = (2 * (0.24529150870616f - fConst328));
		fConst337 = (0.24529150870616f + ((fConst330 - 0.782413046821645f) / fConst326));
		fConst338 = (1.0f / (0.24529150870616f + ((0.782413046821645f + fConst330) / fConst326)));
		fConst339 = tanf((31665.269715622984f / float(iConst0)));
		fConst340 = faustpower<2>(fConst339);
		fConst341 = (1.0f / fConst340);
		fConst342 = (2 * (1.069358407707312f - fConst341));
		fConst343 = (1.0f / fConst339);
		fConst344 = (1.069358407707312f + ((fConst343 - 0.168404871113589f) / fConst339));
		fConst345 = (1.0f / (1.069358407707312f + ((0.168404871113589f + fConst343) / fConst339)));
		fConst346 = (2 * (0.689621364484675f - fConst341));
		fConst347 = (0.689621364484675f + ((fConst343 - 0.512478641889141f) / fConst339));
		fConst348 = (1.0f / (0.689621364484675f + ((0.512478641889141f + fConst343) / fConst339)));
		fConst349 = (2 * (0.24529150870616f - fConst341));
		fConst350 = (0.24529150870616f + ((fConst343 - 0.782413046821645f) / fConst339));
		fConst351 = (1.0f / (0.24529150870616f + ((0.782413046821645f + fConst343) / fConst339)));
		fConst352 = tanf((39895.73986531205f / float(iConst0)));
		fConst353 = faustpower<2>(fConst352);
		fConst354 = (1.0f / fConst353);
		fConst355 = (2 * (1.069358407707312f - fConst354));
		fConst356 = (1.0f / fConst352);
		fConst357 = (1.069358407707312f + ((fConst356 - 0.168404871113589f) / fConst352));
		fConst358 = (1.0f / (1.069358407707312f + ((0.168404871113589f + fConst356) / fConst352)));
		fConst359 = (2 * (0.689621364484675f - fConst354));
		fConst360 = (0.689621364484675f + ((fConst356 - 0.512478641889141f) / fConst352));
		fConst361 = (1.0f / (0.689621364484675f + ((0.512478641889141f + fConst356) / fConst352)));
		fConst362 = (2 * (0.24529150870616f - fConst354));
		fConst363 = (0.24529150870616f + ((fConst356 - 0.782413046821645f) / fConst352));
		fConst364 = (1.0f / (0.24529150870616f + ((0.782413046821645f + fConst356) / fConst352)));
		fConst365 = tanf((50265.48245743669f / float(iConst0)));
		fConst366 = faustpower<2>(fConst365);
		fConst367 = (1.0f / fConst366);
		fConst368 = (2 * (1.069358407707312f - fConst367));
		fConst369 = (1.0f / fConst365);
		fConst370 = (1.069358407707312f + ((fConst369 - 0.168404871113589f) / fConst365));
		fConst371 = (1.0f / (1.069358407707312f + ((0.168404871113589f + fConst369) / fConst365)));
		fConst372 = (2 * (0.689621364484675f - fConst367));
		fConst373 = (0.689621364484675f + ((fConst369 - 0.512478641889141f) / fConst365));
		fConst374 = (1.0f / (0.689621364484675f + ((0.512478641889141f + fConst369) / fConst365)));
		fConst375 = (2 * (0.24529150870616f - fConst367));
		fConst376 = (0.24529150870616f + ((fConst369 - 0.782413046821645f) / fConst365));
		fConst377 = (1.0f / (0.24529150870616f + ((0.782413046821645f + fConst369) / fConst365)));
		for (int i=0; i<3; i++) fRec87[i] = 0;
		fConst378 = (9.9999997055e-05f / fConst366);
		fConst379 = (0.000433227200555f + fConst378);
		fConst380 = (2 * (0.000433227200555f - fConst378));
		for (int i=0; i<3; i++) fRec86[i] = 0;
		fConst381 = (7.621731298870603f + fConst367);
		fConst382 = (2 * (7.621731298870603f - fConst367));
		for (int i=0; i<3; i++) fRec85[i] = 0;
		fConst383 = (53.53615295455673f + fConst367);
		fConst384 = (2 * (53.53615295455673f - fConst367));
		for (int i=0; i<3; i++) fRec84[i] = 0;
		fConst385 = (9.9999997055e-05f / fConst353);
		fConst386 = (0.000433227200555f + fConst385);
		fConst387 = (2 * (0.000433227200555f - fConst385));
		for (int i=0; i<3; i++) fRec83[i] = 0;
		fConst388 = (7.621731298870603f + fConst354);
		fConst389 = (2 * (7.621731298870603f - fConst354));
		for (int i=0; i<3; i++) fRec82[i] = 0;
		fConst390 = (53.53615295455673f + fConst354);
		fConst391 = (2 * (53.53615295455673f - fConst354));
		for (int i=0; i<3; i++) fRec81[i] = 0;
		fConst392 = (9.9999997055e-05f / fConst340);
		fConst393 = (0.000433227200555f + fConst392);
		fConst394 = (2 * (0.000433227200555f - fConst392));
		for (int i=0; i<3; i++) fRec80[i] = 0;
		fConst395 = (7.621731298870603f + fConst341);
		fConst396 = (2 * (7.621731298870603f - fConst341));
		for (int i=0; i<3; i++) fRec79[i] = 0;
		fConst397 = (53.53615295455673f + fConst341);
		fConst398 = (2 * (53.53615295455673f - fConst341));
		for (int i=0; i<3; i++) fRec78[i] = 0;
		fConst399 = (9.9999997055e-05f / fConst327);
		fConst400 = (0.000433227200555f + fConst399);
		fConst401 = (2 * (0.000433227200555f - fConst399));
		for (int i=0; i<3; i++) fRec77[i] = 0;
		fConst402 = (7.621731298870603f + fConst328);
		fConst403 = (2 * (7.621731298870603f - fConst328));
		for (int i=0; i<3; i++) fRec76[i] = 0;
		fConst404 = (53.53615295455673f + fConst328);
		fConst405 = (2 * (53.53615295455673f - fConst328));
		for (int i=0; i<3; i++) fRec75[i] = 0;
		fConst406 = (9.9999997055e-05f / fConst314);
		fConst407 = (0.000433227200555f + fConst406);
		fConst408 = (2 * (0.000433227200555f - fConst406));
		for (int i=0; i<3; i++) fRec74[i] = 0;
		fConst409 = (7.621731298870603f + fConst315);
		fConst410 = (2 * (7.621731298870603f - fConst315));
		for (int i=0; i<3; i++) fRec73[i] = 0;
		fConst411 = (53.53615295455673f + fConst315);
		fConst412 = (2 * (53.53615295455673f - fConst315));
		for (int i=0; i<3; i++) fRec72[i] = 0;
		fConst413 = (9.9999997055e-05f / fConst301);
		fConst414 = (0.000433227200555f + fConst413);
		fConst415 = (2 * (0.000433227200555f - fConst413));
		for (int i=0; i<3; i++) fRec71[i] = 0;
		fConst416 = (7.621731298870603f + fConst302);
		fConst417 = (2 * (7.621731298870603f - fConst302));
		for (int i=0; i<3; i++) fRec70[i] = 0;
		fConst418 = (53.53615295455673f + fConst302);
		fConst419 = (2 * (53.53615295455673f - fConst302));
		for (int i=0; i<3; i++) fRec69[i] = 0;
		fConst420 = (9.9999997055e-05f / fConst288);
		fConst421 = (0.000433227200555f + fConst420);
		fConst422 = (2 * (0.000433227200555f - fConst420));
		for (int i=0; i<3; i++) fRec68[i] = 0;
		fConst423 = (7.621731298870603f + fConst289);
		fConst424 = (2 * (7.621731298870603f - fConst289));
		for (int i=0; i<3; i++) fRec67[i] = 0;
		fConst425 = (53.53615295455673f + fConst289);
		fConst426 = (2 * (53.53615295455673f - fConst289));
		for (int i=0; i<3; i++) fRec66[i] = 0;
		fConst427 = (9.9999997055e-05f / fConst275);
		fConst428 = (0.000433227200555f + fConst427);
		fConst429 = (2 * (0.000433227200555f - fConst427));
		for (int i=0; i<3; i++) fRec65[i] = 0;
		fConst430 = (7.621731298870603f + fConst276);
		fConst431 = (2 * (7.621731298870603f - fConst276));
		for (int i=0; i<3; i++) fRec64[i] = 0;
		fConst432 = (53.53615295455673f + fConst276);
		fConst433 = (2 * (53.53615295455673f - fConst276));
		for (int i=0; i<3; i++) fRec63[i] = 0;
		fConst434 = (9.9999997055e-05f / fConst262);
		fConst435 = (0.000433227200555f + fConst434);
		fConst436 = (2 * (0.000433227200555f - fConst434));
		for (int i=0; i<3; i++) fRec62[i] = 0;
		fConst437 = (7.621731298870603f + fConst263);
		fConst438 = (2 * (7.621731298870603f - fConst263));
		for (int i=0; i<3; i++) fRec61[i] = 0;
		fConst439 = (53.53615295455673f + fConst263);
		fConst440 = (2 * (53.53615295455673f - fConst263));
		for (int i=0; i<3; i++) fRec60[i] = 0;
		fConst441 = (9.9999997055e-05f / fConst249);
		fConst442 = (0.000433227200555f + fConst441);
		fConst443 = (2 * (0.000433227200555f - fConst441));
		for (int i=0; i<3; i++) fRec59[i] = 0;
		fConst444 = (7.621731298870603f + fConst250);
		fConst445 = (2 * (7.621731298870603f - fConst250));
		for (int i=0; i<3; i++) fRec58[i] = 0;
		fConst446 = (53.53615295455673f + fConst250);
		fConst447 = (2 * (53.53615295455673f - fConst250));
		for (int i=0; i<3; i++) fRec57[i] = 0;
		fConst448 = (9.9999997055e-05f / fConst236);
		fConst449 = (0.000433227200555f + fConst448);
		fConst450 = (2 * (0.000433227200555f - fConst448));
		for (int i=0; i<3; i++) fRec56[i] = 0;
		fConst451 = (7.621731298870603f + fConst237);
		fConst452 = (2 * (7.621731298870603f - fConst237));
		for (int i=0; i<3; i++) fRec55[i] = 0;
		fConst453 = (53.53615295455673f + fConst237);
		fConst454 = (2 * (53.53615295455673f - fConst237));
		for (int i=0; i<3; i++) fRec54[i] = 0;
		fConst455 = (9.9999997055e-05f / fConst223);
		fConst456 = (0.000433227200555f + fConst455);
		fConst457 = (2 * (0.000433227200555f - fConst455));
		for (int i=0; i<3; i++) fRec53[i] = 0;
		fConst458 = (7.621731298870603f + fConst224);
		fConst459 = (2 * (7.621731298870603f - fConst224));
		for (int i=0; i<3; i++) fRec52[i] = 0;
		fConst460 = (53.53615295455673f + fConst224);
		fConst461 = (2 * (53.53615295455673f - fConst224));
		for (int i=0; i<3; i++) fRec51[i] = 0;
		fConst462 = (9.9999997055e-05f / fConst210);
		fConst463 = (0.000433227200555f + fConst462);
		fConst464 = (2 * (0.000433227200555f - fConst462));
		for (int i=0; i<3; i++) fRec50[i] = 0;
		fConst465 = (7.621731298870603f + fConst211);
		fConst466 = (2 * (7.621731298870603f - fConst211));
		for (int i=0; i<3; i++) fRec49[i] = 0;
		fConst467 = (53.53615295455673f + fConst211);
		fConst468 = (2 * (53.53615295455673f - fConst211));
		for (int i=0; i<3; i++) fRec48[i] = 0;
		fConst469 = (9.9999997055e-05f / fConst197);
		fConst470 = (0.000433227200555f + fConst469);
		fConst471 = (2 * (0.000433227200555f - fConst469));
		for (int i=0; i<3; i++) fRec47[i] = 0;
		fConst472 = (7.621731298870603f + fConst198);
		fConst473 = (2 * (7.621731298870603f - fConst198));
		for (int i=0; i<3; i++) fRec46[i] = 0;
		fConst474 = (53.53615295455673f + fConst198);
		fConst475 = (2 * (53.53615295455673f - fConst198));
		for (int i=0; i<3; i++) fRec45[i] = 0;
		fConst476 = (9.9999997055e-05f / fConst184);
		fConst477 = (0.000433227200555f + fConst476);
		fConst478 = (2 * (0.000433227200555f - fConst476));
		for (int i=0; i<3; i++) fRec44[i] = 0;
		fConst479 = (7.621731298870603f + fConst185);
		fConst480 = (2 * (7.621731298870603f - fConst185));
		for (int i=0; i<3; i++) fRec43[i] = 0;
		fConst481 = (53.53615295455673f + fConst185);
		fConst482 = (2 * (53.53615295455673f - fConst185));
		for (int i=0; i<3; i++) fRec42[i] = 0;
		fConst483 = (9.9999997055e-05f / fConst171);
		fConst484 = (0.000433227200555f + fConst483);
		fConst485 = (2 * (0.000433227200555f - fConst483));
		for (int i=0; i<3; i++) fRec41[i] = 0;
		fConst486 = (7.621731298870603f + fConst172);
		fConst487 = (2 * (7.621731298870603f - fConst172));
		for (int i=0; i<3; i++) fRec40[i] = 0;
		fConst488 = (53.53615295455673f + fConst172);
		fConst489 = (2 * (53.53615295455673f - fConst172));
		for (int i=0; i<3; i++) fRec39[i] = 0;
		fConst490 = (9.9999997055e-05f / fConst158);
		fConst491 = (0.000433227200555f + fConst490);
		fConst492 = (2 * (0.000433227200555f - fConst490));
		for (int i=0; i<3; i++) fRec38[i] = 0;
		fConst493 = (7.621731298870603f + fConst159);
		fConst494 = (2 * (7.621731298870603f - fConst159));
		for (int i=0; i<3; i++) fRec37[i] = 0;
		fConst495 = (53.53615295455673f + fConst159);
		fConst496 = (2 * (53.53615295455673f - fConst159));
		for (int i=0; i<3; i++) fRec36[i] = 0;
		fConst497 = (9.9999997055e-05f / fConst145);
		fConst498 = (0.000433227200555f + fConst497);
		fConst499 = (2 * (0.000433227200555f - fConst497));
		for (int i=0; i<3; i++) fRec35[i] = 0;
		fConst500 = (7.621731298870603f + fConst146);
		fConst501 = (2 * (7.621731298870603f - fConst146));
		for (int i=0; i<3; i++) fRec34[i] = 0;
		fConst502 = (53.53615295455673f + fConst146);
		fConst503 = (2 * (53.53615295455673f - fConst146));
		for (int i=0; i<3; i++) fRec33[i] = 0;
		fConst504 = (9.9999997055e-05f / fConst132);
		fConst505 = (0.000433227200555f + fConst504);
		fConst506 = (2 * (0.000433227200555f - fConst504));
		for (int i=0; i<3; i++) fRec32[i] = 0;
		fConst507 = (7.621731298870603f + fConst133);
		fConst508 = (2 * (7.621731298870603f - fConst133));
		for (int i=0; i<3; i++) fRec31[i] = 0;
		fConst509 = (53.53615295455673f + fConst133);
		fConst510 = (2 * (53.53615295455673f - fConst133));
		for (int i=0; i<3; i++) fRec30[i] = 0;
		fConst511 = (9.9999997055e-05f / fConst119);
		fConst512 = (0.000433227200555f + fConst511);
		fConst513 = (2 * (0.000433227200555f - fConst511));
		for (int i=0; i<3; i++) fRec29[i] = 0;
		fConst514 = (7.621731298870603f + fConst120);
		fConst515 = (2 * (7.621731298870603f - fConst120));
		for (int i=0; i<3; i++) fRec28[i] = 0;
		fConst516 = (53.53615295455673f + fConst120);
		fConst517 = (2 * (53.53615295455673f - fConst120));
		for (int i=0; i<3; i++) fRec27[i] = 0;
		fConst518 = (9.9999997055e-05f / fConst106);
		fConst519 = (0.000433227200555f + fConst518);
		fConst520 = (2 * (0.000433227200555f - fConst518));
		for (int i=0; i<3; i++) fRec26[i] = 0;
		fConst521 = (7.621731298870603f + fConst107);
		fConst522 = (2 * (7.621731298870603f - fConst107));
		for (int i=0; i<3; i++) fRec25[i] = 0;
		fConst523 = (53.53615295455673f + fConst107);
		fConst524 = (2 * (53.53615295455673f - fConst107));
		for (int i=0; i<3; i++) fRec24[i] = 0;
		fConst525 = (9.9999997055e-05f / fConst93);
		fConst526 = (0.000433227200555f + fConst525);
		fConst527 = (2 * (0.000433227200555f - fConst525));
		for (int i=0; i<3; i++) fRec23[i] = 0;
		fConst528 = (7.621731298870603f + fConst94);
		fConst529 = (2 * (7.621731298870603f - fConst94));
		for (int i=0; i<3; i++) fRec22[i] = 0;
		fConst530 = (53.53615295455673f + fConst94);
		fConst531 = (2 * (53.53615295455673f - fConst94));
		for (int i=0; i<3; i++) fRec21[i] = 0;
		fConst532 = (9.9999997055e-05f / fConst80);
		fConst533 = (0.000433227200555f + fConst532);
		fConst534 = (2 * (0.000433227200555f - fConst532));
		for (int i=0; i<3; i++) fRec20[i] = 0;
		fConst535 = (7.621731298870603f + fConst81);
		fConst536 = (2 * (7.621731298870603f - fConst81));
		for (int i=0; i<3; i++) fRec19[i] = 0;
		fConst537 = (53.53615295455673f + fConst81);
		fConst538 = (2 * (53.53615295455673f - fConst81));
		for (int i=0; i<3; i++) fRec18[i] = 0;
		fConst539 = (9.9999997055e-05f / fConst67);
		fConst540 = (0.000433227200555f + fConst539);
		fConst541 = (2 * (0.000433227200555f - fConst539));
		for (int i=0; i<3; i++) fRec17[i] = 0;
		fConst542 = (7.621731298870603f + fConst68);
		fConst543 = (2 * (7.621731298870603f - fConst68));
		for (int i=0; i<3; i++) fRec16[i] = 0;
		fConst544 = (53.53615295455673f + fConst68);
		fConst545 = (2 * (53.53615295455673f - fConst68));
		for (int i=0; i<3; i++) fRec15[i] = 0;
		fConst546 = (9.9999997055e-05f / fConst54);
		fConst547 = (0.000433227200555f + fConst546);
		fConst548 = (2 * (0.000433227200555f - fConst546));
		for (int i=0; i<3; i++) fRec14[i] = 0;
		fConst549 = (7.621731298870603f + fConst55);
		fConst550 = (2 * (7.621731298870603f - fConst55));
		for (int i=0; i<3; i++) fRec13[i] = 0;
		fConst551 = (53.53615295455673f + fConst55);
		fConst552 = (2 * (53.53615295455673f - fConst55));
		for (int i=0; i<3; i++) fRec12[i] = 0;
		fConst553 = (9.9999997055e-05f / fConst41);
		fConst554 = (0.000433227200555f + fConst553);
		fConst555 = (2 * (0.000433227200555f - fConst553));
		for (int i=0; i<3; i++) fRec11[i] = 0;
		fConst556 = (7.621731298870603f + fConst42);
		fConst557 = (2 * (7.621731298870603f - fConst42));
		for (int i=0; i<3; i++) fRec10[i] = 0;
		fConst558 = (53.53615295455673f + fConst42);
		fConst559 = (2 * (53.53615295455673f - fConst42));
		for (int i=0; i<3; i++) fRec9[i] = 0;
		fConst560 = (9.9999997055e-05f / fConst28);
		fConst561 = (0.000433227200555f + fConst560);
		fConst562 = (2 * (0.000433227200555f - fConst560));
		for (int i=0; i<3; i++) fRec8[i] = 0;
		fConst563 = (7.621731298870603f + fConst29);
		fConst564 = (2 * (7.621731298870603f - fConst29));
		for (int i=0; i<3; i++) fRec7[i] = 0;
		fConst565 = (53.53615295455673f + fConst29);
		fConst566 = (2 * (53.53615295455673f - fConst29));
		for (int i=0; i<3; i++) fRec6[i] = 0;
		fConst567 = (9.9999997055e-05f / fConst15);
		fConst568 = (0.000433227200555f + fConst567);
		fConst569 = (2 * (0.000433227200555f - fConst567));
		for (int i=0; i<3; i++) fRec5[i] = 0;
		fConst570 = (7.621731298870603f + fConst16);
		fConst571 = (2 * (7.621731298870603f - fConst16));
		for (int i=0; i<3; i++) fRec4[i] = 0;
		fConst572 = (53.53615295455673f + fConst16);
		fConst573 = (2 * (53.53615295455673f - fConst16));
		for (int i=0; i<3; i++) fRec3[i] = 0;
		fConst574 = (9.9999997055e-05f / fConst2);
		fConst575 = (0.000433227200555f + fConst574);
		fConst576 = (2 * (0.000433227200555f - fConst574));
		for (int i=0; i<3; i++) fRec2[i] = 0;
		fConst577 = (7.621731298870603f + fConst3);
		fConst578 = (2 * (7.621731298870603f - fConst3));
		for (int i=0; i<3; i++) fRec1[i] = 0;
		fConst579 = (53.53615295455673f + fConst3);
		fConst580 = (2 * (53.53615295455673f - fConst3));
		fslider0 = 1e+02f;
		fConst581 = (1e+03f / float(iConst0));
		for (int i=0; i<2; i++) fRec0[i] = 0;
		fslider1 = 5e+01f;
		fConst582 = (2 * (0.9351401670315425f - fConst3));
		fConst583 = (0.9351401670315425f + ((fConst5 - 0.157482159302087f) / fConst1));
		fConst584 = (1.0f / (0.9351401670315425f + ((fConst5 + 0.157482159302087f) / fConst1)));
		fConst585 = (2 * (1.450071084655647f - fConst3));
		fConst586 = (1.450071084655647f + ((fConst5 - 0.7431304601070396f) / fConst1));
		fConst587 = (1.0f / (1.450071084655647f + ((fConst5 + 0.7431304601070396f) / fConst1)));
		fConst588 = (2 * (4.076781969643807f - fConst3));
		fConst589 = (4.076781969643807f + ((fConst5 - 3.1897274020965583f) / fConst1));
		fConst590 = (1.0f / (4.076781969643807f + ((fConst5 + 3.1897274020965583f) / fConst1)));
		for (int i=0; i<3; i++) fRec91[i] = 0;
		fConst591 = (0.0017661728399818856f / fConst2);
		fConst592 = (0.00040767818495825777f + fConst591);
		fConst593 = (2 * (0.00040767818495825777f - fConst591));
		for (int i=0; i<3; i++) fRec90[i] = 0;
		fConst594 = (11.052052171507189f / fConst2);
		fConst595 = (1.450071084655647f + fConst594);
		fConst596 = (2 * (1.450071084655647f - fConst594));
		for (int i=0; i<3; i++) fRec89[i] = 0;
		fConst597 = (50.063807016150385f / fConst2);
		fConst598 = (0.9351401670315425f + fConst597);
		fConst599 = (2 * (0.9351401670315425f - fConst597));
		for (int i=0; i<2; i++) fRec88[i] = 0;
		fConst600 = (2 * (0.9351401670315425f - fConst16));
		fConst601 = (0.9351401670315425f + ((fConst18 - 0.157482159302087f) / fConst14));
		fConst602 = (1.0f / (0.9351401670315425f + ((0.157482159302087f + fConst18) / fConst14)));
		fConst603 = (2 * (1.450071084655647f - fConst16));
		fConst604 = (1.450071084655647f + ((fConst18 - 0.7431304601070396f) / fConst14));
		fConst605 = (1.0f / (1.450071084655647f + ((0.7431304601070396f + fConst18) / fConst14)));
		fConst606 = (2 * (4.076781969643807f - fConst16));
		fConst607 = (4.076781969643807f + ((fConst18 - 3.1897274020965583f) / fConst14));
		fConst608 = (1.0f / (4.076781969643807f + ((3.1897274020965583f + fConst18) / fConst14)));
		for (int i=0; i<3; i++) fRec95[i] = 0;
		fConst609 = (0.0017661728399818856f / fConst15);
		fConst610 = (0.00040767818495825777f + fConst609);
		fConst611 = (2 * (0.00040767818495825777f - fConst609));
		for (int i=0; i<3; i++) fRec94[i] = 0;
		fConst612 = (11.052052171507189f / fConst15);
		fConst613 = (1.450071084655647f + fConst612);
		fConst614 = (2 * (1.450071084655647f - fConst612));
		for (int i=0; i<3; i++) fRec93[i] = 0;
		fConst615 = (50.063807016150385f / fConst15);
		fConst616 = (0.9351401670315425f + fConst615);
		fConst617 = (2 * (0.9351401670315425f - fConst615));
		for (int i=0; i<2; i++) fRec92[i] = 0;
		fConst618 = (2 * (0.9351401670315425f - fConst29));
		fConst619 = (0.9351401670315425f + ((fConst31 - 0.157482159302087f) / fConst27));
		fConst620 = (1.0f / (0.9351401670315425f + ((0.157482159302087f + fConst31) / fConst27)));
		fConst621 = (2 * (1.450071084655647f - fConst29));
		fConst622 = (1.450071084655647f + ((fConst31 - 0.7431304601070396f) / fConst27));
		fConst623 = (1.0f / (1.450071084655647f + ((0.7431304601070396f + fConst31) / fConst27)));
		fConst624 = (2 * (4.076781969643807f - fConst29));
		fConst625 = (4.076781969643807f + ((fConst31 - 3.1897274020965583f) / fConst27));
		fConst626 = (1.0f / (4.076781969643807f + ((3.1897274020965583f + fConst31) / fConst27)));
		for (int i=0; i<3; i++) fRec99[i] = 0;
		fConst627 = (0.0017661728399818856f / fConst28);
		fConst628 = (0.00040767818495825777f + fConst627);
		fConst629 = (2 * (0.00040767818495825777f - fConst627));
		for (int i=0; i<3; i++) fRec98[i] = 0;
		fConst630 = (11.052052171507189f / fConst28);
		fConst631 = (1.450071084655647f + fConst630);
		fConst632 = (2 * (1.450071084655647f - fConst630));
		for (int i=0; i<3; i++) fRec97[i] = 0;
		fConst633 = (50.063807016150385f / fConst28);
		fConst634 = (0.9351401670315425f + fConst633);
		fConst635 = (2 * (0.9351401670315425f - fConst633));
		for (int i=0; i<2; i++) fRec96[i] = 0;
		fConst636 = (2 * (0.9351401670315425f - fConst42));
		fConst637 = (0.9351401670315425f + ((fConst44 - 0.157482159302087f) / fConst40));
		fConst638 = (1.0f / (0.9351401670315425f + ((0.157482159302087f + fConst44) / fConst40)));
		fConst639 = (2 * (1.450071084655647f - fConst42));
		fConst640 = (1.450071084655647f + ((fConst44 - 0.7431304601070396f) / fConst40));
		fConst641 = (1.0f / (1.450071084655647f + ((0.7431304601070396f + fConst44) / fConst40)));
		fConst642 = (2 * (4.076781969643807f - fConst42));
		fConst643 = (4.076781969643807f + ((fConst44 - 3.1897274020965583f) / fConst40));
		fConst644 = (1.0f / (4.076781969643807f + ((3.1897274020965583f + fConst44) / fConst40)));
		for (int i=0; i<3; i++) fRec103[i] = 0;
		fConst645 = (0.0017661728399818856f / fConst41);
		fConst646 = (0.00040767818495825777f + fConst645);
		fConst647 = (2 * (0.00040767818495825777f - fConst645));
		for (int i=0; i<3; i++) fRec102[i] = 0;
		fConst648 = (11.052052171507189f / fConst41);
		fConst649 = (1.450071084655647f + fConst648);
		fConst650 = (2 * (1.450071084655647f - fConst648));
		for (int i=0; i<3; i++) fRec101[i] = 0;
		fConst651 = (50.063807016150385f / fConst41);
		fConst652 = (0.9351401670315425f + fConst651);
		fConst653 = (2 * (0.9351401670315425f - fConst651));
		for (int i=0; i<2; i++) fRec100[i] = 0;
		fConst654 = (2 * (0.9351401670315425f - fConst55));
		fConst655 = (0.9351401670315425f + ((fConst57 - 0.157482159302087f) / fConst53));
		fConst656 = (1.0f / (0.9351401670315425f + ((0.157482159302087f + fConst57) / fConst53)));
		fConst657 = (2 * (1.450071084655647f - fConst55));
		fConst658 = (1.450071084655647f + ((fConst57 - 0.7431304601070396f) / fConst53));
		fConst659 = (1.0f / (1.450071084655647f + ((0.7431304601070396f + fConst57) / fConst53)));
		fConst660 = (2 * (4.076781969643807f - fConst55));
		fConst661 = (4.076781969643807f + ((fConst57 - 3.1897274020965583f) / fConst53));
		fConst662 = (1.0f / (4.076781969643807f + ((3.1897274020965583f + fConst57) / fConst53)));
		for (int i=0; i<3; i++) fRec107[i] = 0;
		fConst663 = (0.0017661728399818856f / fConst54);
		fConst664 = (0.00040767818495825777f + fConst663);
		fConst665 = (2 * (0.00040767818495825777f - fConst663));
		for (int i=0; i<3; i++) fRec106[i] = 0;
		fConst666 = (11.052052171507189f / fConst54);
		fConst667 = (1.450071084655647f + fConst666);
		fConst668 = (2 * (1.450071084655647f - fConst666));
		for (int i=0; i<3; i++) fRec105[i] = 0;
		fConst669 = (50.063807016150385f / fConst54);
		fConst670 = (0.9351401670315425f + fConst669);
		fConst671 = (2 * (0.9351401670315425f - fConst669));
		for (int i=0; i<2; i++) fRec104[i] = 0;
		fConst672 = (2 * (0.9351401670315425f - fConst68));
		fConst673 = (0.9351401670315425f + ((fConst70 - 0.157482159302087f) / fConst66));
		fConst674 = (1.0f / (0.9351401670315425f + ((0.157482159302087f + fConst70) / fConst66)));
		fConst675 = (2 * (1.450071084655647f - fConst68));
		fConst676 = (1.450071084655647f + ((fConst70 - 0.7431304601070396f) / fConst66));
		fConst677 = (1.0f / (1.450071084655647f + ((0.7431304601070396f + fConst70) / fConst66)));
		fConst678 = (2 * (4.076781969643807f - fConst68));
		fConst679 = (4.076781969643807f + ((fConst70 - 3.1897274020965583f) / fConst66));
		fConst680 = (1.0f / (4.076781969643807f + ((3.1897274020965583f + fConst70) / fConst66)));
		for (int i=0; i<3; i++) fRec111[i] = 0;
		fConst681 = (0.0017661728399818856f / fConst67);
		fConst682 = (0.00040767818495825777f + fConst681);
		fConst683 = (2 * (0.00040767818495825777f - fConst681));
		for (int i=0; i<3; i++) fRec110[i] = 0;
		fConst684 = (11.052052171507189f / fConst67);
		fConst685 = (1.450071084655647f + fConst684);
		fConst686 = (2 * (1.450071084655647f - fConst684));
		for (int i=0; i<3; i++) fRec109[i] = 0;
		fConst687 = (50.063807016150385f / fConst67);
		fConst688 = (0.9351401670315425f + fConst687);
		fConst689 = (2 * (0.9351401670315425f - fConst687));
		for (int i=0; i<2; i++) fRec108[i] = 0;
		fConst690 = (2 * (0.9351401670315425f - fConst81));
		fConst691 = (0.9351401670315425f + ((fConst83 - 0.157482159302087f) / fConst79));
		fConst692 = (1.0f / (0.9351401670315425f + ((0.157482159302087f + fConst83) / fConst79)));
		fConst693 = (2 * (1.450071084655647f - fConst81));
		fConst694 = (1.450071084655647f + ((fConst83 - 0.7431304601070396f) / fConst79));
		fConst695 = (1.0f / (1.450071084655647f + ((0.7431304601070396f + fConst83) / fConst79)));
		fConst696 = (2 * (4.076781969643807f - fConst81));
		fConst697 = (4.076781969643807f + ((fConst83 - 3.1897274020965583f) / fConst79));
		fConst698 = (1.0f / (4.076781969643807f + ((3.1897274020965583f + fConst83) / fConst79)));
		for (int i=0; i<3; i++) fRec115[i] = 0;
		fConst699 = (0.0017661728399818856f / fConst80);
		fConst700 = (0.00040767818495825777f + fConst699);
		fConst701 = (2 * (0.00040767818495825777f - fConst699));
		for (int i=0; i<3; i++) fRec114[i] = 0;
		fConst702 = (11.052052171507189f / fConst80);
		fConst703 = (1.450071084655647f + fConst702);
		fConst704 = (2 * (1.450071084655647f - fConst702));
		for (int i=0; i<3; i++) fRec113[i] = 0;
		fConst705 = (50.063807016150385f / fConst80);
		fConst706 = (0.9351401670315425f + fConst705);
		fConst707 = (2 * (0.9351401670315425f - fConst705));
		for (int i=0; i<2; i++) fRec112[i] = 0;
		fConst708 = (2 * (0.9351401670315425f - fConst94));
		fConst709 = (0.9351401670315425f + ((fConst96 - 0.157482159302087f) / fConst92));
		fConst710 = (1.0f / (0.9351401670315425f + ((0.157482159302087f + fConst96) / fConst92)));
		fConst711 = (2 * (1.450071084655647f - fConst94));
		fConst712 = (1.450071084655647f + ((fConst96 - 0.7431304601070396f) / fConst92));
		fConst713 = (1.0f / (1.450071084655647f + ((0.7431304601070396f + fConst96) / fConst92)));
		fConst714 = (2 * (4.076781969643807f - fConst94));
		fConst715 = (4.076781969643807f + ((fConst96 - 3.1897274020965583f) / fConst92));
		fConst716 = (1.0f / (4.076781969643807f + ((3.1897274020965583f + fConst96) / fConst92)));
		for (int i=0; i<3; i++) fRec119[i] = 0;
		fConst717 = (0.0017661728399818856f / fConst93);
		fConst718 = (0.00040767818495825777f + fConst717);
		fConst719 = (2 * (0.00040767818495825777f - fConst717));
		for (int i=0; i<3; i++) fRec118[i] = 0;
		fConst720 = (11.052052171507189f / fConst93);
		fConst721 = (1.450071084655647f + fConst720);
		fConst722 = (2 * (1.450071084655647f - fConst720));
		for (int i=0; i<3; i++) fRec117[i] = 0;
		fConst723 = (50.063807016150385f / fConst93);
		fConst724 = (0.9351401670315425f + fConst723);
		fConst725 = (2 * (0.9351401670315425f - fConst723));
		for (int i=0; i<2; i++) fRec116[i] = 0;
		fConst726 = (2 * (0.9351401670315425f - fConst107));
		fConst727 = (0.9351401670315425f + ((fConst109 - 0.157482159302087f) / fConst105));
		fConst728 = (1.0f / (0.9351401670315425f + ((0.157482159302087f + fConst109) / fConst105)));
		fConst729 = (2 * (1.450071084655647f - fConst107));
		fConst730 = (1.450071084655647f + ((fConst109 - 0.7431304601070396f) / fConst105));
		fConst731 = (1.0f / (1.450071084655647f + ((0.7431304601070396f + fConst109) / fConst105)));
		fConst732 = (2 * (4.076781969643807f - fConst107));
		fConst733 = (4.076781969643807f + ((fConst109 - 3.1897274020965583f) / fConst105));
		fConst734 = (1.0f / (4.076781969643807f + ((3.1897274020965583f + fConst109) / fConst105)));
		for (int i=0; i<3; i++) fRec123[i] = 0;
		fConst735 = (0.0017661728399818856f / fConst106);
		fConst736 = (0.00040767818495825777f + fConst735);
		fConst737 = (2 * (0.00040767818495825777f - fConst735));
		for (int i=0; i<3; i++) fRec122[i] = 0;
		fConst738 = (11.052052171507189f / fConst106);
		fConst739 = (1.450071084655647f + fConst738);
		fConst740 = (2 * (1.450071084655647f - fConst738));
		for (int i=0; i<3; i++) fRec121[i] = 0;
		fConst741 = (50.063807016150385f / fConst106);
		fConst742 = (0.9351401670315425f + fConst741);
		fConst743 = (2 * (0.9351401670315425f - fConst741));
		for (int i=0; i<2; i++) fRec120[i] = 0;
		fConst744 = (2 * (0.9351401670315425f - fConst120));
		fConst745 = (0.9351401670315425f + ((fConst122 - 0.157482159302087f) / fConst118));
		fConst746 = (1.0f / (0.9351401670315425f + ((0.157482159302087f + fConst122) / fConst118)));
		fConst747 = (2 * (1.450071084655647f - fConst120));
		fConst748 = (1.450071084655647f + ((fConst122 - 0.7431304601070396f) / fConst118));
		fConst749 = (1.0f / (1.450071084655647f + ((0.7431304601070396f + fConst122) / fConst118)));
		fConst750 = (2 * (4.076781969643807f - fConst120));
		fConst751 = (4.076781969643807f + ((fConst122 - 3.1897274020965583f) / fConst118));
		fConst752 = (1.0f / (4.076781969643807f + ((3.1897274020965583f + fConst122) / fConst118)));
		for (int i=0; i<3; i++) fRec127[i] = 0;
		fConst753 = (0.0017661728399818856f / fConst119);
		fConst754 = (0.00040767818495825777f + fConst753);
		fConst755 = (2 * (0.00040767818495825777f - fConst753));
		for (int i=0; i<3; i++) fRec126[i] = 0;
		fConst756 = (11.052052171507189f / fConst119);
		fConst757 = (1.450071084655647f + fConst756);
		fConst758 = (2 * (1.450071084655647f - fConst756));
		for (int i=0; i<3; i++) fRec125[i] = 0;
		fConst759 = (50.063807016150385f / fConst119);
		fConst760 = (0.9351401670315425f + fConst759);
		fConst761 = (2 * (0.9351401670315425f - fConst759));
		for (int i=0; i<2; i++) fRec124[i] = 0;
		fConst762 = (2 * (0.9351401670315425f - fConst133));
		fConst763 = (0.9351401670315425f + ((fConst135 - 0.157482159302087f) / fConst131));
		fConst764 = (1.0f / (0.9351401670315425f + ((0.157482159302087f + fConst135) / fConst131)));
		fConst765 = (2 * (1.450071084655647f - fConst133));
		fConst766 = (1.450071084655647f + ((fConst135 - 0.7431304601070396f) / fConst131));
		fConst767 = (1.0f / (1.450071084655647f + ((0.7431304601070396f + fConst135) / fConst131)));
		fConst768 = (2 * (4.076781969643807f - fConst133));
		fConst769 = (4.076781969643807f + ((fConst135 - 3.1897274020965583f) / fConst131));
		fConst770 = (1.0f / (4.076781969643807f + ((3.1897274020965583f + fConst135) / fConst131)));
		for (int i=0; i<3; i++) fRec131[i] = 0;
		fConst771 = (0.0017661728399818856f / fConst132);
		fConst772 = (0.00040767818495825777f + fConst771);
		fConst773 = (2 * (0.00040767818495825777f - fConst771));
		for (int i=0; i<3; i++) fRec130[i] = 0;
		fConst774 = (11.052052171507189f / fConst132);
		fConst775 = (1.450071084655647f + fConst774);
		fConst776 = (2 * (1.450071084655647f - fConst774));
		for (int i=0; i<3; i++) fRec129[i] = 0;
		fConst777 = (50.063807016150385f / fConst132);
		fConst778 = (0.9351401670315425f + fConst777);
		fConst779 = (2 * (0.9351401670315425f - fConst777));
		for (int i=0; i<2; i++) fRec128[i] = 0;
		fConst780 = (2 * (0.9351401670315425f - fConst146));
		fConst781 = (0.9351401670315425f + ((fConst148 - 0.157482159302087f) / fConst144));
		fConst782 = (1.0f / (0.9351401670315425f + ((0.157482159302087f + fConst148) / fConst144)));
		fConst783 = (2 * (1.450071084655647f - fConst146));
		fConst784 = (1.450071084655647f + ((fConst148 - 0.7431304601070396f) / fConst144));
		fConst785 = (1.0f / (1.450071084655647f + ((0.7431304601070396f + fConst148) / fConst144)));
		fConst786 = (2 * (4.076781969643807f - fConst146));
		fConst787 = (4.076781969643807f + ((fConst148 - 3.1897274020965583f) / fConst144));
		fConst788 = (1.0f / (4.076781969643807f + ((3.1897274020965583f + fConst148) / fConst144)));
		for (int i=0; i<3; i++) fRec135[i] = 0;
		fConst789 = (0.0017661728399818856f / fConst145);
		fConst790 = (0.00040767818495825777f + fConst789);
		fConst791 = (2 * (0.00040767818495825777f - fConst789));
		for (int i=0; i<3; i++) fRec134[i] = 0;
		fConst792 = (11.052052171507189f / fConst145);
		fConst793 = (1.450071084655647f + fConst792);
		fConst794 = (2 * (1.450071084655647f - fConst792));
		for (int i=0; i<3; i++) fRec133[i] = 0;
		fConst795 = (50.063807016150385f / fConst145);
		fConst796 = (0.9351401670315425f + fConst795);
		fConst797 = (2 * (0.9351401670315425f - fConst795));
		for (int i=0; i<2; i++) fRec132[i] = 0;
		fConst798 = (2 * (0.9351401670315425f - fConst159));
		fConst799 = (0.9351401670315425f + ((fConst161 - 0.157482159302087f) / fConst157));
		fConst800 = (1.0f / (0.9351401670315425f + ((0.157482159302087f + fConst161) / fConst157)));
		fConst801 = (2 * (1.450071084655647f - fConst159));
		fConst802 = (1.450071084655647f + ((fConst161 - 0.7431304601070396f) / fConst157));
		fConst803 = (1.0f / (1.450071084655647f + ((0.7431304601070396f + fConst161) / fConst157)));
		fConst804 = (2 * (4.076781969643807f - fConst159));
		fConst805 = (4.076781969643807f + ((fConst161 - 3.1897274020965583f) / fConst157));
		fConst806 = (1.0f / (4.076781969643807f + ((3.1897274020965583f + fConst161) / fConst157)));
		for (int i=0; i<3; i++) fRec139[i] = 0;
		fConst807 = (0.0017661728399818856f / fConst158);
		fConst808 = (0.00040767818495825777f + fConst807);
		fConst809 = (2 * (0.00040767818495825777f - fConst807));
		for (int i=0; i<3; i++) fRec138[i] = 0;
		fConst810 = (11.052052171507189f / fConst158);
		fConst811 = (1.450071084655647f + fConst810);
		fConst812 = (2 * (1.450071084655647f - fConst810));
		for (int i=0; i<3; i++) fRec137[i] = 0;
		fConst813 = (50.063807016150385f / fConst158);
		fConst814 = (0.9351401670315425f + fConst813);
		fConst815 = (2 * (0.9351401670315425f - fConst813));
		for (int i=0; i<2; i++) fRec136[i] = 0;
		fConst816 = (2 * (0.9351401670315425f - fConst172));
		fConst817 = (0.9351401670315425f + ((fConst174 - 0.157482159302087f) / fConst170));
		fConst818 = (1.0f / (0.9351401670315425f + ((0.157482159302087f + fConst174) / fConst170)));
		fConst819 = (2 * (1.450071084655647f - fConst172));
		fConst820 = (1.450071084655647f + ((fConst174 - 0.7431304601070396f) / fConst170));
		fConst821 = (1.0f / (1.450071084655647f + ((0.7431304601070396f + fConst174) / fConst170)));
		fConst822 = (2 * (4.076781969643807f - fConst172));
		fConst823 = (4.076781969643807f + ((fConst174 - 3.1897274020965583f) / fConst170));
		fConst824 = (1.0f / (4.076781969643807f + ((3.1897274020965583f + fConst174) / fConst170)));
		for (int i=0; i<3; i++) fRec143[i] = 0;
		fConst825 = (0.0017661728399818856f / fConst171);
		fConst826 = (0.00040767818495825777f + fConst825);
		fConst827 = (2 * (0.00040767818495825777f - fConst825));
		for (int i=0; i<3; i++) fRec142[i] = 0;
		fConst828 = (11.052052171507189f / fConst171);
		fConst829 = (1.450071084655647f + fConst828);
		fConst830 = (2 * (1.450071084655647f - fConst828));
		for (int i=0; i<3; i++) fRec141[i] = 0;
		fConst831 = (50.063807016150385f / fConst171);
		fConst832 = (0.9351401670315425f + fConst831);
		fConst833 = (2 * (0.9351401670315425f - fConst831));
		for (int i=0; i<2; i++) fRec140[i] = 0;
		fConst834 = (2 * (0.9351401670315425f - fConst185));
		fConst835 = (0.9351401670315425f + ((fConst187 - 0.157482159302087f) / fConst183));
		fConst836 = (1.0f / (0.9351401670315425f + ((0.157482159302087f + fConst187) / fConst183)));
		fConst837 = (2 * (1.450071084655647f - fConst185));
		fConst838 = (1.450071084655647f + ((fConst187 - 0.7431304601070396f) / fConst183));
		fConst839 = (1.0f / (1.450071084655647f + ((0.7431304601070396f + fConst187) / fConst183)));
		fConst840 = (2 * (4.076781969643807f - fConst185));
		fConst841 = (4.076781969643807f + ((fConst187 - 3.1897274020965583f) / fConst183));
		fConst842 = (1.0f / (4.076781969643807f + ((3.1897274020965583f + fConst187) / fConst183)));
		for (int i=0; i<3; i++) fRec147[i] = 0;
		fConst843 = (0.0017661728399818856f / fConst184);
		fConst844 = (0.00040767818495825777f + fConst843);
		fConst845 = (2 * (0.00040767818495825777f - fConst843));
		for (int i=0; i<3; i++) fRec146[i] = 0;
		fConst846 = (11.052052171507189f / fConst184);
		fConst847 = (1.450071084655647f + fConst846);
		fConst848 = (2 * (1.450071084655647f - fConst846));
		for (int i=0; i<3; i++) fRec145[i] = 0;
		fConst849 = (50.063807016150385f / fConst184);
		fConst850 = (0.9351401670315425f + fConst849);
		fConst851 = (2 * (0.9351401670315425f - fConst849));
		for (int i=0; i<2; i++) fRec144[i] = 0;
		fConst852 = (2 * (0.9351401670315425f - fConst198));
		fConst853 = (0.9351401670315425f + ((fConst200 - 0.157482159302087f) / fConst196));
		fConst854 = (1.0f / (0.9351401670315425f + ((0.157482159302087f + fConst200) / fConst196)));
		fConst855 = (2 * (1.450071084655647f - fConst198));
		fConst856 = (1.450071084655647f + ((fConst200 - 0.7431304601070396f) / fConst196));
		fConst857 = (1.0f / (1.450071084655647f + ((0.7431304601070396f + fConst200) / fConst196)));
		fConst858 = (2 * (4.076781969643807f - fConst198));
		fConst859 = (4.076781969643807f + ((fConst200 - 3.1897274020965583f) / fConst196));
		fConst860 = (1.0f / (4.076781969643807f + ((3.1897274020965583f + fConst200) / fConst196)));
		for (int i=0; i<3; i++) fRec151[i] = 0;
		fConst861 = (0.0017661728399818856f / fConst197);
		fConst862 = (0.00040767818495825777f + fConst861);
		fConst863 = (2 * (0.00040767818495825777f - fConst861));
		for (int i=0; i<3; i++) fRec150[i] = 0;
		fConst864 = (11.052052171507189f / fConst197);
		fConst865 = (1.450071084655647f + fConst864);
		fConst866 = (2 * (1.450071084655647f - fConst864));
		for (int i=0; i<3; i++) fRec149[i] = 0;
		fConst867 = (50.063807016150385f / fConst197);
		fConst868 = (0.9351401670315425f + fConst867);
		fConst869 = (2 * (0.9351401670315425f - fConst867));
		for (int i=0; i<2; i++) fRec148[i] = 0;
		fConst870 = (2 * (0.9351401670315425f - fConst211));
		fConst871 = (0.9351401670315425f + ((fConst213 - 0.157482159302087f) / fConst209));
		fConst872 = (1.0f / (0.9351401670315425f + ((0.157482159302087f + fConst213) / fConst209)));
		fConst873 = (2 * (1.450071084655647f - fConst211));
		fConst874 = (1.450071084655647f + ((fConst213 - 0.7431304601070396f) / fConst209));
		fConst875 = (1.0f / (1.450071084655647f + ((0.7431304601070396f + fConst213) / fConst209)));
		fConst876 = (2 * (4.076781969643807f - fConst211));
		fConst877 = (4.076781969643807f + ((fConst213 - 3.1897274020965583f) / fConst209));
		fConst878 = (1.0f / (4.076781969643807f + ((3.1897274020965583f + fConst213) / fConst209)));
		for (int i=0; i<3; i++) fRec155[i] = 0;
		fConst879 = (0.0017661728399818856f / fConst210);
		fConst880 = (0.00040767818495825777f + fConst879);
		fConst881 = (2 * (0.00040767818495825777f - fConst879));
		for (int i=0; i<3; i++) fRec154[i] = 0;
		fConst882 = (11.052052171507189f / fConst210);
		fConst883 = (1.450071084655647f + fConst882);
		fConst884 = (2 * (1.450071084655647f - fConst882));
		for (int i=0; i<3; i++) fRec153[i] = 0;
		fConst885 = (50.063807016150385f / fConst210);
		fConst886 = (0.9351401670315425f + fConst885);
		fConst887 = (2 * (0.9351401670315425f - fConst885));
		for (int i=0; i<2; i++) fRec152[i] = 0;
		fConst888 = (2 * (0.9351401670315425f - fConst224));
		fConst889 = (0.9351401670315425f + ((fConst226 - 0.157482159302087f) / fConst222));
		fConst890 = (1.0f / (0.9351401670315425f + ((0.157482159302087f + fConst226) / fConst222)));
		fConst891 = (2 * (1.450071084655647f - fConst224));
		fConst892 = (1.450071084655647f + ((fConst226 - 0.7431304601070396f) / fConst222));
		fConst893 = (1.0f / (1.450071084655647f + ((0.7431304601070396f + fConst226) / fConst222)));
		fConst894 = (2 * (4.076781969643807f - fConst224));
		fConst895 = (4.076781969643807f + ((fConst226 - 3.1897274020965583f) / fConst222));
		fConst896 = (1.0f / (4.076781969643807f + ((3.1897274020965583f + fConst226) / fConst222)));
		for (int i=0; i<3; i++) fRec159[i] = 0;
		fConst897 = (0.0017661728399818856f / fConst223);
		fConst898 = (0.00040767818495825777f + fConst897);
		fConst899 = (2 * (0.00040767818495825777f - fConst897));
		for (int i=0; i<3; i++) fRec158[i] = 0;
		fConst900 = (11.052052171507189f / fConst223);
		fConst901 = (1.450071084655647f + fConst900);
		fConst902 = (2 * (1.450071084655647f - fConst900));
		for (int i=0; i<3; i++) fRec157[i] = 0;
		fConst903 = (50.063807016150385f / fConst223);
		fConst904 = (0.9351401670315425f + fConst903);
		fConst905 = (2 * (0.9351401670315425f - fConst903));
		for (int i=0; i<2; i++) fRec156[i] = 0;
		fConst906 = (2 * (0.9351401670315425f - fConst237));
		fConst907 = (0.9351401670315425f + ((fConst239 - 0.157482159302087f) / fConst235));
		fConst908 = (1.0f / (0.9351401670315425f + ((0.157482159302087f + fConst239) / fConst235)));
		fConst909 = (2 * (1.450071084655647f - fConst237));
		fConst910 = (1.450071084655647f + ((fConst239 - 0.7431304601070396f) / fConst235));
		fConst911 = (1.0f / (1.450071084655647f + ((0.7431304601070396f + fConst239) / fConst235)));
		fConst912 = (2 * (4.076781969643807f - fConst237));
		fConst913 = (4.076781969643807f + ((fConst239 - 3.1897274020965583f) / fConst235));
		fConst914 = (1.0f / (4.076781969643807f + ((3.1897274020965583f + fConst239) / fConst235)));
		for (int i=0; i<3; i++) fRec163[i] = 0;
		fConst915 = (0.0017661728399818856f / fConst236);
		fConst916 = (0.00040767818495825777f + fConst915);
		fConst917 = (2 * (0.00040767818495825777f - fConst915));
		for (int i=0; i<3; i++) fRec162[i] = 0;
		fConst918 = (11.052052171507189f / fConst236);
		fConst919 = (1.450071084655647f + fConst918);
		fConst920 = (2 * (1.450071084655647f - fConst918));
		for (int i=0; i<3; i++) fRec161[i] = 0;
		fConst921 = (50.063807016150385f / fConst236);
		fConst922 = (0.9351401670315425f + fConst921);
		fConst923 = (2 * (0.9351401670315425f - fConst921));
		for (int i=0; i<2; i++) fRec160[i] = 0;
		fConst924 = (2 * (0.9351401670315425f - fConst250));
		fConst925 = (0.9351401670315425f + ((fConst252 - 0.157482159302087f) / fConst248));
		fConst926 = (1.0f / (0.9351401670315425f + ((0.157482159302087f + fConst252) / fConst248)));
		fConst927 = (2 * (1.450071084655647f - fConst250));
		fConst928 = (1.450071084655647f + ((fConst252 - 0.7431304601070396f) / fConst248));
		fConst929 = (1.0f / (1.450071084655647f + ((0.7431304601070396f + fConst252) / fConst248)));
		fConst930 = (2 * (4.076781969643807f - fConst250));
		fConst931 = (4.076781969643807f + ((fConst252 - 3.1897274020965583f) / fConst248));
		fConst932 = (1.0f / (4.076781969643807f + ((3.1897274020965583f + fConst252) / fConst248)));
		for (int i=0; i<3; i++) fRec167[i] = 0;
		fConst933 = (0.0017661728399818856f / fConst249);
		fConst934 = (0.00040767818495825777f + fConst933);
		fConst935 = (2 * (0.00040767818495825777f - fConst933));
		for (int i=0; i<3; i++) fRec166[i] = 0;
		fConst936 = (11.052052171507189f / fConst249);
		fConst937 = (1.450071084655647f + fConst936);
		fConst938 = (2 * (1.450071084655647f - fConst936));
		for (int i=0; i<3; i++) fRec165[i] = 0;
		fConst939 = (50.063807016150385f / fConst249);
		fConst940 = (0.9351401670315425f + fConst939);
		fConst941 = (2 * (0.9351401670315425f - fConst939));
		for (int i=0; i<2; i++) fRec164[i] = 0;
		fConst942 = (2 * (0.9351401670315425f - fConst263));
		fConst943 = (0.9351401670315425f + ((fConst265 - 0.157482159302087f) / fConst261));
		fConst944 = (1.0f / (0.9351401670315425f + ((0.157482159302087f + fConst265) / fConst261)));
		fConst945 = (2 * (1.450071084655647f - fConst263));
		fConst946 = (1.450071084655647f + ((fConst265 - 0.7431304601070396f) / fConst261));
		fConst947 = (1.0f / (1.450071084655647f + ((0.7431304601070396f + fConst265) / fConst261)));
		fConst948 = (2 * (4.076781969643807f - fConst263));
		fConst949 = (4.076781969643807f + ((fConst265 - 3.1897274020965583f) / fConst261));
		fConst950 = (1.0f / (4.076781969643807f + ((3.1897274020965583f + fConst265) / fConst261)));
		for (int i=0; i<3; i++) fRec171[i] = 0;
		fConst951 = (0.0017661728399818856f / fConst262);
		fConst952 = (0.00040767818495825777f + fConst951);
		fConst953 = (2 * (0.00040767818495825777f - fConst951));
		for (int i=0; i<3; i++) fRec170[i] = 0;
		fConst954 = (11.052052171507189f / fConst262);
		fConst955 = (1.450071084655647f + fConst954);
		fConst956 = (2 * (1.450071084655647f - fConst954));
		for (int i=0; i<3; i++) fRec169[i] = 0;
		fConst957 = (50.063807016150385f / fConst262);
		fConst958 = (0.9351401670315425f + fConst957);
		fConst959 = (2 * (0.9351401670315425f - fConst957));
		for (int i=0; i<2; i++) fRec168[i] = 0;
		fConst960 = (2 * (0.9351401670315425f - fConst276));
		fConst961 = (0.9351401670315425f + ((fConst278 - 0.157482159302087f) / fConst274));
		fConst962 = (1.0f / (0.9351401670315425f + ((0.157482159302087f + fConst278) / fConst274)));
		fConst963 = (2 * (1.450071084655647f - fConst276));
		fConst964 = (1.450071084655647f + ((fConst278 - 0.7431304601070396f) / fConst274));
		fConst965 = (1.0f / (1.450071084655647f + ((0.7431304601070396f + fConst278) / fConst274)));
		fConst966 = (2 * (4.076781969643807f - fConst276));
		fConst967 = (4.076781969643807f + ((fConst278 - 3.1897274020965583f) / fConst274));
		fConst968 = (1.0f / (4.076781969643807f + ((3.1897274020965583f + fConst278) / fConst274)));
		for (int i=0; i<3; i++) fRec175[i] = 0;
		fConst969 = (0.0017661728399818856f / fConst275);
		fConst970 = (0.00040767818495825777f + fConst969);
		fConst971 = (2 * (0.00040767818495825777f - fConst969));
		for (int i=0; i<3; i++) fRec174[i] = 0;
		fConst972 = (11.052052171507189f / fConst275);
		fConst973 = (1.450071084655647f + fConst972);
		fConst974 = (2 * (1.450071084655647f - fConst972));
		for (int i=0; i<3; i++) fRec173[i] = 0;
		fConst975 = (50.063807016150385f / fConst275);
		fConst976 = (0.9351401670315425f + fConst975);
		fConst977 = (2 * (0.9351401670315425f - fConst975));
		for (int i=0; i<2; i++) fRec172[i] = 0;
		fConst978 = (2 * (0.9351401670315425f - fConst289));
		fConst979 = (0.9351401670315425f + ((fConst291 - 0.157482159302087f) / fConst287));
		fConst980 = (1.0f / (0.9351401670315425f + ((0.157482159302087f + fConst291) / fConst287)));
		fConst981 = (2 * (1.450071084655647f - fConst289));
		fConst982 = (1.450071084655647f + ((fConst291 - 0.7431304601070396f) / fConst287));
		fConst983 = (1.0f / (1.450071084655647f + ((0.7431304601070396f + fConst291) / fConst287)));
		fConst984 = (2 * (4.076781969643807f - fConst289));
		fConst985 = (4.076781969643807f + ((fConst291 - 3.1897274020965583f) / fConst287));
		fConst986 = (1.0f / (4.076781969643807f + ((3.1897274020965583f + fConst291) / fConst287)));
		for (int i=0; i<3; i++) fRec179[i] = 0;
		fConst987 = (0.0017661728399818856f / fConst288);
		fConst988 = (0.00040767818495825777f + fConst987);
		fConst989 = (2 * (0.00040767818495825777f - fConst987));
		for (int i=0; i<3; i++) fRec178[i] = 0;
		fConst990 = (11.052052171507189f / fConst288);
		fConst991 = (1.450071084655647f + fConst990);
		fConst992 = (2 * (1.450071084655647f - fConst990));
		for (int i=0; i<3; i++) fRec177[i] = 0;
		fConst993 = (50.063807016150385f / fConst288);
		fConst994 = (0.9351401670315425f + fConst993);
		fConst995 = (2 * (0.9351401670315425f - fConst993));
		for (int i=0; i<2; i++) fRec176[i] = 0;
		fConst996 = (2 * (0.9351401670315425f - fConst302));
		fConst997 = (0.9351401670315425f + ((fConst304 - 0.157482159302087f) / fConst300));
		fConst998 = (1.0f / (0.9351401670315425f + ((0.157482159302087f + fConst304) / fConst300)));
		fConst999 = (2 * (1.450071084655647f - fConst302));
		fConst1000 = (1.450071084655647f + ((fConst304 - 0.7431304601070396f) / fConst300));
		fConst1001 = (1.0f / (1.450071084655647f + ((0.7431304601070396f + fConst304) / fConst300)));
		fConst1002 = (2 * (4.076781969643807f - fConst302));
		fConst1003 = (4.076781969643807f + ((fConst304 - 3.1897274020965583f) / fConst300));
		fConst1004 = (1.0f / (4.076781969643807f + ((3.1897274020965583f + fConst304) / fConst300)));
		for (int i=0; i<3; i++) fRec183[i] = 0;
		fConst1005 = (0.0017661728399818856f / fConst301);
		fConst1006 = (0.00040767818495825777f + fConst1005);
		fConst1007 = (2 * (0.00040767818495825777f - fConst1005));
		for (int i=0; i<3; i++) fRec182[i] = 0;
		fConst1008 = (11.052052171507189f / fConst301);
		fConst1009 = (1.450071084655647f + fConst1008);
		fConst1010 = (2 * (1.450071084655647f - fConst1008));
		for (int i=0; i<3; i++) fRec181[i] = 0;
		fConst1011 = (50.063807016150385f / fConst301);
		fConst1012 = (0.9351401670315425f + fConst1011);
		fConst1013 = (2 * (0.9351401670315425f - fConst1011));
		for (int i=0; i<2; i++) fRec180[i] = 0;
		fConst1014 = (2 * (0.9351401670315425f - fConst315));
		fConst1015 = (0.9351401670315425f + ((fConst317 - 0.157482159302087f) / fConst313));
		fConst1016 = (1.0f / (0.9351401670315425f + ((0.157482159302087f + fConst317) / fConst313)));
		fConst1017 = (2 * (1.450071084655647f - fConst315));
		fConst1018 = (1.450071084655647f + ((fConst317 - 0.7431304601070396f) / fConst313));
		fConst1019 = (1.0f / (1.450071084655647f + ((0.7431304601070396f + fConst317) / fConst313)));
		fConst1020 = (2 * (4.076781969643807f - fConst315));
		fConst1021 = (4.076781969643807f + ((fConst317 - 3.1897274020965583f) / fConst313));
		fConst1022 = (1.0f / (4.076781969643807f + ((3.1897274020965583f + fConst317) / fConst313)));
		for (int i=0; i<3; i++) fRec187[i] = 0;
		fConst1023 = (0.0017661728399818856f / fConst314);
		fConst1024 = (0.00040767818495825777f + fConst1023);
		fConst1025 = (2 * (0.00040767818495825777f - fConst1023));
		for (int i=0; i<3; i++) fRec186[i] = 0;
		fConst1026 = (11.052052171507189f / fConst314);
		fConst1027 = (1.450071084655647f + fConst1026);
		fConst1028 = (2 * (1.450071084655647f - fConst1026));
		for (int i=0; i<3; i++) fRec185[i] = 0;
		fConst1029 = (50.063807016150385f / fConst314);
		fConst1030 = (0.9351401670315425f + fConst1029);
		fConst1031 = (2 * (0.9351401670315425f - fConst1029));
		for (int i=0; i<2; i++) fRec184[i] = 0;
		fConst1032 = (2 * (0.9351401670315425f - fConst328));
		fConst1033 = (0.9351401670315425f + ((fConst330 - 0.157482159302087f) / fConst326));
		fConst1034 = (1.0f / (0.9351401670315425f + ((0.157482159302087f + fConst330) / fConst326)));
		fConst1035 = (2 * (1.450071084655647f - fConst328));
		fConst1036 = (1.450071084655647f + ((fConst330 - 0.7431304601070396f) / fConst326));
		fConst1037 = (1.0f / (1.450071084655647f + ((0.7431304601070396f + fConst330) / fConst326)));
		fConst1038 = (2 * (4.076781969643807f - fConst328));
		fConst1039 = (4.076781969643807f + ((fConst330 - 3.1897274020965583f) / fConst326));
		fConst1040 = (1.0f / (4.076781969643807f + ((3.1897274020965583f + fConst330) / fConst326)));
		for (int i=0; i<3; i++) fRec191[i] = 0;
		fConst1041 = (0.0017661728399818856f / fConst327);
		fConst1042 = (0.00040767818495825777f + fConst1041);
		fConst1043 = (2 * (0.00040767818495825777f - fConst1041));
		for (int i=0; i<3; i++) fRec190[i] = 0;
		fConst1044 = (11.052052171507189f / fConst327);
		fConst1045 = (1.450071084655647f + fConst1044);
		fConst1046 = (2 * (1.450071084655647f - fConst1044));
		for (int i=0; i<3; i++) fRec189[i] = 0;
		fConst1047 = (50.063807016150385f / fConst327);
		fConst1048 = (0.9351401670315425f + fConst1047);
		fConst1049 = (2 * (0.9351401670315425f - fConst1047));
		for (int i=0; i<2; i++) fRec188[i] = 0;
		fConst1050 = (2 * (0.9351401670315425f - fConst341));
		fConst1051 = (0.9351401670315425f + ((fConst343 - 0.157482159302087f) / fConst339));
		fConst1052 = (1.0f / (0.9351401670315425f + ((0.157482159302087f + fConst343) / fConst339)));
		fConst1053 = (2 * (1.450071084655647f - fConst341));
		fConst1054 = (1.450071084655647f + ((fConst343 - 0.7431304601070396f) / fConst339));
		fConst1055 = (1.0f / (1.450071084655647f + ((0.7431304601070396f + fConst343) / fConst339)));
		fConst1056 = (2 * (4.076781969643807f - fConst341));
		fConst1057 = (4.076781969643807f + ((fConst343 - 3.1897274020965583f) / fConst339));
		fConst1058 = (1.0f / (4.076781969643807f + ((3.1897274020965583f + fConst343) / fConst339)));
		for (int i=0; i<3; i++) fRec195[i] = 0;
		fConst1059 = (0.0017661728399818856f / fConst340);
		fConst1060 = (0.00040767818495825777f + fConst1059);
		fConst1061 = (2 * (0.00040767818495825777f - fConst1059));
		for (int i=0; i<3; i++) fRec194[i] = 0;
		fConst1062 = (11.052052171507189f / fConst340);
		fConst1063 = (1.450071084655647f + fConst1062);
		fConst1064 = (2 * (1.450071084655647f - fConst1062));
		for (int i=0; i<3; i++) fRec193[i] = 0;
		fConst1065 = (50.063807016150385f / fConst340);
		fConst1066 = (0.9351401670315425f + fConst1065);
		fConst1067 = (2 * (0.9351401670315425f - fConst1065));
		for (int i=0; i<2; i++) fRec192[i] = 0;
		fConst1068 = (2 * (0.9351401670315425f - fConst354));
		fConst1069 = (0.9351401670315425f + ((fConst356 - 0.157482159302087f) / fConst352));
		fConst1070 = (1.0f / (0.9351401670315425f + ((0.157482159302087f + fConst356) / fConst352)));
		fConst1071 = (2 * (1.450071084655647f - fConst354));
		fConst1072 = (1.450071084655647f + ((fConst356 - 0.7431304601070396f) / fConst352));
		fConst1073 = (1.0f / (1.450071084655647f + ((0.7431304601070396f + fConst356) / fConst352)));
		fConst1074 = (2 * (4.076781969643807f - fConst354));
		fConst1075 = (4.076781969643807f + ((fConst356 - 3.1897274020965583f) / fConst352));
		fConst1076 = (1.0f / (4.076781969643807f + ((3.1897274020965583f + fConst356) / fConst352)));
		for (int i=0; i<3; i++) fRec199[i] = 0;
		fConst1077 = (0.0017661728399818856f / fConst353);
		fConst1078 = (0.00040767818495825777f + fConst1077);
		fConst1079 = (2 * (0.00040767818495825777f - fConst1077));
		for (int i=0; i<3; i++) fRec198[i] = 0;
		fConst1080 = (11.052052171507189f / fConst353);
		fConst1081 = (1.450071084655647f + fConst1080);
		fConst1082 = (2 * (1.450071084655647f - fConst1080));
		for (int i=0; i<3; i++) fRec197[i] = 0;
		fConst1083 = (50.063807016150385f / fConst353);
		fConst1084 = (0.9351401670315425f + fConst1083);
		fConst1085 = (2 * (0.9351401670315425f - fConst1083));
		for (int i=0; i<2; i++) fRec196[i] = 0;
		fConst1086 = (2 * (0.9351401670315425f - fConst367));
		fConst1087 = (0.9351401670315425f + ((fConst369 - 0.157482159302087f) / fConst365));
		fConst1088 = (1.0f / (0.9351401670315425f + ((0.157482159302087f + fConst369) / fConst365)));
		fConst1089 = (2 * (1.450071084655647f - fConst367));
		fConst1090 = (1.450071084655647f + ((fConst369 - 0.7431304601070396f) / fConst365));
		fConst1091 = (1.0f / (1.450071084655647f + ((0.7431304601070396f + fConst369) / fConst365)));
		fConst1092 = (2 * (4.076781969643807f - fConst367));
		fConst1093 = (4.076781969643807f + ((fConst369 - 3.1897274020965583f) / fConst365));
		fConst1094 = (1.0f / (4.076781969643807f + ((3.1897274020965583f + fConst369) / fConst365)));
		for (int i=0; i<3; i++) fRec203[i] = 0;
		fConst1095 = (0.0017661728399818856f / fConst366);
		fConst1096 = (0.00040767818495825777f + fConst1095);
		fConst1097 = (2 * (0.00040767818495825777f - fConst1095));
		for (int i=0; i<3; i++) fRec202[i] = 0;
		fConst1098 = (11.052052171507189f / fConst366);
		fConst1099 = (1.450071084655647f + fConst1098);
		fConst1100 = (2 * (1.450071084655647f - fConst1098));
		for (int i=0; i<3; i++) fRec201[i] = 0;
		fConst1101 = (50.063807016150385f / fConst366);
		fConst1102 = (0.9351401670315425f + fConst1101);
		fConst1103 = (2 * (0.9351401670315425f - fConst1101));
		for (int i=0; i<2; i++) fRec200[i] = 0;
	}
	virtual void init(int samplingFreq) {
		classInit(samplingFreq);
		instanceInit(samplingFreq);
	}
	virtual void buildUserInterface(UI* interface) {
		interface->openVerticalBox("0x00");
		interface->declare(0, "0", "");
		interface->declare(0, "tooltip", "See Faust's filter.lib for documentation and references");
		interface->openHorizontalBox("CONSTANT-Q SPECTRUM ANALYZER (6E), 30 bands spanning LP, 9 octaves below 16000 Hz, HP");
		interface->declare(&fbargraph0, "0", "");
		interface->declare(&fbargraph0, "tooltip", "Spectral Band Level in dB");
		interface->declare(&fbargraph0, "unit", "dB");
		interface->addVerticalBargraph("0x65150e0", &fbargraph0, -5e+01f, 1e+01f);
		interface->declare(&fbargraph1, "1", "");
		interface->declare(&fbargraph1, "tooltip", "Spectral Band Level in dB");
		interface->declare(&fbargraph1, "unit", "dB");
		interface->addVerticalBargraph("0x651e9c0", &fbargraph1, -5e+01f, 1e+01f);
		interface->declare(&fbargraph2, "2", "");
		interface->declare(&fbargraph2, "tooltip", "Spectral Band Level in dB");
		interface->declare(&fbargraph2, "unit", "dB");
		interface->addVerticalBargraph("0x6527550", &fbargraph2, -5e+01f, 1e+01f);
		interface->declare(&fbargraph3, "3", "");
		interface->declare(&fbargraph3, "tooltip", "Spectral Band Level in dB");
		interface->declare(&fbargraph3, "unit", "dB");
		interface->addVerticalBargraph("0x65306a0", &fbargraph3, -5e+01f, 1e+01f);
		interface->declare(&fbargraph4, "4", "");
		interface->declare(&fbargraph4, "tooltip", "Spectral Band Level in dB");
		interface->declare(&fbargraph4, "unit", "dB");
		interface->addVerticalBargraph("0x6539720", &fbargraph4, -5e+01f, 1e+01f);
		interface->declare(&fbargraph5, "5", "");
		interface->declare(&fbargraph5, "tooltip", "Spectral Band Level in dB");
		interface->declare(&fbargraph5, "unit", "dB");
		interface->addVerticalBargraph("0x6542580", &fbargraph5, -5e+01f, 1e+01f);
		interface->declare(&fbargraph6, "6", "");
		interface->declare(&fbargraph6, "tooltip", "Spectral Band Level in dB");
		interface->declare(&fbargraph6, "unit", "dB");
		interface->addVerticalBargraph("0x654b7e0", &fbargraph6, -5e+01f, 1e+01f);
		interface->declare(&fbargraph7, "7", "");
		interface->declare(&fbargraph7, "tooltip", "Spectral Band Level in dB");
		interface->declare(&fbargraph7, "unit", "dB");
		interface->addVerticalBargraph("0x6554c70", &fbargraph7, -5e+01f, 1e+01f);
		interface->declare(&fbargraph8, "8", "");
		interface->declare(&fbargraph8, "tooltip", "Spectral Band Level in dB");
		interface->declare(&fbargraph8, "unit", "dB");
		interface->addVerticalBargraph("0x655df00", &fbargraph8, -5e+01f, 1e+01f);
		interface->declare(&fbargraph9, "9", "");
		interface->declare(&fbargraph9, "tooltip", "Spectral Band Level in dB");
		interface->declare(&fbargraph9, "unit", "dB");
		interface->addVerticalBargraph("0x6567020", &fbargraph9, -5e+01f, 1e+01f);
		interface->declare(&fbargraph10, "10", "");
		interface->declare(&fbargraph10, "tooltip", "Spectral Band Level in dB");
		interface->declare(&fbargraph10, "unit", "dB");
		interface->addVerticalBargraph("0x65706d0", &fbargraph10, -5e+01f, 1e+01f);
		interface->declare(&fbargraph11, "11", "");
		interface->declare(&fbargraph11, "tooltip", "Spectral Band Level in dB");
		interface->declare(&fbargraph11, "unit", "dB");
		interface->addVerticalBargraph("0x6579b80", &fbargraph11, -5e+01f, 1e+01f);
		interface->declare(&fbargraph12, "12", "");
		interface->declare(&fbargraph12, "tooltip", "Spectral Band Level in dB");
		interface->declare(&fbargraph12, "unit", "dB");
		interface->addVerticalBargraph("0x6582e30", &fbargraph12, -5e+01f, 1e+01f);
		interface->declare(&fbargraph13, "13", "");
		interface->declare(&fbargraph13, "tooltip", "Spectral Band Level in dB");
		interface->declare(&fbargraph13, "unit", "dB");
		interface->addVerticalBargraph("0x658c4e0", &fbargraph13, -5e+01f, 1e+01f);
		interface->declare(&fbargraph14, "14", "");
		interface->declare(&fbargraph14, "tooltip", "Spectral Band Level in dB");
		interface->declare(&fbargraph14, "unit", "dB");
		interface->addVerticalBargraph("0x6595da0", &fbargraph14, -5e+01f, 1e+01f);
		interface->declare(&fbargraph15, "15", "");
		interface->declare(&fbargraph15, "tooltip", "Spectral Band Level in dB");
		interface->declare(&fbargraph15, "unit", "dB");
		interface->addVerticalBargraph("0x659f200", &fbargraph15, -5e+01f, 1e+01f);
		interface->declare(&fbargraph16, "16", "");
		interface->declare(&fbargraph16, "tooltip", "Spectral Band Level in dB");
		interface->declare(&fbargraph16, "unit", "dB");
		interface->addVerticalBargraph("0x65a8a70", &fbargraph16, -5e+01f, 1e+01f);
		interface->declare(&fbargraph17, "17", "");
		interface->declare(&fbargraph17, "tooltip", "Spectral Band Level in dB");
		interface->declare(&fbargraph17, "unit", "dB");
		interface->addVerticalBargraph("0x65b2560", &fbargraph17, -5e+01f, 1e+01f);
		interface->declare(&fbargraph18, "18", "");
		interface->declare(&fbargraph18, "tooltip", "Spectral Band Level in dB");
		interface->declare(&fbargraph18, "unit", "dB");
		interface->addVerticalBargraph("0x65bbe40", &fbargraph18, -5e+01f, 1e+01f);
		interface->declare(&fbargraph19, "19", "");
		interface->declare(&fbargraph19, "tooltip", "Spectral Band Level in dB");
		interface->declare(&fbargraph19, "unit", "dB");
		interface->addVerticalBargraph("0x65c5570", &fbargraph19, -5e+01f, 1e+01f);
		interface->declare(&fbargraph20, "20", "");
		interface->declare(&fbargraph20, "tooltip", "Spectral Band Level in dB");
		interface->declare(&fbargraph20, "unit", "dB");
		interface->addVerticalBargraph("0x65cf120", &fbargraph20, -5e+01f, 1e+01f);
		interface->declare(&fbargraph21, "21", "");
		interface->declare(&fbargraph21, "tooltip", "Spectral Band Level in dB");
		interface->declare(&fbargraph21, "unit", "dB");
		interface->addVerticalBargraph("0x65d8dc0", &fbargraph21, -5e+01f, 1e+01f);
		interface->declare(&fbargraph22, "22", "");
		interface->declare(&fbargraph22, "tooltip", "Spectral Band Level in dB");
		interface->declare(&fbargraph22, "unit", "dB");
		interface->addVerticalBargraph("0x65e26c0", &fbargraph22, -5e+01f, 1e+01f);
		interface->declare(&fbargraph23, "23", "");
		interface->declare(&fbargraph23, "tooltip", "Spectral Band Level in dB");
		interface->declare(&fbargraph23, "unit", "dB");
		interface->addVerticalBargraph("0x65ec3b0", &fbargraph23, -5e+01f, 1e+01f);
		interface->declare(&fbargraph24, "24", "");
		interface->declare(&fbargraph24, "tooltip", "Spectral Band Level in dB");
		interface->declare(&fbargraph24, "unit", "dB");
		interface->addVerticalBargraph("0x65f6320", &fbargraph24, -5e+01f, 1e+01f);
		interface->declare(&fbargraph25, "25", "");
		interface->declare(&fbargraph25, "tooltip", "Spectral Band Level in dB");
		interface->declare(&fbargraph25, "unit", "dB");
		interface->addVerticalBargraph("0x65fffb0", &fbargraph25, -5e+01f, 1e+01f);
		interface->declare(&fbargraph26, "26", "");
		interface->declare(&fbargraph26, "tooltip", "Spectral Band Level in dB");
		interface->declare(&fbargraph26, "unit", "dB");
		interface->addVerticalBargraph("0x6609c90", &fbargraph26, -5e+01f, 1e+01f);
		interface->declare(&fbargraph27, "27", "");
		interface->declare(&fbargraph27, "tooltip", "Spectral Band Level in dB");
		interface->declare(&fbargraph27, "unit", "dB");
		interface->addVerticalBargraph("0x6613e90", &fbargraph27, -5e+01f, 1e+01f);
		interface->declare(&fbargraph28, "28", "");
		interface->declare(&fbargraph28, "tooltip", "Spectral Band Level in dB");
		interface->declare(&fbargraph28, "unit", "dB");
		interface->addVerticalBargraph("0x661ddc0", &fbargraph28, -5e+01f, 1e+01f);
		interface->declare(&fbargraph29, "29", "");
		interface->declare(&fbargraph29, "tooltip", "Spectral Band Level in dB");
		interface->declare(&fbargraph29, "unit", "dB");
		interface->addVerticalBargraph("0x6627b60", &fbargraph29, -5e+01f, 1e+01f);
		interface->closeBox();
		interface->declare(0, "1", "");
		interface->openHorizontalBox("SPECTRUM ANALYZER CONTROLS");
		interface->declare(&fslider0, "0", "");
		interface->declare(&fslider0, "scale", "log");
		interface->declare(&fslider0, "tooltip", "band-level averaging time in milliseconds");
		interface->declare(&fslider0, "unit", "ms");
		interface->addHorizontalSlider("Level Averaging Time", &fslider0, 1e+02f, 1.0f, 1e+04f, 1.0f);
		interface->declare(&fslider1, "1", "");
		interface->declare(&fslider1, "tooltip", "Level offset in decibels");
		interface->declare(&fslider1, "unit", "dB");
		interface->addHorizontalSlider("Level dB Offset", &fslider1, 5e+01f, 0.0f, 1e+02f, 1.0f);
		interface->closeBox();
		interface->closeBox();
	}
	virtual void compute (int count, FAUSTFLOAT** input, FAUSTFLOAT** output) {
		float 	fSlow0 = expf((0 - (fConst581 / float(fslider0))));
		float 	fSlow1 = (1.0f - fSlow0);
		float 	fSlow2 = float(fslider1);
		FAUSTFLOAT* input0 = input[0];
		FAUSTFLOAT* output0 = output[0];
		FAUSTFLOAT* output1 = output[1];
		for (int i=0; i<count; i++) {
			float fTemp0 = (float)input0[i];
			fRec87[0] = (fTemp0 - (fConst377 * ((fConst376 * fRec87[2]) + (fConst375 * fRec87[1]))));
			fRec86[0] = ((fConst377 * (((fConst379 * fRec87[0]) + (fConst380 * fRec87[1])) + (fConst379 * fRec87[2]))) - (fConst374 * ((fConst373 * fRec86[2]) + (fConst372 * fRec86[1]))));
			fRec85[0] = ((fConst374 * (((fConst381 * fRec86[0]) + (fConst382 * fRec86[1])) + (fConst381 * fRec86[2]))) - (fConst371 * ((fConst370 * fRec85[2]) + (fConst368 * fRec85[1]))));
			float fTemp1 = (fConst371 * (((fConst383 * fRec85[0]) + (fConst384 * fRec85[1])) + (fConst383 * fRec85[2])));
			fRec84[0] = (fTemp1 - (fConst364 * ((fConst363 * fRec84[2]) + (fConst362 * fRec84[1]))));
			fRec83[0] = ((fConst364 * (((fConst386 * fRec84[0]) + (fConst387 * fRec84[1])) + (fConst386 * fRec84[2]))) - (fConst361 * ((fConst360 * fRec83[2]) + (fConst359 * fRec83[1]))));
			fRec82[0] = ((fConst361 * (((fConst388 * fRec83[0]) + (fConst389 * fRec83[1])) + (fConst388 * fRec83[2]))) - (fConst358 * ((fConst357 * fRec82[2]) + (fConst355 * fRec82[1]))));
			float fTemp2 = (fConst358 * (((fConst390 * fRec82[0]) + (fConst391 * fRec82[1])) + (fConst390 * fRec82[2])));
			fRec81[0] = (fTemp2 - (fConst351 * ((fConst350 * fRec81[2]) + (fConst349 * fRec81[1]))));
			fRec80[0] = ((fConst351 * (((fConst393 * fRec81[0]) + (fConst394 * fRec81[1])) + (fConst393 * fRec81[2]))) - (fConst348 * ((fConst347 * fRec80[2]) + (fConst346 * fRec80[1]))));
			fRec79[0] = ((fConst348 * (((fConst395 * fRec80[0]) + (fConst396 * fRec80[1])) + (fConst395 * fRec80[2]))) - (fConst345 * ((fConst344 * fRec79[2]) + (fConst342 * fRec79[1]))));
			float fTemp3 = (fConst345 * (((fConst397 * fRec79[0]) + (fConst398 * fRec79[1])) + (fConst397 * fRec79[2])));
			fRec78[0] = (fTemp3 - (fConst338 * ((fConst337 * fRec78[2]) + (fConst336 * fRec78[1]))));
			fRec77[0] = ((fConst338 * (((fConst400 * fRec78[0]) + (fConst401 * fRec78[1])) + (fConst400 * fRec78[2]))) - (fConst335 * ((fConst334 * fRec77[2]) + (fConst333 * fRec77[1]))));
			fRec76[0] = ((fConst335 * (((fConst402 * fRec77[0]) + (fConst403 * fRec77[1])) + (fConst402 * fRec77[2]))) - (fConst332 * ((fConst331 * fRec76[2]) + (fConst329 * fRec76[1]))));
			float fTemp4 = (fConst332 * (((fConst404 * fRec76[0]) + (fConst405 * fRec76[1])) + (fConst404 * fRec76[2])));
			fRec75[0] = (fTemp4 - (fConst325 * ((fConst324 * fRec75[2]) + (fConst323 * fRec75[1]))));
			fRec74[0] = ((fConst325 * (((fConst407 * fRec75[0]) + (fConst408 * fRec75[1])) + (fConst407 * fRec75[2]))) - (fConst322 * ((fConst321 * fRec74[2]) + (fConst320 * fRec74[1]))));
			fRec73[0] = ((fConst322 * (((fConst409 * fRec74[0]) + (fConst410 * fRec74[1])) + (fConst409 * fRec74[2]))) - (fConst319 * ((fConst318 * fRec73[2]) + (fConst316 * fRec73[1]))));
			float fTemp5 = (fConst319 * (((fConst411 * fRec73[0]) + (fConst412 * fRec73[1])) + (fConst411 * fRec73[2])));
			fRec72[0] = (fTemp5 - (fConst312 * ((fConst311 * fRec72[2]) + (fConst310 * fRec72[1]))));
			fRec71[0] = ((fConst312 * (((fConst414 * fRec72[0]) + (fConst415 * fRec72[1])) + (fConst414 * fRec72[2]))) - (fConst309 * ((fConst308 * fRec71[2]) + (fConst307 * fRec71[1]))));
			fRec70[0] = ((fConst309 * (((fConst416 * fRec71[0]) + (fConst417 * fRec71[1])) + (fConst416 * fRec71[2]))) - (fConst306 * ((fConst305 * fRec70[2]) + (fConst303 * fRec70[1]))));
			float fTemp6 = (fConst306 * (((fConst418 * fRec70[0]) + (fConst419 * fRec70[1])) + (fConst418 * fRec70[2])));
			fRec69[0] = (fTemp6 - (fConst299 * ((fConst298 * fRec69[2]) + (fConst297 * fRec69[1]))));
			fRec68[0] = ((fConst299 * (((fConst421 * fRec69[0]) + (fConst422 * fRec69[1])) + (fConst421 * fRec69[2]))) - (fConst296 * ((fConst295 * fRec68[2]) + (fConst294 * fRec68[1]))));
			fRec67[0] = ((fConst296 * (((fConst423 * fRec68[0]) + (fConst424 * fRec68[1])) + (fConst423 * fRec68[2]))) - (fConst293 * ((fConst292 * fRec67[2]) + (fConst290 * fRec67[1]))));
			float fTemp7 = (fConst293 * (((fConst425 * fRec67[0]) + (fConst426 * fRec67[1])) + (fConst425 * fRec67[2])));
			fRec66[0] = (fTemp7 - (fConst286 * ((fConst285 * fRec66[2]) + (fConst284 * fRec66[1]))));
			fRec65[0] = ((fConst286 * (((fConst428 * fRec66[0]) + (fConst429 * fRec66[1])) + (fConst428 * fRec66[2]))) - (fConst283 * ((fConst282 * fRec65[2]) + (fConst281 * fRec65[1]))));
			fRec64[0] = ((fConst283 * (((fConst430 * fRec65[0]) + (fConst431 * fRec65[1])) + (fConst430 * fRec65[2]))) - (fConst280 * ((fConst279 * fRec64[2]) + (fConst277 * fRec64[1]))));
			float fTemp8 = (fConst280 * (((fConst432 * fRec64[0]) + (fConst433 * fRec64[1])) + (fConst432 * fRec64[2])));
			fRec63[0] = (fTemp8 - (fConst273 * ((fConst272 * fRec63[2]) + (fConst271 * fRec63[1]))));
			fRec62[0] = ((fConst273 * (((fConst435 * fRec63[0]) + (fConst436 * fRec63[1])) + (fConst435 * fRec63[2]))) - (fConst270 * ((fConst269 * fRec62[2]) + (fConst268 * fRec62[1]))));
			fRec61[0] = ((fConst270 * (((fConst437 * fRec62[0]) + (fConst438 * fRec62[1])) + (fConst437 * fRec62[2]))) - (fConst267 * ((fConst266 * fRec61[2]) + (fConst264 * fRec61[1]))));
			float fTemp9 = (fConst267 * (((fConst439 * fRec61[0]) + (fConst440 * fRec61[1])) + (fConst439 * fRec61[2])));
			fRec60[0] = (fTemp9 - (fConst260 * ((fConst259 * fRec60[2]) + (fConst258 * fRec60[1]))));
			fRec59[0] = ((fConst260 * (((fConst442 * fRec60[0]) + (fConst443 * fRec60[1])) + (fConst442 * fRec60[2]))) - (fConst257 * ((fConst256 * fRec59[2]) + (fConst255 * fRec59[1]))));
			fRec58[0] = ((fConst257 * (((fConst444 * fRec59[0]) + (fConst445 * fRec59[1])) + (fConst444 * fRec59[2]))) - (fConst254 * ((fConst253 * fRec58[2]) + (fConst251 * fRec58[1]))));
			float fTemp10 = (fConst254 * (((fConst446 * fRec58[0]) + (fConst447 * fRec58[1])) + (fConst446 * fRec58[2])));
			fRec57[0] = (fTemp10 - (fConst247 * ((fConst246 * fRec57[2]) + (fConst245 * fRec57[1]))));
			fRec56[0] = ((fConst247 * (((fConst449 * fRec57[0]) + (fConst450 * fRec57[1])) + (fConst449 * fRec57[2]))) - (fConst244 * ((fConst243 * fRec56[2]) + (fConst242 * fRec56[1]))));
			fRec55[0] = ((fConst244 * (((fConst451 * fRec56[0]) + (fConst452 * fRec56[1])) + (fConst451 * fRec56[2]))) - (fConst241 * ((fConst240 * fRec55[2]) + (fConst238 * fRec55[1]))));
			float fTemp11 = (fConst241 * (((fConst453 * fRec55[0]) + (fConst454 * fRec55[1])) + (fConst453 * fRec55[2])));
			fRec54[0] = (fTemp11 - (fConst234 * ((fConst233 * fRec54[2]) + (fConst232 * fRec54[1]))));
			fRec53[0] = ((fConst234 * (((fConst456 * fRec54[0]) + (fConst457 * fRec54[1])) + (fConst456 * fRec54[2]))) - (fConst231 * ((fConst230 * fRec53[2]) + (fConst229 * fRec53[1]))));
			fRec52[0] = ((fConst231 * (((fConst458 * fRec53[0]) + (fConst459 * fRec53[1])) + (fConst458 * fRec53[2]))) - (fConst228 * ((fConst227 * fRec52[2]) + (fConst225 * fRec52[1]))));
			float fTemp12 = (fConst228 * (((fConst460 * fRec52[0]) + (fConst461 * fRec52[1])) + (fConst460 * fRec52[2])));
			fRec51[0] = (fTemp12 - (fConst221 * ((fConst220 * fRec51[2]) + (fConst219 * fRec51[1]))));
			fRec50[0] = ((fConst221 * (((fConst463 * fRec51[0]) + (fConst464 * fRec51[1])) + (fConst463 * fRec51[2]))) - (fConst218 * ((fConst217 * fRec50[2]) + (fConst216 * fRec50[1]))));
			fRec49[0] = ((fConst218 * (((fConst465 * fRec50[0]) + (fConst466 * fRec50[1])) + (fConst465 * fRec50[2]))) - (fConst215 * ((fConst214 * fRec49[2]) + (fConst212 * fRec49[1]))));
			float fTemp13 = (fConst215 * (((fConst467 * fRec49[0]) + (fConst468 * fRec49[1])) + (fConst467 * fRec49[2])));
			fRec48[0] = (fTemp13 - (fConst208 * ((fConst207 * fRec48[2]) + (fConst206 * fRec48[1]))));
			fRec47[0] = ((fConst208 * (((fConst470 * fRec48[0]) + (fConst471 * fRec48[1])) + (fConst470 * fRec48[2]))) - (fConst205 * ((fConst204 * fRec47[2]) + (fConst203 * fRec47[1]))));
			fRec46[0] = ((fConst205 * (((fConst472 * fRec47[0]) + (fConst473 * fRec47[1])) + (fConst472 * fRec47[2]))) - (fConst202 * ((fConst201 * fRec46[2]) + (fConst199 * fRec46[1]))));
			float fTemp14 = (fConst202 * (((fConst474 * fRec46[0]) + (fConst475 * fRec46[1])) + (fConst474 * fRec46[2])));
			fRec45[0] = (fTemp14 - (fConst195 * ((fConst194 * fRec45[2]) + (fConst193 * fRec45[1]))));
			fRec44[0] = ((fConst195 * (((fConst477 * fRec45[0]) + (fConst478 * fRec45[1])) + (fConst477 * fRec45[2]))) - (fConst192 * ((fConst191 * fRec44[2]) + (fConst190 * fRec44[1]))));
			fRec43[0] = ((fConst192 * (((fConst479 * fRec44[0]) + (fConst480 * fRec44[1])) + (fConst479 * fRec44[2]))) - (fConst189 * ((fConst188 * fRec43[2]) + (fConst186 * fRec43[1]))));
			float fTemp15 = (fConst189 * (((fConst481 * fRec43[0]) + (fConst482 * fRec43[1])) + (fConst481 * fRec43[2])));
			fRec42[0] = (fTemp15 - (fConst182 * ((fConst181 * fRec42[2]) + (fConst180 * fRec42[1]))));
			fRec41[0] = ((fConst182 * (((fConst484 * fRec42[0]) + (fConst485 * fRec42[1])) + (fConst484 * fRec42[2]))) - (fConst179 * ((fConst178 * fRec41[2]) + (fConst177 * fRec41[1]))));
			fRec40[0] = ((fConst179 * (((fConst486 * fRec41[0]) + (fConst487 * fRec41[1])) + (fConst486 * fRec41[2]))) - (fConst176 * ((fConst175 * fRec40[2]) + (fConst173 * fRec40[1]))));
			float fTemp16 = (fConst176 * (((fConst488 * fRec40[0]) + (fConst489 * fRec40[1])) + (fConst488 * fRec40[2])));
			fRec39[0] = (fTemp16 - (fConst169 * ((fConst168 * fRec39[2]) + (fConst167 * fRec39[1]))));
			fRec38[0] = ((fConst169 * (((fConst491 * fRec39[0]) + (fConst492 * fRec39[1])) + (fConst491 * fRec39[2]))) - (fConst166 * ((fConst165 * fRec38[2]) + (fConst164 * fRec38[1]))));
			fRec37[0] = ((fConst166 * (((fConst493 * fRec38[0]) + (fConst494 * fRec38[1])) + (fConst493 * fRec38[2]))) - (fConst163 * ((fConst162 * fRec37[2]) + (fConst160 * fRec37[1]))));
			float fTemp17 = (fConst163 * (((fConst495 * fRec37[0]) + (fConst496 * fRec37[1])) + (fConst495 * fRec37[2])));
			fRec36[0] = (fTemp17 - (fConst156 * ((fConst155 * fRec36[2]) + (fConst154 * fRec36[1]))));
			fRec35[0] = ((fConst156 * (((fConst498 * fRec36[0]) + (fConst499 * fRec36[1])) + (fConst498 * fRec36[2]))) - (fConst153 * ((fConst152 * fRec35[2]) + (fConst151 * fRec35[1]))));
			fRec34[0] = ((fConst153 * (((fConst500 * fRec35[0]) + (fConst501 * fRec35[1])) + (fConst500 * fRec35[2]))) - (fConst150 * ((fConst149 * fRec34[2]) + (fConst147 * fRec34[1]))));
			float fTemp18 = (fConst150 * (((fConst502 * fRec34[0]) + (fConst503 * fRec34[1])) + (fConst502 * fRec34[2])));
			fRec33[0] = (fTemp18 - (fConst143 * ((fConst142 * fRec33[2]) + (fConst141 * fRec33[1]))));
			fRec32[0] = ((fConst143 * (((fConst505 * fRec33[0]) + (fConst506 * fRec33[1])) + (fConst505 * fRec33[2]))) - (fConst140 * ((fConst139 * fRec32[2]) + (fConst138 * fRec32[1]))));
			fRec31[0] = ((fConst140 * (((fConst507 * fRec32[0]) + (fConst508 * fRec32[1])) + (fConst507 * fRec32[2]))) - (fConst137 * ((fConst136 * fRec31[2]) + (fConst134 * fRec31[1]))));
			float fTemp19 = (fConst137 * (((fConst509 * fRec31[0]) + (fConst510 * fRec31[1])) + (fConst509 * fRec31[2])));
			fRec30[0] = (fTemp19 - (fConst130 * ((fConst129 * fRec30[2]) + (fConst128 * fRec30[1]))));
			fRec29[0] = ((fConst130 * (((fConst512 * fRec30[0]) + (fConst513 * fRec30[1])) + (fConst512 * fRec30[2]))) - (fConst127 * ((fConst126 * fRec29[2]) + (fConst125 * fRec29[1]))));
			fRec28[0] = ((fConst127 * (((fConst514 * fRec29[0]) + (fConst515 * fRec29[1])) + (fConst514 * fRec29[2]))) - (fConst124 * ((fConst123 * fRec28[2]) + (fConst121 * fRec28[1]))));
			float fTemp20 = (fConst124 * (((fConst516 * fRec28[0]) + (fConst517 * fRec28[1])) + (fConst516 * fRec28[2])));
			fRec27[0] = (fTemp20 - (fConst117 * ((fConst116 * fRec27[2]) + (fConst115 * fRec27[1]))));
			fRec26[0] = ((fConst117 * (((fConst519 * fRec27[0]) + (fConst520 * fRec27[1])) + (fConst519 * fRec27[2]))) - (fConst114 * ((fConst113 * fRec26[2]) + (fConst112 * fRec26[1]))));
			fRec25[0] = ((fConst114 * (((fConst521 * fRec26[0]) + (fConst522 * fRec26[1])) + (fConst521 * fRec26[2]))) - (fConst111 * ((fConst110 * fRec25[2]) + (fConst108 * fRec25[1]))));
			float fTemp21 = (fConst111 * (((fConst523 * fRec25[0]) + (fConst524 * fRec25[1])) + (fConst523 * fRec25[2])));
			fRec24[0] = (fTemp21 - (fConst104 * ((fConst103 * fRec24[2]) + (fConst102 * fRec24[1]))));
			fRec23[0] = ((fConst104 * (((fConst526 * fRec24[0]) + (fConst527 * fRec24[1])) + (fConst526 * fRec24[2]))) - (fConst101 * ((fConst100 * fRec23[2]) + (fConst99 * fRec23[1]))));
			fRec22[0] = ((fConst101 * (((fConst528 * fRec23[0]) + (fConst529 * fRec23[1])) + (fConst528 * fRec23[2]))) - (fConst98 * ((fConst97 * fRec22[2]) + (fConst95 * fRec22[1]))));
			float fTemp22 = (fConst98 * (((fConst530 * fRec22[0]) + (fConst531 * fRec22[1])) + (fConst530 * fRec22[2])));
			fRec21[0] = (fTemp22 - (fConst91 * ((fConst90 * fRec21[2]) + (fConst89 * fRec21[1]))));
			fRec20[0] = ((fConst91 * (((fConst533 * fRec21[0]) + (fConst534 * fRec21[1])) + (fConst533 * fRec21[2]))) - (fConst88 * ((fConst87 * fRec20[2]) + (fConst86 * fRec20[1]))));
			fRec19[0] = ((fConst88 * (((fConst535 * fRec20[0]) + (fConst536 * fRec20[1])) + (fConst535 * fRec20[2]))) - (fConst85 * ((fConst84 * fRec19[2]) + (fConst82 * fRec19[1]))));
			float fTemp23 = (fConst85 * (((fConst537 * fRec19[0]) + (fConst538 * fRec19[1])) + (fConst537 * fRec19[2])));
			fRec18[0] = (fTemp23 - (fConst78 * ((fConst77 * fRec18[2]) + (fConst76 * fRec18[1]))));
			fRec17[0] = ((fConst78 * (((fConst540 * fRec18[0]) + (fConst541 * fRec18[1])) + (fConst540 * fRec18[2]))) - (fConst75 * ((fConst74 * fRec17[2]) + (fConst73 * fRec17[1]))));
			fRec16[0] = ((fConst75 * (((fConst542 * fRec17[0]) + (fConst543 * fRec17[1])) + (fConst542 * fRec17[2]))) - (fConst72 * ((fConst71 * fRec16[2]) + (fConst69 * fRec16[1]))));
			float fTemp24 = (fConst72 * (((fConst544 * fRec16[0]) + (fConst545 * fRec16[1])) + (fConst544 * fRec16[2])));
			fRec15[0] = (fTemp24 - (fConst65 * ((fConst64 * fRec15[2]) + (fConst63 * fRec15[1]))));
			fRec14[0] = ((fConst65 * (((fConst547 * fRec15[0]) + (fConst548 * fRec15[1])) + (fConst547 * fRec15[2]))) - (fConst62 * ((fConst61 * fRec14[2]) + (fConst60 * fRec14[1]))));
			fRec13[0] = ((fConst62 * (((fConst549 * fRec14[0]) + (fConst550 * fRec14[1])) + (fConst549 * fRec14[2]))) - (fConst59 * ((fConst58 * fRec13[2]) + (fConst56 * fRec13[1]))));
			float fTemp25 = (fConst59 * (((fConst551 * fRec13[0]) + (fConst552 * fRec13[1])) + (fConst551 * fRec13[2])));
			fRec12[0] = (fTemp25 - (fConst52 * ((fConst51 * fRec12[2]) + (fConst50 * fRec12[1]))));
			fRec11[0] = ((fConst52 * (((fConst554 * fRec12[0]) + (fConst555 * fRec12[1])) + (fConst554 * fRec12[2]))) - (fConst49 * ((fConst48 * fRec11[2]) + (fConst47 * fRec11[1]))));
			fRec10[0] = ((fConst49 * (((fConst556 * fRec11[0]) + (fConst557 * fRec11[1])) + (fConst556 * fRec11[2]))) - (fConst46 * ((fConst45 * fRec10[2]) + (fConst43 * fRec10[1]))));
			float fTemp26 = (fConst46 * (((fConst558 * fRec10[0]) + (fConst559 * fRec10[1])) + (fConst558 * fRec10[2])));
			fRec9[0] = (fTemp26 - (fConst39 * ((fConst38 * fRec9[2]) + (fConst37 * fRec9[1]))));
			fRec8[0] = ((fConst39 * (((fConst561 * fRec9[0]) + (fConst562 * fRec9[1])) + (fConst561 * fRec9[2]))) - (fConst36 * ((fConst35 * fRec8[2]) + (fConst34 * fRec8[1]))));
			fRec7[0] = ((fConst36 * (((fConst563 * fRec8[0]) + (fConst564 * fRec8[1])) + (fConst563 * fRec8[2]))) - (fConst33 * ((fConst32 * fRec7[2]) + (fConst30 * fRec7[1]))));
			float fTemp27 = (fConst33 * (((fConst565 * fRec7[0]) + (fConst566 * fRec7[1])) + (fConst565 * fRec7[2])));
			fRec6[0] = (fTemp27 - (fConst26 * ((fConst25 * fRec6[2]) + (fConst24 * fRec6[1]))));
			fRec5[0] = ((fConst26 * (((fConst568 * fRec6[0]) + (fConst569 * fRec6[1])) + (fConst568 * fRec6[2]))) - (fConst23 * ((fConst22 * fRec5[2]) + (fConst21 * fRec5[1]))));
			fRec4[0] = ((fConst23 * (((fConst570 * fRec5[0]) + (fConst571 * fRec5[1])) + (fConst570 * fRec5[2]))) - (fConst20 * ((fConst19 * fRec4[2]) + (fConst17 * fRec4[1]))));
			float fTemp28 = (fConst20 * (((fConst572 * fRec4[0]) + (fConst573 * fRec4[1])) + (fConst572 * fRec4[2])));
			fRec3[0] = (fTemp28 - (fConst13 * ((fConst12 * fRec3[2]) + (fConst11 * fRec3[1]))));
			fRec2[0] = ((fConst13 * (((fConst575 * fRec3[0]) + (fConst576 * fRec3[1])) + (fConst575 * fRec3[2]))) - (fConst10 * ((fConst9 * fRec2[2]) + (fConst8 * fRec2[1]))));
			fRec1[0] = ((fConst10 * (((fConst577 * fRec2[0]) + (fConst578 * fRec2[1])) + (fConst577 * fRec2[2]))) - (fConst7 * ((fConst6 * fRec1[2]) + (fConst4 * fRec1[1]))));
			fRec0[0] = ((fSlow0 * fRec0[1]) + (fSlow1 * fabsf((fConst7 * (((fConst579 * fRec1[0]) + (fConst580 * fRec1[1])) + (fConst579 * fRec1[2]))))));
			fbargraph0 = (fSlow2 + (20 * log10f(fRec0[0])));
			fRec91[0] = (fTemp28 - (fConst590 * ((fConst589 * fRec91[2]) + (fConst588 * fRec91[1]))));
			fRec90[0] = ((fConst590 * (((fConst592 * fRec91[0]) + (fConst593 * fRec91[1])) + (fConst592 * fRec91[2]))) - (fConst587 * ((fConst586 * fRec90[2]) + (fConst585 * fRec90[1]))));
			fRec89[0] = ((fConst587 * (((fConst595 * fRec90[0]) + (fConst596 * fRec90[1])) + (fConst595 * fRec90[2]))) - (fConst584 * ((fConst583 * fRec89[2]) + (fConst582 * fRec89[1]))));
			fRec88[0] = ((fSlow0 * fRec88[1]) + (fSlow1 * fabsf((fConst584 * (((fConst598 * fRec89[0]) + (fConst599 * fRec89[1])) + (fConst598 * fRec89[2]))))));
			fbargraph1 = (fSlow2 + (20 * log10f(fRec88[0])));
			fRec95[0] = (fTemp27 - (fConst608 * ((fConst607 * fRec95[2]) + (fConst606 * fRec95[1]))));
			fRec94[0] = ((fConst608 * (((fConst610 * fRec95[0]) + (fConst611 * fRec95[1])) + (fConst610 * fRec95[2]))) - (fConst605 * ((fConst604 * fRec94[2]) + (fConst603 * fRec94[1]))));
			fRec93[0] = ((fConst605 * (((fConst613 * fRec94[0]) + (fConst614 * fRec94[1])) + (fConst613 * fRec94[2]))) - (fConst602 * ((fConst601 * fRec93[2]) + (fConst600 * fRec93[1]))));
			fRec92[0] = ((fSlow0 * fRec92[1]) + (fSlow1 * fabsf((fConst602 * (((fConst616 * fRec93[0]) + (fConst617 * fRec93[1])) + (fConst616 * fRec93[2]))))));
			fbargraph2 = (fSlow2 + (20 * log10f(fRec92[0])));
			fRec99[0] = (fTemp26 - (fConst626 * ((fConst625 * fRec99[2]) + (fConst624 * fRec99[1]))));
			fRec98[0] = ((fConst626 * (((fConst628 * fRec99[0]) + (fConst629 * fRec99[1])) + (fConst628 * fRec99[2]))) - (fConst623 * ((fConst622 * fRec98[2]) + (fConst621 * fRec98[1]))));
			fRec97[0] = ((fConst623 * (((fConst631 * fRec98[0]) + (fConst632 * fRec98[1])) + (fConst631 * fRec98[2]))) - (fConst620 * ((fConst619 * fRec97[2]) + (fConst618 * fRec97[1]))));
			fRec96[0] = ((fSlow0 * fRec96[1]) + (fSlow1 * fabsf((fConst620 * (((fConst634 * fRec97[0]) + (fConst635 * fRec97[1])) + (fConst634 * fRec97[2]))))));
			fbargraph3 = (fSlow2 + (20 * log10f(fRec96[0])));
			fRec103[0] = (fTemp25 - (fConst644 * ((fConst643 * fRec103[2]) + (fConst642 * fRec103[1]))));
			fRec102[0] = ((fConst644 * (((fConst646 * fRec103[0]) + (fConst647 * fRec103[1])) + (fConst646 * fRec103[2]))) - (fConst641 * ((fConst640 * fRec102[2]) + (fConst639 * fRec102[1]))));
			fRec101[0] = ((fConst641 * (((fConst649 * fRec102[0]) + (fConst650 * fRec102[1])) + (fConst649 * fRec102[2]))) - (fConst638 * ((fConst637 * fRec101[2]) + (fConst636 * fRec101[1]))));
			fRec100[0] = ((fSlow0 * fRec100[1]) + (fSlow1 * fabsf((fConst638 * (((fConst652 * fRec101[0]) + (fConst653 * fRec101[1])) + (fConst652 * fRec101[2]))))));
			fbargraph4 = (fSlow2 + (20 * log10f(fRec100[0])));
			fRec107[0] = (fTemp24 - (fConst662 * ((fConst661 * fRec107[2]) + (fConst660 * fRec107[1]))));
			fRec106[0] = ((fConst662 * (((fConst664 * fRec107[0]) + (fConst665 * fRec107[1])) + (fConst664 * fRec107[2]))) - (fConst659 * ((fConst658 * fRec106[2]) + (fConst657 * fRec106[1]))));
			fRec105[0] = ((fConst659 * (((fConst667 * fRec106[0]) + (fConst668 * fRec106[1])) + (fConst667 * fRec106[2]))) - (fConst656 * ((fConst655 * fRec105[2]) + (fConst654 * fRec105[1]))));
			fRec104[0] = ((fSlow0 * fRec104[1]) + (fSlow1 * fabsf((fConst656 * (((fConst670 * fRec105[0]) + (fConst671 * fRec105[1])) + (fConst670 * fRec105[2]))))));
			fbargraph5 = (fSlow2 + (20 * log10f(fRec104[0])));
			fRec111[0] = (fTemp23 - (fConst680 * ((fConst679 * fRec111[2]) + (fConst678 * fRec111[1]))));
			fRec110[0] = ((fConst680 * (((fConst682 * fRec111[0]) + (fConst683 * fRec111[1])) + (fConst682 * fRec111[2]))) - (fConst677 * ((fConst676 * fRec110[2]) + (fConst675 * fRec110[1]))));
			fRec109[0] = ((fConst677 * (((fConst685 * fRec110[0]) + (fConst686 * fRec110[1])) + (fConst685 * fRec110[2]))) - (fConst674 * ((fConst673 * fRec109[2]) + (fConst672 * fRec109[1]))));
			fRec108[0] = ((fSlow0 * fRec108[1]) + (fSlow1 * fabsf((fConst674 * (((fConst688 * fRec109[0]) + (fConst689 * fRec109[1])) + (fConst688 * fRec109[2]))))));
			fbargraph6 = (fSlow2 + (20 * log10f(fRec108[0])));
			fRec115[0] = (fTemp22 - (fConst698 * ((fConst697 * fRec115[2]) + (fConst696 * fRec115[1]))));
			fRec114[0] = ((fConst698 * (((fConst700 * fRec115[0]) + (fConst701 * fRec115[1])) + (fConst700 * fRec115[2]))) - (fConst695 * ((fConst694 * fRec114[2]) + (fConst693 * fRec114[1]))));
			fRec113[0] = ((fConst695 * (((fConst703 * fRec114[0]) + (fConst704 * fRec114[1])) + (fConst703 * fRec114[2]))) - (fConst692 * ((fConst691 * fRec113[2]) + (fConst690 * fRec113[1]))));
			fRec112[0] = ((fSlow0 * fRec112[1]) + (fSlow1 * fabsf((fConst692 * (((fConst706 * fRec113[0]) + (fConst707 * fRec113[1])) + (fConst706 * fRec113[2]))))));
			fbargraph7 = (fSlow2 + (20 * log10f(fRec112[0])));
			fRec119[0] = (fTemp21 - (fConst716 * ((fConst715 * fRec119[2]) + (fConst714 * fRec119[1]))));
			fRec118[0] = ((fConst716 * (((fConst718 * fRec119[0]) + (fConst719 * fRec119[1])) + (fConst718 * fRec119[2]))) - (fConst713 * ((fConst712 * fRec118[2]) + (fConst711 * fRec118[1]))));
			fRec117[0] = ((fConst713 * (((fConst721 * fRec118[0]) + (fConst722 * fRec118[1])) + (fConst721 * fRec118[2]))) - (fConst710 * ((fConst709 * fRec117[2]) + (fConst708 * fRec117[1]))));
			fRec116[0] = ((fSlow0 * fRec116[1]) + (fSlow1 * fabsf((fConst710 * (((fConst724 * fRec117[0]) + (fConst725 * fRec117[1])) + (fConst724 * fRec117[2]))))));
			fbargraph8 = (fSlow2 + (20 * log10f(fRec116[0])));
			fRec123[0] = (fTemp20 - (fConst734 * ((fConst733 * fRec123[2]) + (fConst732 * fRec123[1]))));
			fRec122[0] = ((fConst734 * (((fConst736 * fRec123[0]) + (fConst737 * fRec123[1])) + (fConst736 * fRec123[2]))) - (fConst731 * ((fConst730 * fRec122[2]) + (fConst729 * fRec122[1]))));
			fRec121[0] = ((fConst731 * (((fConst739 * fRec122[0]) + (fConst740 * fRec122[1])) + (fConst739 * fRec122[2]))) - (fConst728 * ((fConst727 * fRec121[2]) + (fConst726 * fRec121[1]))));
			fRec120[0] = ((fSlow0 * fRec120[1]) + (fSlow1 * fabsf((fConst728 * (((fConst742 * fRec121[0]) + (fConst743 * fRec121[1])) + (fConst742 * fRec121[2]))))));
			fbargraph9 = (fSlow2 + (20 * log10f(fRec120[0])));
			fRec127[0] = (fTemp19 - (fConst752 * ((fConst751 * fRec127[2]) + (fConst750 * fRec127[1]))));
			fRec126[0] = ((fConst752 * (((fConst754 * fRec127[0]) + (fConst755 * fRec127[1])) + (fConst754 * fRec127[2]))) - (fConst749 * ((fConst748 * fRec126[2]) + (fConst747 * fRec126[1]))));
			fRec125[0] = ((fConst749 * (((fConst757 * fRec126[0]) + (fConst758 * fRec126[1])) + (fConst757 * fRec126[2]))) - (fConst746 * ((fConst745 * fRec125[2]) + (fConst744 * fRec125[1]))));
			fRec124[0] = ((fSlow0 * fRec124[1]) + (fSlow1 * fabsf((fConst746 * (((fConst760 * fRec125[0]) + (fConst761 * fRec125[1])) + (fConst760 * fRec125[2]))))));
			fbargraph10 = (fSlow2 + (20 * log10f(fRec124[0])));
			fRec131[0] = (fTemp18 - (fConst770 * ((fConst769 * fRec131[2]) + (fConst768 * fRec131[1]))));
			fRec130[0] = ((fConst770 * (((fConst772 * fRec131[0]) + (fConst773 * fRec131[1])) + (fConst772 * fRec131[2]))) - (fConst767 * ((fConst766 * fRec130[2]) + (fConst765 * fRec130[1]))));
			fRec129[0] = ((fConst767 * (((fConst775 * fRec130[0]) + (fConst776 * fRec130[1])) + (fConst775 * fRec130[2]))) - (fConst764 * ((fConst763 * fRec129[2]) + (fConst762 * fRec129[1]))));
			fRec128[0] = ((fSlow0 * fRec128[1]) + (fSlow1 * fabsf((fConst764 * (((fConst778 * fRec129[0]) + (fConst779 * fRec129[1])) + (fConst778 * fRec129[2]))))));
			fbargraph11 = (fSlow2 + (20 * log10f(fRec128[0])));
			fRec135[0] = (fTemp17 - (fConst788 * ((fConst787 * fRec135[2]) + (fConst786 * fRec135[1]))));
			fRec134[0] = ((fConst788 * (((fConst790 * fRec135[0]) + (fConst791 * fRec135[1])) + (fConst790 * fRec135[2]))) - (fConst785 * ((fConst784 * fRec134[2]) + (fConst783 * fRec134[1]))));
			fRec133[0] = ((fConst785 * (((fConst793 * fRec134[0]) + (fConst794 * fRec134[1])) + (fConst793 * fRec134[2]))) - (fConst782 * ((fConst781 * fRec133[2]) + (fConst780 * fRec133[1]))));
			fRec132[0] = ((fSlow0 * fRec132[1]) + (fSlow1 * fabsf((fConst782 * (((fConst796 * fRec133[0]) + (fConst797 * fRec133[1])) + (fConst796 * fRec133[2]))))));
			fbargraph12 = (fSlow2 + (20 * log10f(fRec132[0])));
			fRec139[0] = (fTemp16 - (fConst806 * ((fConst805 * fRec139[2]) + (fConst804 * fRec139[1]))));
			fRec138[0] = ((fConst806 * (((fConst808 * fRec139[0]) + (fConst809 * fRec139[1])) + (fConst808 * fRec139[2]))) - (fConst803 * ((fConst802 * fRec138[2]) + (fConst801 * fRec138[1]))));
			fRec137[0] = ((fConst803 * (((fConst811 * fRec138[0]) + (fConst812 * fRec138[1])) + (fConst811 * fRec138[2]))) - (fConst800 * ((fConst799 * fRec137[2]) + (fConst798 * fRec137[1]))));
			fRec136[0] = ((fSlow0 * fRec136[1]) + (fSlow1 * fabsf((fConst800 * (((fConst814 * fRec137[0]) + (fConst815 * fRec137[1])) + (fConst814 * fRec137[2]))))));
			fbargraph13 = (fSlow2 + (20 * log10f(fRec136[0])));
			fRec143[0] = (fTemp15 - (fConst824 * ((fConst823 * fRec143[2]) + (fConst822 * fRec143[1]))));
			fRec142[0] = ((fConst824 * (((fConst826 * fRec143[0]) + (fConst827 * fRec143[1])) + (fConst826 * fRec143[2]))) - (fConst821 * ((fConst820 * fRec142[2]) + (fConst819 * fRec142[1]))));
			fRec141[0] = ((fConst821 * (((fConst829 * fRec142[0]) + (fConst830 * fRec142[1])) + (fConst829 * fRec142[2]))) - (fConst818 * ((fConst817 * fRec141[2]) + (fConst816 * fRec141[1]))));
			fRec140[0] = ((fSlow0 * fRec140[1]) + (fSlow1 * fabsf((fConst818 * (((fConst832 * fRec141[0]) + (fConst833 * fRec141[1])) + (fConst832 * fRec141[2]))))));
			fbargraph14 = (fSlow2 + (20 * log10f(fRec140[0])));
			fRec147[0] = (fTemp14 - (fConst842 * ((fConst841 * fRec147[2]) + (fConst840 * fRec147[1]))));
			fRec146[0] = ((fConst842 * (((fConst844 * fRec147[0]) + (fConst845 * fRec147[1])) + (fConst844 * fRec147[2]))) - (fConst839 * ((fConst838 * fRec146[2]) + (fConst837 * fRec146[1]))));
			fRec145[0] = ((fConst839 * (((fConst847 * fRec146[0]) + (fConst848 * fRec146[1])) + (fConst847 * fRec146[2]))) - (fConst836 * ((fConst835 * fRec145[2]) + (fConst834 * fRec145[1]))));
			fRec144[0] = ((fSlow0 * fRec144[1]) + (fSlow1 * fabsf((fConst836 * (((fConst850 * fRec145[0]) + (fConst851 * fRec145[1])) + (fConst850 * fRec145[2]))))));
			fbargraph15 = (fSlow2 + (20 * log10f(fRec144[0])));
			fRec151[0] = (fTemp13 - (fConst860 * ((fConst859 * fRec151[2]) + (fConst858 * fRec151[1]))));
			fRec150[0] = ((fConst860 * (((fConst862 * fRec151[0]) + (fConst863 * fRec151[1])) + (fConst862 * fRec151[2]))) - (fConst857 * ((fConst856 * fRec150[2]) + (fConst855 * fRec150[1]))));
			fRec149[0] = ((fConst857 * (((fConst865 * fRec150[0]) + (fConst866 * fRec150[1])) + (fConst865 * fRec150[2]))) - (fConst854 * ((fConst853 * fRec149[2]) + (fConst852 * fRec149[1]))));
			fRec148[0] = ((fSlow0 * fRec148[1]) + (fSlow1 * fabsf((fConst854 * (((fConst868 * fRec149[0]) + (fConst869 * fRec149[1])) + (fConst868 * fRec149[2]))))));
			fbargraph16 = (fSlow2 + (20 * log10f(fRec148[0])));
			fRec155[0] = (fTemp12 - (fConst878 * ((fConst877 * fRec155[2]) + (fConst876 * fRec155[1]))));
			fRec154[0] = ((fConst878 * (((fConst880 * fRec155[0]) + (fConst881 * fRec155[1])) + (fConst880 * fRec155[2]))) - (fConst875 * ((fConst874 * fRec154[2]) + (fConst873 * fRec154[1]))));
			fRec153[0] = ((fConst875 * (((fConst883 * fRec154[0]) + (fConst884 * fRec154[1])) + (fConst883 * fRec154[2]))) - (fConst872 * ((fConst871 * fRec153[2]) + (fConst870 * fRec153[1]))));
			fRec152[0] = ((fSlow0 * fRec152[1]) + (fSlow1 * fabsf((fConst872 * (((fConst886 * fRec153[0]) + (fConst887 * fRec153[1])) + (fConst886 * fRec153[2]))))));
			fbargraph17 = (fSlow2 + (20 * log10f(fRec152[0])));
			fRec159[0] = (fTemp11 - (fConst896 * ((fConst895 * fRec159[2]) + (fConst894 * fRec159[1]))));
			fRec158[0] = ((fConst896 * (((fConst898 * fRec159[0]) + (fConst899 * fRec159[1])) + (fConst898 * fRec159[2]))) - (fConst893 * ((fConst892 * fRec158[2]) + (fConst891 * fRec158[1]))));
			fRec157[0] = ((fConst893 * (((fConst901 * fRec158[0]) + (fConst902 * fRec158[1])) + (fConst901 * fRec158[2]))) - (fConst890 * ((fConst889 * fRec157[2]) + (fConst888 * fRec157[1]))));
			fRec156[0] = ((fSlow0 * fRec156[1]) + (fSlow1 * fabsf((fConst890 * (((fConst904 * fRec157[0]) + (fConst905 * fRec157[1])) + (fConst904 * fRec157[2]))))));
			fbargraph18 = (fSlow2 + (20 * log10f(fRec156[0])));
			fRec163[0] = (fTemp10 - (fConst914 * ((fConst913 * fRec163[2]) + (fConst912 * fRec163[1]))));
			fRec162[0] = ((fConst914 * (((fConst916 * fRec163[0]) + (fConst917 * fRec163[1])) + (fConst916 * fRec163[2]))) - (fConst911 * ((fConst910 * fRec162[2]) + (fConst909 * fRec162[1]))));
			fRec161[0] = ((fConst911 * (((fConst919 * fRec162[0]) + (fConst920 * fRec162[1])) + (fConst919 * fRec162[2]))) - (fConst908 * ((fConst907 * fRec161[2]) + (fConst906 * fRec161[1]))));
			fRec160[0] = ((fSlow0 * fRec160[1]) + (fSlow1 * fabsf((fConst908 * (((fConst922 * fRec161[0]) + (fConst923 * fRec161[1])) + (fConst922 * fRec161[2]))))));
			fbargraph19 = (fSlow2 + (20 * log10f(fRec160[0])));
			fRec167[0] = (fTemp9 - (fConst932 * ((fConst931 * fRec167[2]) + (fConst930 * fRec167[1]))));
			fRec166[0] = ((fConst932 * (((fConst934 * fRec167[0]) + (fConst935 * fRec167[1])) + (fConst934 * fRec167[2]))) - (fConst929 * ((fConst928 * fRec166[2]) + (fConst927 * fRec166[1]))));
			fRec165[0] = ((fConst929 * (((fConst937 * fRec166[0]) + (fConst938 * fRec166[1])) + (fConst937 * fRec166[2]))) - (fConst926 * ((fConst925 * fRec165[2]) + (fConst924 * fRec165[1]))));
			fRec164[0] = ((fSlow0 * fRec164[1]) + (fSlow1 * fabsf((fConst926 * (((fConst940 * fRec165[0]) + (fConst941 * fRec165[1])) + (fConst940 * fRec165[2]))))));
			fbargraph20 = (fSlow2 + (20 * log10f(fRec164[0])));
			fRec171[0] = (fTemp8 - (fConst950 * ((fConst949 * fRec171[2]) + (fConst948 * fRec171[1]))));
			fRec170[0] = ((fConst950 * (((fConst952 * fRec171[0]) + (fConst953 * fRec171[1])) + (fConst952 * fRec171[2]))) - (fConst947 * ((fConst946 * fRec170[2]) + (fConst945 * fRec170[1]))));
			fRec169[0] = ((fConst947 * (((fConst955 * fRec170[0]) + (fConst956 * fRec170[1])) + (fConst955 * fRec170[2]))) - (fConst944 * ((fConst943 * fRec169[2]) + (fConst942 * fRec169[1]))));
			fRec168[0] = ((fSlow0 * fRec168[1]) + (fSlow1 * fabsf((fConst944 * (((fConst958 * fRec169[0]) + (fConst959 * fRec169[1])) + (fConst958 * fRec169[2]))))));
			fbargraph21 = (fSlow2 + (20 * log10f(fRec168[0])));
			fRec175[0] = (fTemp7 - (fConst968 * ((fConst967 * fRec175[2]) + (fConst966 * fRec175[1]))));
			fRec174[0] = ((fConst968 * (((fConst970 * fRec175[0]) + (fConst971 * fRec175[1])) + (fConst970 * fRec175[2]))) - (fConst965 * ((fConst964 * fRec174[2]) + (fConst963 * fRec174[1]))));
			fRec173[0] = ((fConst965 * (((fConst973 * fRec174[0]) + (fConst974 * fRec174[1])) + (fConst973 * fRec174[2]))) - (fConst962 * ((fConst961 * fRec173[2]) + (fConst960 * fRec173[1]))));
			fRec172[0] = ((fSlow0 * fRec172[1]) + (fSlow1 * fabsf((fConst962 * (((fConst976 * fRec173[0]) + (fConst977 * fRec173[1])) + (fConst976 * fRec173[2]))))));
			fbargraph22 = (fSlow2 + (20 * log10f(fRec172[0])));
			fRec179[0] = (fTemp6 - (fConst986 * ((fConst985 * fRec179[2]) + (fConst984 * fRec179[1]))));
			fRec178[0] = ((fConst986 * (((fConst988 * fRec179[0]) + (fConst989 * fRec179[1])) + (fConst988 * fRec179[2]))) - (fConst983 * ((fConst982 * fRec178[2]) + (fConst981 * fRec178[1]))));
			fRec177[0] = ((fConst983 * (((fConst991 * fRec178[0]) + (fConst992 * fRec178[1])) + (fConst991 * fRec178[2]))) - (fConst980 * ((fConst979 * fRec177[2]) + (fConst978 * fRec177[1]))));
			fRec176[0] = ((fSlow0 * fRec176[1]) + (fSlow1 * fabsf((fConst980 * (((fConst994 * fRec177[0]) + (fConst995 * fRec177[1])) + (fConst994 * fRec177[2]))))));
			fbargraph23 = (fSlow2 + (20 * log10f(fRec176[0])));
			fRec183[0] = (fTemp5 - (fConst1004 * ((fConst1003 * fRec183[2]) + (fConst1002 * fRec183[1]))));
			fRec182[0] = ((fConst1004 * (((fConst1006 * fRec183[0]) + (fConst1007 * fRec183[1])) + (fConst1006 * fRec183[2]))) - (fConst1001 * ((fConst1000 * fRec182[2]) + (fConst999 * fRec182[1]))));
			fRec181[0] = ((fConst1001 * (((fConst1009 * fRec182[0]) + (fConst1010 * fRec182[1])) + (fConst1009 * fRec182[2]))) - (fConst998 * ((fConst997 * fRec181[2]) + (fConst996 * fRec181[1]))));
			fRec180[0] = ((fSlow0 * fRec180[1]) + (fSlow1 * fabsf((fConst998 * (((fConst1012 * fRec181[0]) + (fConst1013 * fRec181[1])) + (fConst1012 * fRec181[2]))))));
			fbargraph24 = (fSlow2 + (20 * log10f(fRec180[0])));
			fRec187[0] = (fTemp4 - (fConst1022 * ((fConst1021 * fRec187[2]) + (fConst1020 * fRec187[1]))));
			fRec186[0] = ((fConst1022 * (((fConst1024 * fRec187[0]) + (fConst1025 * fRec187[1])) + (fConst1024 * fRec187[2]))) - (fConst1019 * ((fConst1018 * fRec186[2]) + (fConst1017 * fRec186[1]))));
			fRec185[0] = ((fConst1019 * (((fConst1027 * fRec186[0]) + (fConst1028 * fRec186[1])) + (fConst1027 * fRec186[2]))) - (fConst1016 * ((fConst1015 * fRec185[2]) + (fConst1014 * fRec185[1]))));
			fRec184[0] = ((fSlow0 * fRec184[1]) + (fSlow1 * fabsf((fConst1016 * (((fConst1030 * fRec185[0]) + (fConst1031 * fRec185[1])) + (fConst1030 * fRec185[2]))))));
			fbargraph25 = (fSlow2 + (20 * log10f(fRec184[0])));
			fRec191[0] = (fTemp3 - (fConst1040 * ((fConst1039 * fRec191[2]) + (fConst1038 * fRec191[1]))));
			fRec190[0] = ((fConst1040 * (((fConst1042 * fRec191[0]) + (fConst1043 * fRec191[1])) + (fConst1042 * fRec191[2]))) - (fConst1037 * ((fConst1036 * fRec190[2]) + (fConst1035 * fRec190[1]))));
			fRec189[0] = ((fConst1037 * (((fConst1045 * fRec190[0]) + (fConst1046 * fRec190[1])) + (fConst1045 * fRec190[2]))) - (fConst1034 * ((fConst1033 * fRec189[2]) + (fConst1032 * fRec189[1]))));
			fRec188[0] = ((fSlow0 * fRec188[1]) + (fSlow1 * fabsf((fConst1034 * (((fConst1048 * fRec189[0]) + (fConst1049 * fRec189[1])) + (fConst1048 * fRec189[2]))))));
			fbargraph26 = (fSlow2 + (20 * log10f(fRec188[0])));
			fRec195[0] = (fTemp2 - (fConst1058 * ((fConst1057 * fRec195[2]) + (fConst1056 * fRec195[1]))));
			fRec194[0] = ((fConst1058 * (((fConst1060 * fRec195[0]) + (fConst1061 * fRec195[1])) + (fConst1060 * fRec195[2]))) - (fConst1055 * ((fConst1054 * fRec194[2]) + (fConst1053 * fRec194[1]))));
			fRec193[0] = ((fConst1055 * (((fConst1063 * fRec194[0]) + (fConst1064 * fRec194[1])) + (fConst1063 * fRec194[2]))) - (fConst1052 * ((fConst1051 * fRec193[2]) + (fConst1050 * fRec193[1]))));
			fRec192[0] = ((fSlow0 * fRec192[1]) + (fSlow1 * fabsf((fConst1052 * (((fConst1066 * fRec193[0]) + (fConst1067 * fRec193[1])) + (fConst1066 * fRec193[2]))))));
			fbargraph27 = (fSlow2 + (20 * log10f(fRec192[0])));
			fRec199[0] = (fTemp1 - (fConst1076 * ((fConst1075 * fRec199[2]) + (fConst1074 * fRec199[1]))));
			fRec198[0] = ((fConst1076 * (((fConst1078 * fRec199[0]) + (fConst1079 * fRec199[1])) + (fConst1078 * fRec199[2]))) - (fConst1073 * ((fConst1072 * fRec198[2]) + (fConst1071 * fRec198[1]))));
			fRec197[0] = ((fConst1073 * (((fConst1081 * fRec198[0]) + (fConst1082 * fRec198[1])) + (fConst1081 * fRec198[2]))) - (fConst1070 * ((fConst1069 * fRec197[2]) + (fConst1068 * fRec197[1]))));
			fRec196[0] = ((fSlow0 * fRec196[1]) + (fSlow1 * fabsf((fConst1070 * (((fConst1084 * fRec197[0]) + (fConst1085 * fRec197[1])) + (fConst1084 * fRec197[2]))))));
			fbargraph28 = (fSlow2 + (20 * log10f(fRec196[0])));
			fRec203[0] = (fTemp0 - (fConst1094 * ((fConst1093 * fRec203[2]) + (fConst1092 * fRec203[1]))));
			fRec202[0] = ((fConst1094 * (((fConst1096 * fRec203[0]) + (fConst1097 * fRec203[1])) + (fConst1096 * fRec203[2]))) - (fConst1091 * ((fConst1090 * fRec202[2]) + (fConst1089 * fRec202[1]))));
			fRec201[0] = ((fConst1091 * (((fConst1100 * fRec202[1]) + (fConst1099 * fRec202[0])) + (fConst1099 * fRec202[2]))) - (fConst1088 * ((fConst1087 * fRec201[2]) + (fConst1086 * fRec201[1]))));
			fRec200[0] = ((fSlow0 * fRec200[1]) + (fSlow1 * fabsf((fConst1088 * (((fConst1102 * fRec201[0]) + (fConst1103 * fRec201[1])) + (fConst1102 * fRec201[2]))))));
			fbargraph29 = (fSlow2 + (20 * log10f(fRec200[0])));
			float fTemp29 = fTemp0;
			output0[i] = (FAUSTFLOAT)fTemp29;
			output1[i] = (FAUSTFLOAT)fTemp29;
			// post processing
			fRec200[1] = fRec200[0];
			fRec201[2] = fRec201[1]; fRec201[1] = fRec201[0];
			fRec202[2] = fRec202[1]; fRec202[1] = fRec202[0];
			fRec203[2] = fRec203[1]; fRec203[1] = fRec203[0];
			fRec196[1] = fRec196[0];
			fRec197[2] = fRec197[1]; fRec197[1] = fRec197[0];
			fRec198[2] = fRec198[1]; fRec198[1] = fRec198[0];
			fRec199[2] = fRec199[1]; fRec199[1] = fRec199[0];
			fRec192[1] = fRec192[0];
			fRec193[2] = fRec193[1]; fRec193[1] = fRec193[0];
			fRec194[2] = fRec194[1]; fRec194[1] = fRec194[0];
			fRec195[2] = fRec195[1]; fRec195[1] = fRec195[0];
			fRec188[1] = fRec188[0];
			fRec189[2] = fRec189[1]; fRec189[1] = fRec189[0];
			fRec190[2] = fRec190[1]; fRec190[1] = fRec190[0];
			fRec191[2] = fRec191[1]; fRec191[1] = fRec191[0];
			fRec184[1] = fRec184[0];
			fRec185[2] = fRec185[1]; fRec185[1] = fRec185[0];
			fRec186[2] = fRec186[1]; fRec186[1] = fRec186[0];
			fRec187[2] = fRec187[1]; fRec187[1] = fRec187[0];
			fRec180[1] = fRec180[0];
			fRec181[2] = fRec181[1]; fRec181[1] = fRec181[0];
			fRec182[2] = fRec182[1]; fRec182[1] = fRec182[0];
			fRec183[2] = fRec183[1]; fRec183[1] = fRec183[0];
			fRec176[1] = fRec176[0];
			fRec177[2] = fRec177[1]; fRec177[1] = fRec177[0];
			fRec178[2] = fRec178[1]; fRec178[1] = fRec178[0];
			fRec179[2] = fRec179[1]; fRec179[1] = fRec179[0];
			fRec172[1] = fRec172[0];
			fRec173[2] = fRec173[1]; fRec173[1] = fRec173[0];
			fRec174[2] = fRec174[1]; fRec174[1] = fRec174[0];
			fRec175[2] = fRec175[1]; fRec175[1] = fRec175[0];
			fRec168[1] = fRec168[0];
			fRec169[2] = fRec169[1]; fRec169[1] = fRec169[0];
			fRec170[2] = fRec170[1]; fRec170[1] = fRec170[0];
			fRec171[2] = fRec171[1]; fRec171[1] = fRec171[0];
			fRec164[1] = fRec164[0];
			fRec165[2] = fRec165[1]; fRec165[1] = fRec165[0];
			fRec166[2] = fRec166[1]; fRec166[1] = fRec166[0];
			fRec167[2] = fRec167[1]; fRec167[1] = fRec167[0];
			fRec160[1] = fRec160[0];
			fRec161[2] = fRec161[1]; fRec161[1] = fRec161[0];
			fRec162[2] = fRec162[1]; fRec162[1] = fRec162[0];
			fRec163[2] = fRec163[1]; fRec163[1] = fRec163[0];
			fRec156[1] = fRec156[0];
			fRec157[2] = fRec157[1]; fRec157[1] = fRec157[0];
			fRec158[2] = fRec158[1]; fRec158[1] = fRec158[0];
			fRec159[2] = fRec159[1]; fRec159[1] = fRec159[0];
			fRec152[1] = fRec152[0];
			fRec153[2] = fRec153[1]; fRec153[1] = fRec153[0];
			fRec154[2] = fRec154[1]; fRec154[1] = fRec154[0];
			fRec155[2] = fRec155[1]; fRec155[1] = fRec155[0];
			fRec148[1] = fRec148[0];
			fRec149[2] = fRec149[1]; fRec149[1] = fRec149[0];
			fRec150[2] = fRec150[1]; fRec150[1] = fRec150[0];
			fRec151[2] = fRec151[1]; fRec151[1] = fRec151[0];
			fRec144[1] = fRec144[0];
			fRec145[2] = fRec145[1]; fRec145[1] = fRec145[0];
			fRec146[2] = fRec146[1]; fRec146[1] = fRec146[0];
			fRec147[2] = fRec147[1]; fRec147[1] = fRec147[0];
			fRec140[1] = fRec140[0];
			fRec141[2] = fRec141[1]; fRec141[1] = fRec141[0];
			fRec142[2] = fRec142[1]; fRec142[1] = fRec142[0];
			fRec143[2] = fRec143[1]; fRec143[1] = fRec143[0];
			fRec136[1] = fRec136[0];
			fRec137[2] = fRec137[1]; fRec137[1] = fRec137[0];
			fRec138[2] = fRec138[1]; fRec138[1] = fRec138[0];
			fRec139[2] = fRec139[1]; fRec139[1] = fRec139[0];
			fRec132[1] = fRec132[0];
			fRec133[2] = fRec133[1]; fRec133[1] = fRec133[0];
			fRec134[2] = fRec134[1]; fRec134[1] = fRec134[0];
			fRec135[2] = fRec135[1]; fRec135[1] = fRec135[0];
			fRec128[1] = fRec128[0];
			fRec129[2] = fRec129[1]; fRec129[1] = fRec129[0];
			fRec130[2] = fRec130[1]; fRec130[1] = fRec130[0];
			fRec131[2] = fRec131[1]; fRec131[1] = fRec131[0];
			fRec124[1] = fRec124[0];
			fRec125[2] = fRec125[1]; fRec125[1] = fRec125[0];
			fRec126[2] = fRec126[1]; fRec126[1] = fRec126[0];
			fRec127[2] = fRec127[1]; fRec127[1] = fRec127[0];
			fRec120[1] = fRec120[0];
			fRec121[2] = fRec121[1]; fRec121[1] = fRec121[0];
			fRec122[2] = fRec122[1]; fRec122[1] = fRec122[0];
			fRec123[2] = fRec123[1]; fRec123[1] = fRec123[0];
			fRec116[1] = fRec116[0];
			fRec117[2] = fRec117[1]; fRec117[1] = fRec117[0];
			fRec118[2] = fRec118[1]; fRec118[1] = fRec118[0];
			fRec119[2] = fRec119[1]; fRec119[1] = fRec119[0];
			fRec112[1] = fRec112[0];
			fRec113[2] = fRec113[1]; fRec113[1] = fRec113[0];
			fRec114[2] = fRec114[1]; fRec114[1] = fRec114[0];
			fRec115[2] = fRec115[1]; fRec115[1] = fRec115[0];
			fRec108[1] = fRec108[0];
			fRec109[2] = fRec109[1]; fRec109[1] = fRec109[0];
			fRec110[2] = fRec110[1]; fRec110[1] = fRec110[0];
			fRec111[2] = fRec111[1]; fRec111[1] = fRec111[0];
			fRec104[1] = fRec104[0];
			fRec105[2] = fRec105[1]; fRec105[1] = fRec105[0];
			fRec106[2] = fRec106[1]; fRec106[1] = fRec106[0];
			fRec107[2] = fRec107[1]; fRec107[1] = fRec107[0];
			fRec100[1] = fRec100[0];
			fRec101[2] = fRec101[1]; fRec101[1] = fRec101[0];
			fRec102[2] = fRec102[1]; fRec102[1] = fRec102[0];
			fRec103[2] = fRec103[1]; fRec103[1] = fRec103[0];
			fRec96[1] = fRec96[0];
			fRec97[2] = fRec97[1]; fRec97[1] = fRec97[0];
			fRec98[2] = fRec98[1]; fRec98[1] = fRec98[0];
			fRec99[2] = fRec99[1]; fRec99[1] = fRec99[0];
			fRec92[1] = fRec92[0];
			fRec93[2] = fRec93[1]; fRec93[1] = fRec93[0];
			fRec94[2] = fRec94[1]; fRec94[1] = fRec94[0];
			fRec95[2] = fRec95[1]; fRec95[1] = fRec95[0];
			fRec88[1] = fRec88[0];
			fRec89[2] = fRec89[1]; fRec89[1] = fRec89[0];
			fRec90[2] = fRec90[1]; fRec90[1] = fRec90[0];
			fRec91[2] = fRec91[1]; fRec91[1] = fRec91[0];
			fRec0[1] = fRec0[0];
			fRec1[2] = fRec1[1]; fRec1[1] = fRec1[0];
			fRec2[2] = fRec2[1]; fRec2[1] = fRec2[0];
			fRec3[2] = fRec3[1]; fRec3[1] = fRec3[0];
			fRec4[2] = fRec4[1]; fRec4[1] = fRec4[0];
			fRec5[2] = fRec5[1]; fRec5[1] = fRec5[0];
			fRec6[2] = fRec6[1]; fRec6[1] = fRec6[0];
			fRec7[2] = fRec7[1]; fRec7[1] = fRec7[0];
			fRec8[2] = fRec8[1]; fRec8[1] = fRec8[0];
			fRec9[2] = fRec9[1]; fRec9[1] = fRec9[0];
			fRec10[2] = fRec10[1]; fRec10[1] = fRec10[0];
			fRec11[2] = fRec11[1]; fRec11[1] = fRec11[0];
			fRec12[2] = fRec12[1]; fRec12[1] = fRec12[0];
			fRec13[2] = fRec13[1]; fRec13[1] = fRec13[0];
			fRec14[2] = fRec14[1]; fRec14[1] = fRec14[0];
			fRec15[2] = fRec15[1]; fRec15[1] = fRec15[0];
			fRec16[2] = fRec16[1]; fRec16[1] = fRec16[0];
			fRec17[2] = fRec17[1]; fRec17[1] = fRec17[0];
			fRec18[2] = fRec18[1]; fRec18[1] = fRec18[0];
			fRec19[2] = fRec19[1]; fRec19[1] = fRec19[0];
			fRec20[2] = fRec20[1]; fRec20[1] = fRec20[0];
			fRec21[2] = fRec21[1]; fRec21[1] = fRec21[0];
			fRec22[2] = fRec22[1]; fRec22[1] = fRec22[0];
			fRec23[2] = fRec23[1]; fRec23[1] = fRec23[0];
			fRec24[2] = fRec24[1]; fRec24[1] = fRec24[0];
			fRec25[2] = fRec25[1]; fRec25[1] = fRec25[0];
			fRec26[2] = fRec26[1]; fRec26[1] = fRec26[0];
			fRec27[2] = fRec27[1]; fRec27[1] = fRec27[0];
			fRec28[2] = fRec28[1]; fRec28[1] = fRec28[0];
			fRec29[2] = fRec29[1]; fRec29[1] = fRec29[0];
			fRec30[2] = fRec30[1]; fRec30[1] = fRec30[0];
			fRec31[2] = fRec31[1]; fRec31[1] = fRec31[0];
			fRec32[2] = fRec32[1]; fRec32[1] = fRec32[0];
			fRec33[2] = fRec33[1]; fRec33[1] = fRec33[0];
			fRec34[2] = fRec34[1]; fRec34[1] = fRec34[0];
			fRec35[2] = fRec35[1]; fRec35[1] = fRec35[0];
			fRec36[2] = fRec36[1]; fRec36[1] = fRec36[0];
			fRec37[2] = fRec37[1]; fRec37[1] = fRec37[0];
			fRec38[2] = fRec38[1]; fRec38[1] = fRec38[0];
			fRec39[2] = fRec39[1]; fRec39[1] = fRec39[0];
			fRec40[2] = fRec40[1]; fRec40[1] = fRec40[0];
			fRec41[2] = fRec41[1]; fRec41[1] = fRec41[0];
			fRec42[2] = fRec42[1]; fRec42[1] = fRec42[0];
			fRec43[2] = fRec43[1]; fRec43[1] = fRec43[0];
			fRec44[2] = fRec44[1]; fRec44[1] = fRec44[0];
			fRec45[2] = fRec45[1]; fRec45[1] = fRec45[0];
			fRec46[2] = fRec46[1]; fRec46[1] = fRec46[0];
			fRec47[2] = fRec47[1]; fRec47[1] = fRec47[0];
			fRec48[2] = fRec48[1]; fRec48[1] = fRec48[0];
			fRec49[2] = fRec49[1]; fRec49[1] = fRec49[0];
			fRec50[2] = fRec50[1]; fRec50[1] = fRec50[0];
			fRec51[2] = fRec51[1]; fRec51[1] = fRec51[0];
			fRec52[2] = fRec52[1]; fRec52[1] = fRec52[0];
			fRec53[2] = fRec53[1]; fRec53[1] = fRec53[0];
			fRec54[2] = fRec54[1]; fRec54[1] = fRec54[0];
			fRec55[2] = fRec55[1]; fRec55[1] = fRec55[0];
			fRec56[2] = fRec56[1]; fRec56[1] = fRec56[0];
			fRec57[2] = fRec57[1]; fRec57[1] = fRec57[0];
			fRec58[2] = fRec58[1]; fRec58[1] = fRec58[0];
			fRec59[2] = fRec59[1]; fRec59[1] = fRec59[0];
			fRec60[2] = fRec60[1]; fRec60[1] = fRec60[0];
			fRec61[2] = fRec61[1]; fRec61[1] = fRec61[0];
			fRec62[2] = fRec62[1]; fRec62[1] = fRec62[0];
			fRec63[2] = fRec63[1]; fRec63[1] = fRec63[0];
			fRec64[2] = fRec64[1]; fRec64[1] = fRec64[0];
			fRec65[2] = fRec65[1]; fRec65[1] = fRec65[0];
			fRec66[2] = fRec66[1]; fRec66[1] = fRec66[0];
			fRec67[2] = fRec67[1]; fRec67[1] = fRec67[0];
			fRec68[2] = fRec68[1]; fRec68[1] = fRec68[0];
			fRec69[2] = fRec69[1]; fRec69[1] = fRec69[0];
			fRec70[2] = fRec70[1]; fRec70[1] = fRec70[0];
			fRec71[2] = fRec71[1]; fRec71[1] = fRec71[0];
			fRec72[2] = fRec72[1]; fRec72[1] = fRec72[0];
			fRec73[2] = fRec73[1]; fRec73[1] = fRec73[0];
			fRec74[2] = fRec74[1]; fRec74[1] = fRec74[0];
			fRec75[2] = fRec75[1]; fRec75[1] = fRec75[0];
			fRec76[2] = fRec76[1]; fRec76[1] = fRec76[0];
			fRec77[2] = fRec77[1]; fRec77[1] = fRec77[0];
			fRec78[2] = fRec78[1]; fRec78[1] = fRec78[0];
			fRec79[2] = fRec79[1]; fRec79[1] = fRec79[0];
			fRec80[2] = fRec80[1]; fRec80[1] = fRec80[0];
			fRec81[2] = fRec81[1]; fRec81[1] = fRec81[0];
			fRec82[2] = fRec82[1]; fRec82[1] = fRec82[0];
			fRec83[2] = fRec83[1]; fRec83[1] = fRec83[0];
			fRec84[2] = fRec84[1]; fRec84[1] = fRec84[0];
			fRec85[2] = fRec85[1]; fRec85[1] = fRec85[0];
			fRec86[2] = fRec86[1]; fRec86[1] = fRec86[0];
			fRec87[2] = fRec87[1]; fRec87[1] = fRec87[0];
		}
	}
};



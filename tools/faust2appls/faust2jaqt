#!/bin/bash

#####################################################################
#                                                                   #
#               Compiles Faust programs to jack-qt                  #
#               (c) Grame, 2009                                     #
#                                                                   #
#####################################################################


#-------------------------------------------------------------------
# Analyze command arguments :
# faust options                 -> OPTIONS
# if -omp : -openmp or -fopenmp -> OPENMP
# existing *.dsp files          -> FILES
#
for p in $@; do
    if [ "$p" = -omp ]; then
        if [[ $CXX == "icpc" ]]; then
            OPENMP="-openmp"
        else
            OPENMP="-fopenmp"
        fi
    fi

    if [ ${p:0:1} = "-" ]; then
        OPTIONS="$OPTIONS $p"
    elif [[ -e "$p" ]]; then
        FILES="$FILES $p"
    else
        OPTIONS="$OPTIONS $p"        
    fi
done


#-------------------------------------------------------------------
# Check darwin specifics
#
if [[ $(uname) == Darwin ]]; then
    SPEC="-spec macx-g++"
    EXT=".app"
fi

#-------------------------------------------------------------------
# compile the *.dsp files
#
for p in $FILES; do

    CUR=$(pwd)
    f=$(basename "$p")
	SRCDIR=$(dirname "$p")

    # creates a temporary dir 
    TDR=$(mktemp -d)
	TMP="$TDR/${f%.dsp}"
    mkdir "$TMP"

    # compile faust to c++
	faust -a jack-qt.cpp $OPTIONS "$SRCDIR/$f" -o "$TMP/${f%.dsp}.cpp"

    # compile c++ to binary
    (
	    cd "$TMP"
        qmake -project "INCLUDEPATH+=/usr/local/lib/faust/" "LIBS+=-ljack" "HEADERS+=/usr/local/lib/faust/faustqt.h"
	    qmake $SPEC
        make
    ) > /dev/null

    rm -rf "$SRCDIR/${f%.dsp}$EXT"
    cp "$TMP/${f%.dsp}$EXT" "$SRCDIR/${f%.dsp}$EXT"
	rm -rf "$TDR"

    # collect binary file name for FaustGIDE
    BINARIES="$BINARIES$SRCDIR/${f%.dsp}$EXT;"
done

echo $BINARIES


